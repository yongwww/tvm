
metadata = tvm.ir.load_json("""{
  \"root\": 1, 
  \"nodes\": [
    {
      \"type_key\": \"\"
    }, 
    {
      \"type_key\": \"Map\", 
      \"keys\": [
        \"relax.expr.Constant\"
      ], 
      \"data\": [2]
    }, 
    {
      \"type_key\": \"Array\", 
      \"data\": [3]
    }, 
    {
      \"type_key\": \"relax.expr.Constant\", 
      \"attrs\": {
        \"_checked_type_\": \"10\", 
        \"data\": \"0\", 
        \"span\": \"0\", 
        \"struct_info_\": \"4\"
      }
    }, 
    {
      \"type_key\": \"relax.TensorStructInfo\", 
      \"attrs\": {
        \"dtype\": \"int32\", 
        \"ndim\": \"1\", 
        \"shape\": \"5\", 
        \"span\": \"0\", 
        \"vdevice\": \"0\"
      }
    }, 
    {
      \"type_key\": \"relax.expr.ShapeExpr\", 
      \"attrs\": {
        \"_checked_type_\": \"9\", 
        \"span\": \"0\", 
        \"struct_info_\": \"8\", 
        \"values\": \"6\"
      }
    }, 
    {
      \"type_key\": \"Array\", 
      \"data\": [7]
    }, 
    {
      \"type_key\": \"IntImm\", 
      \"attrs\": {
        \"dtype\": \"int64\", 
        \"span\": \"0\", 
        \"value\": \"1\"
      }
    }, 
    {
      \"type_key\": \"relax.ShapeStructInfo\", 
      \"attrs\": {
        \"ndim\": \"1\", 
        \"span\": \"0\", 
        \"values\": \"6\"
      }
    }, 
    {
      \"type_key\": \"relax.ShapeType\", 
      \"attrs\": {
        \"ndim\": \"1\", 
        \"span\": \"0\"
      }
    }, 
    {
      \"type_key\": \"relax.DynTensorType\", 
      \"attrs\": {
        \"dtype\": \"int32\", 
        \"ndim\": \"1\", 
        \"span\": \"0\"
      }
    }
  ], 
  \"b64ndarrays\": [
    \"P6G0lvBAXt0AAAAAAAAAAAEAAAAAAAAAAQAAAAAgAQABAAAAAAAAAAQAAAAAAAAAAAAAAA==\"
  ], 
  \"attrs\": {\"tvm_version\": \"0.15.dev0\"}
}""")
# from tvm.script import ir as I
# from tvm.script import relax as R

@I.ir_module
class Module:
    @R.function
    def _initialize_effect() -> R.Tuple(R.Object):
        with R.dataflow():
            _io: R.Object = R.null_value()
            lv: R.Tuple(R.Object) = (_io,)
            gv: R.Tuple(R.Object) = lv
            R.output(gv)
        return gv

    @R.function
    def get_image_embeddings(pixel_values: R.Tensor((1, 3, 1024, 1024), dtype="float32"), _io: R.Object, shared_image_embedding_positional_embedding: R.Tensor((2, 128), dtype="float32"), vision_encoder_patch_embed_projection_weight: R.Tensor((768, 3, 16, 16), dtype="float32"), vision_encoder_patch_embed_projection_bias: R.Tensor((768,), dtype="float32"), vision_encoder_pos_embed: R.Tensor((1, 64, 64, 768), dtype="float32"), vision_encoder_layers_0_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_0_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_0_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_0_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_0_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_0_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_0_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_0_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_0_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_0_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_0_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_0_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_0_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_0_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_1_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_1_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_1_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_1_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_1_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_1_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_1_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_1_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_2_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_2_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_2_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_attn_rel_pos_h: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_2_attn_rel_pos_w: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_2_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_2_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_2_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_2_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_3_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_3_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_3_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_3_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_3_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_3_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_3_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_3_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_4_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_4_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_4_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_4_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_4_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_4_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_4_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_4_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_5_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_5_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_5_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_attn_rel_pos_h: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_5_attn_rel_pos_w: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_5_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_5_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_5_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_5_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_6_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_6_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_6_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_6_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_6_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_6_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_6_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_6_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_7_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_7_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_7_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_7_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_7_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_7_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_7_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_7_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_8_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_8_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_8_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_attn_rel_pos_h: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_8_attn_rel_pos_w: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_8_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_8_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_8_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_8_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_9_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_9_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_9_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_9_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_9_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_9_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_9_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_9_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_10_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_10_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_10_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_10_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_10_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_10_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_10_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_10_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_11_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_11_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_11_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_attn_rel_pos_h: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_11_attn_rel_pos_w: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_11_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_11_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_11_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_11_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_neck_conv1_weight: R.Tensor((256, 768, 1, 1), dtype="float32"), vision_encoder_neck_layer_norm1_weight: R.Tensor((256,), dtype="float32"), vision_encoder_neck_layer_norm1_bias: R.Tensor((256,), dtype="float32"), vision_encoder_neck_conv2_weight: R.Tensor((256, 256, 3, 3), dtype="float32"), vision_encoder_neck_layer_norm2_weight: R.Tensor((256,), dtype="float32"), vision_encoder_neck_layer_norm2_bias: R.Tensor((256,), dtype="float32"), prompt_encoder_shared_embedding_positional_embedding: R.Tensor((2, 128), dtype="float32"), prompt_encoder_mask_embed_conv1_weight: R.Tensor((4, 1, 2, 2), dtype="float32"), prompt_encoder_mask_embed_conv1_bias: R.Tensor((4,), dtype="float32"), prompt_encoder_mask_embed_conv2_weight: R.Tensor((16, 4, 2, 2), dtype="float32"), prompt_encoder_mask_embed_conv2_bias: R.Tensor((16,), dtype="float32"), prompt_encoder_mask_embed_conv3_weight: R.Tensor((256, 16, 1, 1), dtype="float32"), prompt_encoder_mask_embed_conv3_bias: R.Tensor((256,), dtype="float32"), prompt_encoder_mask_embed_layer_norm1_weight: R.Tensor((4,), dtype="float32"), prompt_encoder_mask_embed_layer_norm1_bias: R.Tensor((4,), dtype="float32"), prompt_encoder_mask_embed_layer_norm2_weight: R.Tensor((16,), dtype="float32"), prompt_encoder_mask_embed_layer_norm2_bias: R.Tensor((16,), dtype="float32"), prompt_encoder_no_mask_embed_weight: R.Tensor((1, 256), dtype="float32"), prompt_encoder_point_embed_0_weight: R.Tensor((1, 256), dtype="float32"), prompt_encoder_point_embed_1_weight: R.Tensor((1, 256), dtype="float32"), prompt_encoder_point_embed_2_weight: R.Tensor((1, 256), dtype="float32"), prompt_encoder_point_embed_3_weight: R.Tensor((1, 256), dtype="float32"), prompt_encoder_not_a_point_embed_weight: R.Tensor((1, 256), dtype="float32"), mask_decoder_iou_token_weight: R.Tensor((1, 256), dtype="float32"), mask_decoder_mask_tokens_weight: R.Tensor((4, 256), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_q_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_q_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_k_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_k_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_v_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_v_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_out_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm1_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm1_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_q_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_q_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_k_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_k_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_v_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_v_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_out_proj_weight: R.Tensor((256, 128), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm2_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm2_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_mlp_lin1_weight: R.Tensor((2048, 256), dtype="float32"), mask_decoder_transformer_layers_0_mlp_lin1_bias: R.Tensor((2048,), dtype="float32"), mask_decoder_transformer_layers_0_mlp_lin2_weight: R.Tensor((256, 2048), dtype="float32"), mask_decoder_transformer_layers_0_mlp_lin2_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm3_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm3_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm4_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm4_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_q_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_q_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_k_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_k_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_v_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_v_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_out_proj_weight: R.Tensor((256, 128), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_q_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_q_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_k_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_k_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_v_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_v_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_out_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm1_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm1_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_q_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_q_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_k_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_k_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_v_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_v_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_out_proj_weight: R.Tensor((256, 128), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm2_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm2_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_mlp_lin1_weight: R.Tensor((2048, 256), dtype="float32"), mask_decoder_transformer_layers_1_mlp_lin1_bias: R.Tensor((2048,), dtype="float32"), mask_decoder_transformer_layers_1_mlp_lin2_weight: R.Tensor((256, 2048), dtype="float32"), mask_decoder_transformer_layers_1_mlp_lin2_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm3_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm3_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm4_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm4_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_q_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_q_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_k_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_k_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_v_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_v_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_out_proj_weight: R.Tensor((256, 128), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_q_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_q_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_k_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_k_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_v_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_v_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_out_proj_weight: R.Tensor((256, 128), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layer_norm_final_attn_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layer_norm_final_attn_bias: R.Tensor((256,), dtype="float32"), mask_decoder_upscale_conv1_weight: R.Tensor((256, 64, 2, 2), dtype="float32"), mask_decoder_upscale_conv1_bias: R.Tensor((64,), dtype="float32"), mask_decoder_upscale_conv2_weight: R.Tensor((64, 32, 2, 2), dtype="float32"), mask_decoder_upscale_conv2_bias: R.Tensor((32,), dtype="float32"), mask_decoder_upscale_layer_norm_weight: R.Tensor((64,), dtype="float32"), mask_decoder_upscale_layer_norm_bias: R.Tensor((64,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_proj_in_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_proj_in_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_proj_out_weight: R.Tensor((32, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_proj_out_bias: R.Tensor((32,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_layers_0_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_layers_0_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_proj_in_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_proj_in_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_proj_out_weight: R.Tensor((32, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_proj_out_bias: R.Tensor((32,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_layers_0_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_layers_0_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_proj_in_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_proj_in_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_proj_out_weight: R.Tensor((32, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_proj_out_bias: R.Tensor((32,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_layers_0_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_layers_0_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_proj_in_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_proj_in_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_proj_out_weight: R.Tensor((32, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_proj_out_bias: R.Tensor((32,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_layers_0_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_layers_0_bias: R.Tensor((256,), dtype="float32"), mask_decoder_iou_prediction_head_proj_in_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_iou_prediction_head_proj_in_bias: R.Tensor((256,), dtype="float32"), mask_decoder_iou_prediction_head_proj_out_weight: R.Tensor((4, 256), dtype="float32"), mask_decoder_iou_prediction_head_proj_out_bias: R.Tensor((4,), dtype="float32"), mask_decoder_iou_prediction_head_layers_0_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_iou_prediction_head_layers_0_bias: R.Tensor((256,), dtype="float32")) -> R.Tuple(R.Tensor((1, 256, 64, 64), dtype="float32"), R.Tuple(R.Object)):
        R.func_attr({"num_input": 2})
        with R.dataflow():
            lv1: R.Tensor((1, 768, 64, 64), dtype="float32") = R.nn.conv2d(pixel_values, vision_encoder_patch_embed_projection_weight, strides=[16, 16], padding=[0, 0, 0, 0], dilation=[1, 1], groups=1, data_layout="NCHW", kernel_layout="OIHW", out_layout="NCHW", out_dtype="void")
            lv2: R.Tensor((1, 768, 1, 1), dtype="float32") = R.reshape(vision_encoder_patch_embed_projection_bias, R.shape([1, 768, 1, 1]))
            conv2d: R.Tensor((1, 768, 64, 64), dtype="float32") = R.add(lv1, lv2)
            permute_dims: R.Tensor((1, 64, 64, 768), dtype="float32") = R.permute_dims(conv2d, axes=[0, 2, 3, 1])
            add: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(permute_dims, vision_encoder_pos_embed)
            layer_norm: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add, vision_encoder_layers_0_layer_norm1_weight, vision_encoder_layers_0_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims1: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape, axes=[0, 1, 3, 2, 4, 5])
            reshape1: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims1, R.shape([25, 14, 14, 768]))
            permute_dims2: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_0_attn_qkv_weight, axes=None)
            matmul: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape1, permute_dims2, out_dtype="void")
            add1: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul, vision_encoder_layers_0_attn_qkv_bias)
            reshape2: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add1, R.shape([25, 196, 3, 12, 64]))
            permute_dims3: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape2, axes=[2, 0, 3, 1, 4])
            reshape3: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims3, R.shape([3, 300, 196, 64]))
            split: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape3, indices_or_sections=3, axis=0)
            split_0: R.Tensor((1, 300, 196, 64), dtype="float32") = split[0]
            split_1: R.Tensor((1, 300, 196, 64), dtype="float32") = split[1]
            split_2: R.Tensor((1, 300, 196, 64), dtype="float32") = split[2]
            unbind: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_0, axis=[0])
            unbind1: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_1, axis=[0])
            unbind2: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_2, axis=[0])
            mul: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind, R.const(0.125, "float32"))
            permute_dims4: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind1, axes=[0, 2, 1])
            matmul1: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul, permute_dims4, out_dtype="void")
            reshape4: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_0_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims5: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape4, axes=[0, 2, 1])
            reshape5: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims5, R.shape([64, 27]))
            permute_dims6: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape5, axes=[1, 0])
            arange: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange, axis=[0])
            mul1: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims, R.const(1, "int64"))
            arange1: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims1: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange1, axis=[1])
            mul2: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims1, R.const(1, "int64"))
            subtract: R.Tensor((14, 14), dtype="int64") = R.subtract(mul1, mul2)
            add2: R.Tensor((14, 14), dtype="int64") = R.add(subtract, R.const(13, "int64"))
            take: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims6, add2, axis=0)
            reshape6: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_0_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims7: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape6, axes=[0, 2, 1])
            reshape7: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims7, R.shape([64, 27]))
            permute_dims8: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape7, axes=[1, 0])
            arange2: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims2: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange2, axis=[0])
            mul3: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims2, R.const(1, "int64"))
            arange3: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims3: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange3, axis=[1])
            mul4: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims3, R.const(1, "int64"))
            subtract1: R.Tensor((14, 14), dtype="int64") = R.subtract(mul3, mul4)
            add3: R.Tensor((14, 14), dtype="int64") = R.add(subtract1, R.const(13, "int64"))
            take1: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims8, add3, axis=0)
            reshape8: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind, R.shape([300, 14, 14, 64]))
            einsum: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape8, take), subscripts="bhwc,hkc->bhwk")
            einsum1: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape8, take1), subscripts="bhwc,wkc->bhwk")
            reshape9: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul1, R.shape([300, 14, 14, 14, 14]))
            expand_dims4: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum, axis=[3])
            expand_dims5: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum1, axis=[2])
            add4: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape9, expand_dims4)
            add5: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add4, expand_dims5)
            reshape10: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add5, R.shape([300, 196, 196]))
            softmax: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape10, axis=-1)
            matmul2: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax, unbind2, out_dtype="void")
            reshape11: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul2, R.shape([25, 12, 14, 14, 64]))
            permute_dims9: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape11, axes=[0, 2, 3, 1, 4])
            reshape12: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims9, R.shape([25, 14, 14, 768]))
            permute_dims10: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_0_attn_proj_weight, axes=None)
            matmul3: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape12, permute_dims10, out_dtype="void")
            add6: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul3, vision_encoder_layers_0_attn_proj_bias)
            reshape13: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add6, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims11: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape13, axes=[0, 1, 3, 2, 4, 5])
            reshape14: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims11, R.shape([1, 70, 70, 768]))
            strided_slice: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape14, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add7: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add, strided_slice)
            layer_norm1: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add7, vision_encoder_layers_0_layer_norm2_weight, vision_encoder_layers_0_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims12: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_0_mlp_lin1_weight, axes=None)
            matmul4: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm1, permute_dims12, out_dtype="void")
            add8: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul4, vision_encoder_layers_0_mlp_lin1_bias)
            gelu: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add8)
            permute_dims13: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_0_mlp_lin2_weight, axes=None)
            matmul5: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu, permute_dims13, out_dtype="void")
            add9: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul5, vision_encoder_layers_0_mlp_lin2_bias)
            add10: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add7, add9)
            layer_norm2: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add10, vision_encoder_layers_1_layer_norm1_weight, vision_encoder_layers_1_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad1: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm2, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape15: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad1, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims14: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape15, axes=[0, 1, 3, 2, 4, 5])
            reshape16: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims14, R.shape([25, 14, 14, 768]))
            permute_dims15: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_1_attn_qkv_weight, axes=None)
            matmul6: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape16, permute_dims15, out_dtype="void")
            add11: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul6, vision_encoder_layers_1_attn_qkv_bias)
            reshape17: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add11, R.shape([25, 196, 3, 12, 64]))
            permute_dims16: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape17, axes=[2, 0, 3, 1, 4])
            reshape18: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims16, R.shape([3, 300, 196, 64]))
            split1: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape18, indices_or_sections=3, axis=0)
            split_01: R.Tensor((1, 300, 196, 64), dtype="float32") = split1[0]
            split_11: R.Tensor((1, 300, 196, 64), dtype="float32") = split1[1]
            split_21: R.Tensor((1, 300, 196, 64), dtype="float32") = split1[2]
            unbind3: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_01, axis=[0])
            unbind4: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_11, axis=[0])
            unbind5: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_21, axis=[0])
            mul5: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind3, R.const(0.125, "float32"))
            permute_dims17: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind4, axes=[0, 2, 1])
            matmul7: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul5, permute_dims17, out_dtype="void")
            reshape19: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_1_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims18: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape19, axes=[0, 2, 1])
            reshape20: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims18, R.shape([64, 27]))
            permute_dims19: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape20, axes=[1, 0])
            arange4: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims6: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange4, axis=[0])
            mul6: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims6, R.const(1, "int64"))
            arange5: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims7: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange5, axis=[1])
            mul7: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims7, R.const(1, "int64"))
            subtract2: R.Tensor((14, 14), dtype="int64") = R.subtract(mul6, mul7)
            add12: R.Tensor((14, 14), dtype="int64") = R.add(subtract2, R.const(13, "int64"))
            take2: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims19, add12, axis=0)
            reshape21: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_1_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims20: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape21, axes=[0, 2, 1])
            reshape22: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims20, R.shape([64, 27]))
            permute_dims21: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape22, axes=[1, 0])
            arange6: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims8: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange6, axis=[0])
            mul8: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims8, R.const(1, "int64"))
            arange7: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims9: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange7, axis=[1])
            mul9: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims9, R.const(1, "int64"))
            subtract3: R.Tensor((14, 14), dtype="int64") = R.subtract(mul8, mul9)
            add13: R.Tensor((14, 14), dtype="int64") = R.add(subtract3, R.const(13, "int64"))
            take3: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims21, add13, axis=0)
            reshape23: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind3, R.shape([300, 14, 14, 64]))
            einsum2: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape23, take2), subscripts="bhwc,hkc->bhwk")
            einsum3: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape23, take3), subscripts="bhwc,wkc->bhwk")
            reshape24: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul7, R.shape([300, 14, 14, 14, 14]))
            expand_dims10: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum2, axis=[3])
            expand_dims11: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum3, axis=[2])
            add14: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape24, expand_dims10)
            add15: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add14, expand_dims11)
            reshape25: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add15, R.shape([300, 196, 196]))
            softmax1: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape25, axis=-1)
            matmul8: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax1, unbind5, out_dtype="void")
            reshape26: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul8, R.shape([25, 12, 14, 14, 64]))
            permute_dims22: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape26, axes=[0, 2, 3, 1, 4])
            reshape27: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims22, R.shape([25, 14, 14, 768]))
            permute_dims23: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_1_attn_proj_weight, axes=None)
            matmul9: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape27, permute_dims23, out_dtype="void")
            add16: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul9, vision_encoder_layers_1_attn_proj_bias)
            reshape28: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add16, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims24: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape28, axes=[0, 1, 3, 2, 4, 5])
            reshape29: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims24, R.shape([1, 70, 70, 768]))
            strided_slice1: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape29, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add17: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add10, strided_slice1)
            layer_norm3: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add17, vision_encoder_layers_1_layer_norm2_weight, vision_encoder_layers_1_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims25: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_1_mlp_lin1_weight, axes=None)
            matmul10: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm3, permute_dims25, out_dtype="void")
            add18: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul10, vision_encoder_layers_1_mlp_lin1_bias)
            gelu1: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add18)
            permute_dims26: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_1_mlp_lin2_weight, axes=None)
            matmul11: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu1, permute_dims26, out_dtype="void")
            add19: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul11, vision_encoder_layers_1_mlp_lin2_bias)
            add20: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add17, add19)
            layer_norm4: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add20, vision_encoder_layers_2_layer_norm1_weight, vision_encoder_layers_2_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims27: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_2_attn_qkv_weight, axes=None)
            matmul12: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.matmul(layer_norm4, permute_dims27, out_dtype="void")
            add21: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.add(matmul12, vision_encoder_layers_2_attn_qkv_bias)
            reshape30: R.Tensor((1, 4096, 3, 12, 64), dtype="float32") = R.reshape(add21, R.shape([1, 4096, 3, 12, 64]))
            permute_dims28: R.Tensor((3, 1, 12, 4096, 64), dtype="float32") = R.permute_dims(reshape30, axes=[2, 0, 3, 1, 4])
            reshape31: R.Tensor((3, 12, 4096, 64), dtype="float32") = R.reshape(permute_dims28, R.shape([3, 12, 4096, 64]))
            split2: R.Tuple(R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32")) = R.split(reshape31, indices_or_sections=3, axis=0)
            split_02: R.Tensor((1, 12, 4096, 64), dtype="float32") = split2[0]
            split_12: R.Tensor((1, 12, 4096, 64), dtype="float32") = split2[1]
            split_22: R.Tensor((1, 12, 4096, 64), dtype="float32") = split2[2]
            unbind6: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_02, axis=[0])
            unbind7: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_12, axis=[0])
            unbind8: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_22, axis=[0])
            mul10: R.Tensor((12, 4096, 64), dtype="float32") = R.multiply(unbind6, R.const(0.125, "float32"))
            permute_dims29: R.Tensor((12, 64, 4096), dtype="float32") = R.permute_dims(unbind7, axes=[0, 2, 1])
            matmul13: R.Tensor((12, 4096, 4096), dtype="float32") = R.matmul(mul10, permute_dims29, out_dtype="void")
            reshape32: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_2_attn_rel_pos_h, R.shape([1, 127, 64]))
            permute_dims30: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape32, axes=[0, 2, 1])
            reshape33: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims30, R.shape([64, 127]))
            permute_dims31: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape33, axes=[1, 0])
            arange8: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims12: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange8, axis=[0])
            mul11: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims12, R.const(1, "int64"))
            arange9: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims13: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange9, axis=[1])
            mul12: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims13, R.const(1, "int64"))
            subtract4: R.Tensor((64, 64), dtype="int64") = R.subtract(mul11, mul12)
            add22: R.Tensor((64, 64), dtype="int64") = R.add(subtract4, R.const(63, "int64"))
            take4: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims31, add22, axis=0)
            reshape34: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_2_attn_rel_pos_w, R.shape([1, 127, 64]))
            permute_dims32: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape34, axes=[0, 2, 1])
            reshape35: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims32, R.shape([64, 127]))
            permute_dims33: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape35, axes=[1, 0])
            arange10: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims14: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange10, axis=[0])
            mul13: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims14, R.const(1, "int64"))
            arange11: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims15: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange11, axis=[1])
            mul14: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims15, R.const(1, "int64"))
            subtract5: R.Tensor((64, 64), dtype="int64") = R.subtract(mul13, mul14)
            add23: R.Tensor((64, 64), dtype="int64") = R.add(subtract5, R.const(63, "int64"))
            take5: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims33, add23, axis=0)
            reshape36: R.Tensor((12, 64, 64, 64), dtype="float32") = R.reshape(unbind6, R.shape([12, 64, 64, 64]))
            einsum4: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape36, take4), subscripts="bhwc,hkc->bhwk")
            einsum5: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape36, take5), subscripts="bhwc,wkc->bhwk")
            reshape37: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.reshape(matmul13, R.shape([12, 64, 64, 64, 64]))
            expand_dims16: R.Tensor((12, 64, 64, 1, 64), dtype="float32") = R.expand_dims(einsum4, axis=[3])
            expand_dims17: R.Tensor((12, 64, 1, 64, 64), dtype="float32") = R.expand_dims(einsum5, axis=[2])
            add24: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(reshape37, expand_dims16)
            add25: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(add24, expand_dims17)
            reshape38: R.Tensor((12, 4096, 4096), dtype="float32") = R.reshape(add25, R.shape([12, 4096, 4096]))
            softmax2: R.Tensor((12, 4096, 4096), dtype="float32") = R.nn.softmax(reshape38, axis=-1)
            matmul14: R.Tensor((12, 4096, 64), dtype="float32") = R.matmul(softmax2, unbind8, out_dtype="void")
            reshape39: R.Tensor((1, 12, 64, 64, 64), dtype="float32") = R.reshape(matmul14, R.shape([1, 12, 64, 64, 64]))
            permute_dims34: R.Tensor((1, 64, 64, 12, 64), dtype="float32") = R.permute_dims(reshape39, axes=[0, 2, 3, 1, 4])
            reshape40: R.Tensor((1, 64, 64, 768), dtype="float32") = R.reshape(permute_dims34, R.shape([1, 64, 64, 768]))
            permute_dims35: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_2_attn_proj_weight, axes=None)
            matmul15: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(reshape40, permute_dims35, out_dtype="void")
            add26: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul15, vision_encoder_layers_2_attn_proj_bias)
            add27: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add20, add26)
            layer_norm5: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add27, vision_encoder_layers_2_layer_norm2_weight, vision_encoder_layers_2_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims36: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_2_mlp_lin1_weight, axes=None)
            matmul16: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm5, permute_dims36, out_dtype="void")
            add28: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul16, vision_encoder_layers_2_mlp_lin1_bias)
            gelu2: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add28)
            permute_dims37: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_2_mlp_lin2_weight, axes=None)
            matmul17: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu2, permute_dims37, out_dtype="void")
            add29: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul17, vision_encoder_layers_2_mlp_lin2_bias)
            add30: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add27, add29)
            layer_norm6: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add30, vision_encoder_layers_3_layer_norm1_weight, vision_encoder_layers_3_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad2: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm6, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape41: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad2, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims38: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape41, axes=[0, 1, 3, 2, 4, 5])
            reshape42: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims38, R.shape([25, 14, 14, 768]))
            permute_dims39: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_3_attn_qkv_weight, axes=None)
            matmul18: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape42, permute_dims39, out_dtype="void")
            add31: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul18, vision_encoder_layers_3_attn_qkv_bias)
            reshape43: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add31, R.shape([25, 196, 3, 12, 64]))
            permute_dims40: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape43, axes=[2, 0, 3, 1, 4])
            reshape44: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims40, R.shape([3, 300, 196, 64]))
            split3: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape44, indices_or_sections=3, axis=0)
            split_03: R.Tensor((1, 300, 196, 64), dtype="float32") = split3[0]
            split_13: R.Tensor((1, 300, 196, 64), dtype="float32") = split3[1]
            split_23: R.Tensor((1, 300, 196, 64), dtype="float32") = split3[2]
            unbind9: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_03, axis=[0])
            unbind10: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_13, axis=[0])
            unbind11: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_23, axis=[0])
            mul15: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind9, R.const(0.125, "float32"))
            permute_dims41: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind10, axes=[0, 2, 1])
            matmul19: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul15, permute_dims41, out_dtype="void")
            reshape45: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_3_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims42: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape45, axes=[0, 2, 1])
            reshape46: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims42, R.shape([64, 27]))
            permute_dims43: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape46, axes=[1, 0])
            arange12: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims18: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange12, axis=[0])
            mul16: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims18, R.const(1, "int64"))
            arange13: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims19: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange13, axis=[1])
            mul17: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims19, R.const(1, "int64"))
            subtract6: R.Tensor((14, 14), dtype="int64") = R.subtract(mul16, mul17)
            add32: R.Tensor((14, 14), dtype="int64") = R.add(subtract6, R.const(13, "int64"))
            take6: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims43, add32, axis=0)
            reshape47: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_3_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims44: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape47, axes=[0, 2, 1])
            reshape48: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims44, R.shape([64, 27]))
            permute_dims45: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape48, axes=[1, 0])
            arange14: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims20: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange14, axis=[0])
            mul18: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims20, R.const(1, "int64"))
            arange15: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims21: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange15, axis=[1])
            mul19: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims21, R.const(1, "int64"))
            subtract7: R.Tensor((14, 14), dtype="int64") = R.subtract(mul18, mul19)
            add33: R.Tensor((14, 14), dtype="int64") = R.add(subtract7, R.const(13, "int64"))
            take7: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims45, add33, axis=0)
            reshape49: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind9, R.shape([300, 14, 14, 64]))
            einsum6: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape49, take6), subscripts="bhwc,hkc->bhwk")
            einsum7: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape49, take7), subscripts="bhwc,wkc->bhwk")
            reshape50: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul19, R.shape([300, 14, 14, 14, 14]))
            expand_dims22: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum6, axis=[3])
            expand_dims23: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum7, axis=[2])
            add34: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape50, expand_dims22)
            add35: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add34, expand_dims23)
            reshape51: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add35, R.shape([300, 196, 196]))
            softmax3: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape51, axis=-1)
            matmul20: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax3, unbind11, out_dtype="void")
            reshape52: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul20, R.shape([25, 12, 14, 14, 64]))
            permute_dims46: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape52, axes=[0, 2, 3, 1, 4])
            reshape53: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims46, R.shape([25, 14, 14, 768]))
            permute_dims47: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_3_attn_proj_weight, axes=None)
            matmul21: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape53, permute_dims47, out_dtype="void")
            add36: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul21, vision_encoder_layers_3_attn_proj_bias)
            reshape54: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add36, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims48: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape54, axes=[0, 1, 3, 2, 4, 5])
            reshape55: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims48, R.shape([1, 70, 70, 768]))
            strided_slice2: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape55, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add37: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add30, strided_slice2)
            layer_norm7: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add37, vision_encoder_layers_3_layer_norm2_weight, vision_encoder_layers_3_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims49: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_3_mlp_lin1_weight, axes=None)
            matmul22: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm7, permute_dims49, out_dtype="void")
            add38: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul22, vision_encoder_layers_3_mlp_lin1_bias)
            gelu3: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add38)
            permute_dims50: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_3_mlp_lin2_weight, axes=None)
            matmul23: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu3, permute_dims50, out_dtype="void")
            add39: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul23, vision_encoder_layers_3_mlp_lin2_bias)
            add40: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add37, add39)
            layer_norm8: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add40, vision_encoder_layers_4_layer_norm1_weight, vision_encoder_layers_4_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad3: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm8, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape56: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad3, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims51: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape56, axes=[0, 1, 3, 2, 4, 5])
            reshape57: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims51, R.shape([25, 14, 14, 768]))
            permute_dims52: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_4_attn_qkv_weight, axes=None)
            matmul24: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape57, permute_dims52, out_dtype="void")
            add41: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul24, vision_encoder_layers_4_attn_qkv_bias)
            reshape58: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add41, R.shape([25, 196, 3, 12, 64]))
            permute_dims53: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape58, axes=[2, 0, 3, 1, 4])
            reshape59: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims53, R.shape([3, 300, 196, 64]))
            split4: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape59, indices_or_sections=3, axis=0)
            split_04: R.Tensor((1, 300, 196, 64), dtype="float32") = split4[0]
            split_14: R.Tensor((1, 300, 196, 64), dtype="float32") = split4[1]
            split_24: R.Tensor((1, 300, 196, 64), dtype="float32") = split4[2]
            unbind12: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_04, axis=[0])
            unbind13: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_14, axis=[0])
            unbind14: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_24, axis=[0])
            mul20: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind12, R.const(0.125, "float32"))
            permute_dims54: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind13, axes=[0, 2, 1])
            matmul25: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul20, permute_dims54, out_dtype="void")
            reshape60: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_4_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims55: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape60, axes=[0, 2, 1])
            reshape61: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims55, R.shape([64, 27]))
            permute_dims56: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape61, axes=[1, 0])
            arange16: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims24: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange16, axis=[0])
            mul21: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims24, R.const(1, "int64"))
            arange17: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims25: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange17, axis=[1])
            mul22: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims25, R.const(1, "int64"))
            subtract8: R.Tensor((14, 14), dtype="int64") = R.subtract(mul21, mul22)
            add42: R.Tensor((14, 14), dtype="int64") = R.add(subtract8, R.const(13, "int64"))
            take8: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims56, add42, axis=0)
            reshape62: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_4_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims57: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape62, axes=[0, 2, 1])
            reshape63: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims57, R.shape([64, 27]))
            permute_dims58: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape63, axes=[1, 0])
            arange18: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims26: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange18, axis=[0])
            mul23: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims26, R.const(1, "int64"))
            arange19: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims27: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange19, axis=[1])
            mul24: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims27, R.const(1, "int64"))
            subtract9: R.Tensor((14, 14), dtype="int64") = R.subtract(mul23, mul24)
            add43: R.Tensor((14, 14), dtype="int64") = R.add(subtract9, R.const(13, "int64"))
            take9: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims58, add43, axis=0)
            reshape64: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind12, R.shape([300, 14, 14, 64]))
            einsum8: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape64, take8), subscripts="bhwc,hkc->bhwk")
            einsum9: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape64, take9), subscripts="bhwc,wkc->bhwk")
            reshape65: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul25, R.shape([300, 14, 14, 14, 14]))
            expand_dims28: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum8, axis=[3])
            expand_dims29: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum9, axis=[2])
            add44: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape65, expand_dims28)
            add45: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add44, expand_dims29)
            reshape66: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add45, R.shape([300, 196, 196]))
            softmax4: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape66, axis=-1)
            matmul26: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax4, unbind14, out_dtype="void")
            reshape67: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul26, R.shape([25, 12, 14, 14, 64]))
            permute_dims59: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape67, axes=[0, 2, 3, 1, 4])
            reshape68: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims59, R.shape([25, 14, 14, 768]))
            permute_dims60: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_4_attn_proj_weight, axes=None)
            matmul27: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape68, permute_dims60, out_dtype="void")
            add46: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul27, vision_encoder_layers_4_attn_proj_bias)
            reshape69: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add46, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims61: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape69, axes=[0, 1, 3, 2, 4, 5])
            reshape70: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims61, R.shape([1, 70, 70, 768]))
            strided_slice3: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape70, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add47: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add40, strided_slice3)
            layer_norm9: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add47, vision_encoder_layers_4_layer_norm2_weight, vision_encoder_layers_4_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims62: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_4_mlp_lin1_weight, axes=None)
            matmul28: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm9, permute_dims62, out_dtype="void")
            add48: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul28, vision_encoder_layers_4_mlp_lin1_bias)
            gelu4: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add48)
            permute_dims63: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_4_mlp_lin2_weight, axes=None)
            matmul29: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu4, permute_dims63, out_dtype="void")
            add49: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul29, vision_encoder_layers_4_mlp_lin2_bias)
            add50: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add47, add49)
            layer_norm10: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add50, vision_encoder_layers_5_layer_norm1_weight, vision_encoder_layers_5_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims64: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_5_attn_qkv_weight, axes=None)
            matmul30: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.matmul(layer_norm10, permute_dims64, out_dtype="void")
            add51: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.add(matmul30, vision_encoder_layers_5_attn_qkv_bias)
            reshape71: R.Tensor((1, 4096, 3, 12, 64), dtype="float32") = R.reshape(add51, R.shape([1, 4096, 3, 12, 64]))
            permute_dims65: R.Tensor((3, 1, 12, 4096, 64), dtype="float32") = R.permute_dims(reshape71, axes=[2, 0, 3, 1, 4])
            reshape72: R.Tensor((3, 12, 4096, 64), dtype="float32") = R.reshape(permute_dims65, R.shape([3, 12, 4096, 64]))
            split5: R.Tuple(R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32")) = R.split(reshape72, indices_or_sections=3, axis=0)
            split_05: R.Tensor((1, 12, 4096, 64), dtype="float32") = split5[0]
            split_15: R.Tensor((1, 12, 4096, 64), dtype="float32") = split5[1]
            split_25: R.Tensor((1, 12, 4096, 64), dtype="float32") = split5[2]
            unbind15: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_05, axis=[0])
            unbind16: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_15, axis=[0])
            unbind17: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_25, axis=[0])
            mul25: R.Tensor((12, 4096, 64), dtype="float32") = R.multiply(unbind15, R.const(0.125, "float32"))
            permute_dims66: R.Tensor((12, 64, 4096), dtype="float32") = R.permute_dims(unbind16, axes=[0, 2, 1])
            matmul31: R.Tensor((12, 4096, 4096), dtype="float32") = R.matmul(mul25, permute_dims66, out_dtype="void")
            reshape73: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_5_attn_rel_pos_h, R.shape([1, 127, 64]))
            permute_dims67: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape73, axes=[0, 2, 1])
            reshape74: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims67, R.shape([64, 127]))
            permute_dims68: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape74, axes=[1, 0])
            arange20: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims30: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange20, axis=[0])
            mul26: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims30, R.const(1, "int64"))
            arange21: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims31: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange21, axis=[1])
            mul27: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims31, R.const(1, "int64"))
            subtract10: R.Tensor((64, 64), dtype="int64") = R.subtract(mul26, mul27)
            add52: R.Tensor((64, 64), dtype="int64") = R.add(subtract10, R.const(63, "int64"))
            take10: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims68, add52, axis=0)
            reshape75: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_5_attn_rel_pos_w, R.shape([1, 127, 64]))
            permute_dims69: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape75, axes=[0, 2, 1])
            reshape76: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims69, R.shape([64, 127]))
            permute_dims70: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape76, axes=[1, 0])
            arange22: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims32: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange22, axis=[0])
            mul28: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims32, R.const(1, "int64"))
            arange23: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims33: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange23, axis=[1])
            mul29: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims33, R.const(1, "int64"))
            subtract11: R.Tensor((64, 64), dtype="int64") = R.subtract(mul28, mul29)
            add53: R.Tensor((64, 64), dtype="int64") = R.add(subtract11, R.const(63, "int64"))
            take11: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims70, add53, axis=0)
            reshape77: R.Tensor((12, 64, 64, 64), dtype="float32") = R.reshape(unbind15, R.shape([12, 64, 64, 64]))
            einsum10: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape77, take10), subscripts="bhwc,hkc->bhwk")
            einsum11: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape77, take11), subscripts="bhwc,wkc->bhwk")
            reshape78: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.reshape(matmul31, R.shape([12, 64, 64, 64, 64]))
            expand_dims34: R.Tensor((12, 64, 64, 1, 64), dtype="float32") = R.expand_dims(einsum10, axis=[3])
            expand_dims35: R.Tensor((12, 64, 1, 64, 64), dtype="float32") = R.expand_dims(einsum11, axis=[2])
            add54: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(reshape78, expand_dims34)
            add55: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(add54, expand_dims35)
            reshape79: R.Tensor((12, 4096, 4096), dtype="float32") = R.reshape(add55, R.shape([12, 4096, 4096]))
            softmax5: R.Tensor((12, 4096, 4096), dtype="float32") = R.nn.softmax(reshape79, axis=-1)
            matmul32: R.Tensor((12, 4096, 64), dtype="float32") = R.matmul(softmax5, unbind17, out_dtype="void")
            reshape80: R.Tensor((1, 12, 64, 64, 64), dtype="float32") = R.reshape(matmul32, R.shape([1, 12, 64, 64, 64]))
            permute_dims71: R.Tensor((1, 64, 64, 12, 64), dtype="float32") = R.permute_dims(reshape80, axes=[0, 2, 3, 1, 4])
            reshape81: R.Tensor((1, 64, 64, 768), dtype="float32") = R.reshape(permute_dims71, R.shape([1, 64, 64, 768]))
            permute_dims72: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_5_attn_proj_weight, axes=None)
            matmul33: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(reshape81, permute_dims72, out_dtype="void")
            add56: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul33, vision_encoder_layers_5_attn_proj_bias)
            add57: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add50, add56)
            layer_norm11: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add57, vision_encoder_layers_5_layer_norm2_weight, vision_encoder_layers_5_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims73: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_5_mlp_lin1_weight, axes=None)
            matmul34: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm11, permute_dims73, out_dtype="void")
            add58: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul34, vision_encoder_layers_5_mlp_lin1_bias)
            gelu5: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add58)
            permute_dims74: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_5_mlp_lin2_weight, axes=None)
            matmul35: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu5, permute_dims74, out_dtype="void")
            add59: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul35, vision_encoder_layers_5_mlp_lin2_bias)
            add60: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add57, add59)
            layer_norm12: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add60, vision_encoder_layers_6_layer_norm1_weight, vision_encoder_layers_6_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad4: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm12, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape82: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad4, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims75: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape82, axes=[0, 1, 3, 2, 4, 5])
            reshape83: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims75, R.shape([25, 14, 14, 768]))
            permute_dims76: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_6_attn_qkv_weight, axes=None)
            matmul36: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape83, permute_dims76, out_dtype="void")
            add61: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul36, vision_encoder_layers_6_attn_qkv_bias)
            reshape84: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add61, R.shape([25, 196, 3, 12, 64]))
            permute_dims77: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape84, axes=[2, 0, 3, 1, 4])
            reshape85: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims77, R.shape([3, 300, 196, 64]))
            split6: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape85, indices_or_sections=3, axis=0)
            split_06: R.Tensor((1, 300, 196, 64), dtype="float32") = split6[0]
            split_16: R.Tensor((1, 300, 196, 64), dtype="float32") = split6[1]
            split_26: R.Tensor((1, 300, 196, 64), dtype="float32") = split6[2]
            unbind18: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_06, axis=[0])
            unbind19: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_16, axis=[0])
            unbind20: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_26, axis=[0])
            mul30: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind18, R.const(0.125, "float32"))
            permute_dims78: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind19, axes=[0, 2, 1])
            matmul37: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul30, permute_dims78, out_dtype="void")
            reshape86: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_6_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims79: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape86, axes=[0, 2, 1])
            reshape87: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims79, R.shape([64, 27]))
            permute_dims80: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape87, axes=[1, 0])
            arange24: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims36: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange24, axis=[0])
            mul31: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims36, R.const(1, "int64"))
            arange25: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims37: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange25, axis=[1])
            mul32: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims37, R.const(1, "int64"))
            subtract12: R.Tensor((14, 14), dtype="int64") = R.subtract(mul31, mul32)
            add62: R.Tensor((14, 14), dtype="int64") = R.add(subtract12, R.const(13, "int64"))
            take12: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims80, add62, axis=0)
            reshape88: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_6_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims81: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape88, axes=[0, 2, 1])
            reshape89: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims81, R.shape([64, 27]))
            permute_dims82: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape89, axes=[1, 0])
            arange26: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims38: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange26, axis=[0])
            mul33: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims38, R.const(1, "int64"))
            arange27: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims39: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange27, axis=[1])
            mul34: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims39, R.const(1, "int64"))
            subtract13: R.Tensor((14, 14), dtype="int64") = R.subtract(mul33, mul34)
            add63: R.Tensor((14, 14), dtype="int64") = R.add(subtract13, R.const(13, "int64"))
            take13: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims82, add63, axis=0)
            reshape90: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind18, R.shape([300, 14, 14, 64]))
            einsum12: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape90, take12), subscripts="bhwc,hkc->bhwk")
            einsum13: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape90, take13), subscripts="bhwc,wkc->bhwk")
            reshape91: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul37, R.shape([300, 14, 14, 14, 14]))
            expand_dims40: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum12, axis=[3])
            expand_dims41: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum13, axis=[2])
            add64: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape91, expand_dims40)
            add65: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add64, expand_dims41)
            reshape92: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add65, R.shape([300, 196, 196]))
            softmax6: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape92, axis=-1)
            matmul38: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax6, unbind20, out_dtype="void")
            reshape93: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul38, R.shape([25, 12, 14, 14, 64]))
            permute_dims83: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape93, axes=[0, 2, 3, 1, 4])
            reshape94: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims83, R.shape([25, 14, 14, 768]))
            permute_dims84: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_6_attn_proj_weight, axes=None)
            matmul39: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape94, permute_dims84, out_dtype="void")
            add66: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul39, vision_encoder_layers_6_attn_proj_bias)
            reshape95: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add66, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims85: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape95, axes=[0, 1, 3, 2, 4, 5])
            reshape96: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims85, R.shape([1, 70, 70, 768]))
            strided_slice4: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape96, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add67: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add60, strided_slice4)
            layer_norm13: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add67, vision_encoder_layers_6_layer_norm2_weight, vision_encoder_layers_6_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims86: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_6_mlp_lin1_weight, axes=None)
            matmul40: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm13, permute_dims86, out_dtype="void")
            add68: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul40, vision_encoder_layers_6_mlp_lin1_bias)
            gelu6: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add68)
            permute_dims87: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_6_mlp_lin2_weight, axes=None)
            matmul41: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu6, permute_dims87, out_dtype="void")
            add69: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul41, vision_encoder_layers_6_mlp_lin2_bias)
            add70: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add67, add69)
            layer_norm14: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add70, vision_encoder_layers_7_layer_norm1_weight, vision_encoder_layers_7_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad5: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm14, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape97: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad5, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims88: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape97, axes=[0, 1, 3, 2, 4, 5])
            reshape98: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims88, R.shape([25, 14, 14, 768]))
            permute_dims89: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_7_attn_qkv_weight, axes=None)
            matmul42: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape98, permute_dims89, out_dtype="void")
            add71: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul42, vision_encoder_layers_7_attn_qkv_bias)
            reshape99: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add71, R.shape([25, 196, 3, 12, 64]))
            permute_dims90: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape99, axes=[2, 0, 3, 1, 4])
            reshape100: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims90, R.shape([3, 300, 196, 64]))
            split7: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape100, indices_or_sections=3, axis=0)
            split_07: R.Tensor((1, 300, 196, 64), dtype="float32") = split7[0]
            split_17: R.Tensor((1, 300, 196, 64), dtype="float32") = split7[1]
            split_27: R.Tensor((1, 300, 196, 64), dtype="float32") = split7[2]
            unbind21: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_07, axis=[0])
            unbind22: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_17, axis=[0])
            unbind23: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_27, axis=[0])
            mul35: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind21, R.const(0.125, "float32"))
            permute_dims91: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind22, axes=[0, 2, 1])
            matmul43: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul35, permute_dims91, out_dtype="void")
            reshape101: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_7_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims92: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape101, axes=[0, 2, 1])
            reshape102: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims92, R.shape([64, 27]))
            permute_dims93: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape102, axes=[1, 0])
            arange28: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims42: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange28, axis=[0])
            mul36: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims42, R.const(1, "int64"))
            arange29: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims43: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange29, axis=[1])
            mul37: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims43, R.const(1, "int64"))
            subtract14: R.Tensor((14, 14), dtype="int64") = R.subtract(mul36, mul37)
            add72: R.Tensor((14, 14), dtype="int64") = R.add(subtract14, R.const(13, "int64"))
            take14: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims93, add72, axis=0)
            reshape103: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_7_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims94: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape103, axes=[0, 2, 1])
            reshape104: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims94, R.shape([64, 27]))
            permute_dims95: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape104, axes=[1, 0])
            arange30: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims44: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange30, axis=[0])
            mul38: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims44, R.const(1, "int64"))
            arange31: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims45: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange31, axis=[1])
            mul39: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims45, R.const(1, "int64"))
            subtract15: R.Tensor((14, 14), dtype="int64") = R.subtract(mul38, mul39)
            add73: R.Tensor((14, 14), dtype="int64") = R.add(subtract15, R.const(13, "int64"))
            take15: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims95, add73, axis=0)
            reshape105: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind21, R.shape([300, 14, 14, 64]))
            einsum14: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape105, take14), subscripts="bhwc,hkc->bhwk")
            einsum15: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape105, take15), subscripts="bhwc,wkc->bhwk")
            reshape106: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul43, R.shape([300, 14, 14, 14, 14]))
            expand_dims46: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum14, axis=[3])
            expand_dims47: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum15, axis=[2])
            add74: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape106, expand_dims46)
            add75: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add74, expand_dims47)
            reshape107: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add75, R.shape([300, 196, 196]))
            softmax7: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape107, axis=-1)
            matmul44: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax7, unbind23, out_dtype="void")
            reshape108: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul44, R.shape([25, 12, 14, 14, 64]))
            permute_dims96: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape108, axes=[0, 2, 3, 1, 4])
            reshape109: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims96, R.shape([25, 14, 14, 768]))
            permute_dims97: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_7_attn_proj_weight, axes=None)
            matmul45: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape109, permute_dims97, out_dtype="void")
            add76: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul45, vision_encoder_layers_7_attn_proj_bias)
            reshape110: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add76, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims98: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape110, axes=[0, 1, 3, 2, 4, 5])
            reshape111: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims98, R.shape([1, 70, 70, 768]))
            strided_slice5: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape111, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add77: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add70, strided_slice5)
            layer_norm15: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add77, vision_encoder_layers_7_layer_norm2_weight, vision_encoder_layers_7_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims99: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_7_mlp_lin1_weight, axes=None)
            matmul46: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm15, permute_dims99, out_dtype="void")
            add78: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul46, vision_encoder_layers_7_mlp_lin1_bias)
            gelu7: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add78)
            permute_dims100: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_7_mlp_lin2_weight, axes=None)
            matmul47: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu7, permute_dims100, out_dtype="void")
            add79: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul47, vision_encoder_layers_7_mlp_lin2_bias)
            add80: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add77, add79)
            layer_norm16: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add80, vision_encoder_layers_8_layer_norm1_weight, vision_encoder_layers_8_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims101: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_8_attn_qkv_weight, axes=None)
            matmul48: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.matmul(layer_norm16, permute_dims101, out_dtype="void")
            add81: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.add(matmul48, vision_encoder_layers_8_attn_qkv_bias)
            reshape112: R.Tensor((1, 4096, 3, 12, 64), dtype="float32") = R.reshape(add81, R.shape([1, 4096, 3, 12, 64]))
            permute_dims102: R.Tensor((3, 1, 12, 4096, 64), dtype="float32") = R.permute_dims(reshape112, axes=[2, 0, 3, 1, 4])
            reshape113: R.Tensor((3, 12, 4096, 64), dtype="float32") = R.reshape(permute_dims102, R.shape([3, 12, 4096, 64]))
            split8: R.Tuple(R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32")) = R.split(reshape113, indices_or_sections=3, axis=0)
            split_08: R.Tensor((1, 12, 4096, 64), dtype="float32") = split8[0]
            split_18: R.Tensor((1, 12, 4096, 64), dtype="float32") = split8[1]
            split_28: R.Tensor((1, 12, 4096, 64), dtype="float32") = split8[2]
            unbind24: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_08, axis=[0])
            unbind25: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_18, axis=[0])
            unbind26: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_28, axis=[0])
            mul40: R.Tensor((12, 4096, 64), dtype="float32") = R.multiply(unbind24, R.const(0.125, "float32"))
            permute_dims103: R.Tensor((12, 64, 4096), dtype="float32") = R.permute_dims(unbind25, axes=[0, 2, 1])
            matmul49: R.Tensor((12, 4096, 4096), dtype="float32") = R.matmul(mul40, permute_dims103, out_dtype="void")
            reshape114: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_8_attn_rel_pos_h, R.shape([1, 127, 64]))
            permute_dims104: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape114, axes=[0, 2, 1])
            reshape115: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims104, R.shape([64, 127]))
            permute_dims105: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape115, axes=[1, 0])
            arange32: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims48: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange32, axis=[0])
            mul41: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims48, R.const(1, "int64"))
            arange33: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims49: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange33, axis=[1])
            mul42: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims49, R.const(1, "int64"))
            subtract16: R.Tensor((64, 64), dtype="int64") = R.subtract(mul41, mul42)
            add82: R.Tensor((64, 64), dtype="int64") = R.add(subtract16, R.const(63, "int64"))
            take16: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims105, add82, axis=0)
            reshape116: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_8_attn_rel_pos_w, R.shape([1, 127, 64]))
            permute_dims106: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape116, axes=[0, 2, 1])
            reshape117: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims106, R.shape([64, 127]))
            permute_dims107: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape117, axes=[1, 0])
            arange34: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims50: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange34, axis=[0])
            mul43: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims50, R.const(1, "int64"))
            arange35: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims51: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange35, axis=[1])
            mul44: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims51, R.const(1, "int64"))
            subtract17: R.Tensor((64, 64), dtype="int64") = R.subtract(mul43, mul44)
            add83: R.Tensor((64, 64), dtype="int64") = R.add(subtract17, R.const(63, "int64"))
            take17: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims107, add83, axis=0)
            reshape118: R.Tensor((12, 64, 64, 64), dtype="float32") = R.reshape(unbind24, R.shape([12, 64, 64, 64]))
            einsum16: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape118, take16), subscripts="bhwc,hkc->bhwk")
            einsum17: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape118, take17), subscripts="bhwc,wkc->bhwk")
            reshape119: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.reshape(matmul49, R.shape([12, 64, 64, 64, 64]))
            expand_dims52: R.Tensor((12, 64, 64, 1, 64), dtype="float32") = R.expand_dims(einsum16, axis=[3])
            expand_dims53: R.Tensor((12, 64, 1, 64, 64), dtype="float32") = R.expand_dims(einsum17, axis=[2])
            add84: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(reshape119, expand_dims52)
            add85: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(add84, expand_dims53)
            reshape120: R.Tensor((12, 4096, 4096), dtype="float32") = R.reshape(add85, R.shape([12, 4096, 4096]))
            softmax8: R.Tensor((12, 4096, 4096), dtype="float32") = R.nn.softmax(reshape120, axis=-1)
            matmul50: R.Tensor((12, 4096, 64), dtype="float32") = R.matmul(softmax8, unbind26, out_dtype="void")
            reshape121: R.Tensor((1, 12, 64, 64, 64), dtype="float32") = R.reshape(matmul50, R.shape([1, 12, 64, 64, 64]))
            permute_dims108: R.Tensor((1, 64, 64, 12, 64), dtype="float32") = R.permute_dims(reshape121, axes=[0, 2, 3, 1, 4])
            reshape122: R.Tensor((1, 64, 64, 768), dtype="float32") = R.reshape(permute_dims108, R.shape([1, 64, 64, 768]))
            permute_dims109: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_8_attn_proj_weight, axes=None)
            matmul51: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(reshape122, permute_dims109, out_dtype="void")
            add86: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul51, vision_encoder_layers_8_attn_proj_bias)
            add87: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add80, add86)
            layer_norm17: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add87, vision_encoder_layers_8_layer_norm2_weight, vision_encoder_layers_8_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims110: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_8_mlp_lin1_weight, axes=None)
            matmul52: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm17, permute_dims110, out_dtype="void")
            add88: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul52, vision_encoder_layers_8_mlp_lin1_bias)
            gelu8: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add88)
            permute_dims111: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_8_mlp_lin2_weight, axes=None)
            matmul53: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu8, permute_dims111, out_dtype="void")
            add89: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul53, vision_encoder_layers_8_mlp_lin2_bias)
            add90: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add87, add89)
            layer_norm18: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add90, vision_encoder_layers_9_layer_norm1_weight, vision_encoder_layers_9_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad6: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm18, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape123: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad6, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims112: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape123, axes=[0, 1, 3, 2, 4, 5])
            reshape124: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims112, R.shape([25, 14, 14, 768]))
            permute_dims113: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_9_attn_qkv_weight, axes=None)
            matmul54: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape124, permute_dims113, out_dtype="void")
            add91: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul54, vision_encoder_layers_9_attn_qkv_bias)
            reshape125: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add91, R.shape([25, 196, 3, 12, 64]))
            permute_dims114: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape125, axes=[2, 0, 3, 1, 4])
            reshape126: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims114, R.shape([3, 300, 196, 64]))
            split9: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape126, indices_or_sections=3, axis=0)
            split_09: R.Tensor((1, 300, 196, 64), dtype="float32") = split9[0]
            split_19: R.Tensor((1, 300, 196, 64), dtype="float32") = split9[1]
            split_29: R.Tensor((1, 300, 196, 64), dtype="float32") = split9[2]
            unbind27: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_09, axis=[0])
            unbind28: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_19, axis=[0])
            unbind29: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_29, axis=[0])
            mul45: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind27, R.const(0.125, "float32"))
            permute_dims115: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind28, axes=[0, 2, 1])
            matmul55: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul45, permute_dims115, out_dtype="void")
            reshape127: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_9_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims116: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape127, axes=[0, 2, 1])
            reshape128: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims116, R.shape([64, 27]))
            permute_dims117: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape128, axes=[1, 0])
            arange36: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims54: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange36, axis=[0])
            mul46: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims54, R.const(1, "int64"))
            arange37: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims55: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange37, axis=[1])
            mul47: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims55, R.const(1, "int64"))
            subtract18: R.Tensor((14, 14), dtype="int64") = R.subtract(mul46, mul47)
            add92: R.Tensor((14, 14), dtype="int64") = R.add(subtract18, R.const(13, "int64"))
            take18: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims117, add92, axis=0)
            reshape129: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_9_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims118: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape129, axes=[0, 2, 1])
            reshape130: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims118, R.shape([64, 27]))
            permute_dims119: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape130, axes=[1, 0])
            arange38: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims56: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange38, axis=[0])
            mul48: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims56, R.const(1, "int64"))
            arange39: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims57: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange39, axis=[1])
            mul49: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims57, R.const(1, "int64"))
            subtract19: R.Tensor((14, 14), dtype="int64") = R.subtract(mul48, mul49)
            add93: R.Tensor((14, 14), dtype="int64") = R.add(subtract19, R.const(13, "int64"))
            take19: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims119, add93, axis=0)
            reshape131: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind27, R.shape([300, 14, 14, 64]))
            einsum18: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape131, take18), subscripts="bhwc,hkc->bhwk")
            einsum19: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape131, take19), subscripts="bhwc,wkc->bhwk")
            reshape132: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul55, R.shape([300, 14, 14, 14, 14]))
            expand_dims58: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum18, axis=[3])
            expand_dims59: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum19, axis=[2])
            add94: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape132, expand_dims58)
            add95: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add94, expand_dims59)
            reshape133: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add95, R.shape([300, 196, 196]))
            softmax9: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape133, axis=-1)
            matmul56: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax9, unbind29, out_dtype="void")
            reshape134: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul56, R.shape([25, 12, 14, 14, 64]))
            permute_dims120: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape134, axes=[0, 2, 3, 1, 4])
            reshape135: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims120, R.shape([25, 14, 14, 768]))
            permute_dims121: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_9_attn_proj_weight, axes=None)
            matmul57: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape135, permute_dims121, out_dtype="void")
            add96: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul57, vision_encoder_layers_9_attn_proj_bias)
            reshape136: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add96, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims122: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape136, axes=[0, 1, 3, 2, 4, 5])
            reshape137: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims122, R.shape([1, 70, 70, 768]))
            strided_slice6: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape137, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add97: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add90, strided_slice6)
            layer_norm19: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add97, vision_encoder_layers_9_layer_norm2_weight, vision_encoder_layers_9_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims123: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_9_mlp_lin1_weight, axes=None)
            matmul58: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm19, permute_dims123, out_dtype="void")
            add98: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul58, vision_encoder_layers_9_mlp_lin1_bias)
            gelu9: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add98)
            permute_dims124: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_9_mlp_lin2_weight, axes=None)
            matmul59: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu9, permute_dims124, out_dtype="void")
            add99: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul59, vision_encoder_layers_9_mlp_lin2_bias)
            add100: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add97, add99)
            layer_norm20: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add100, vision_encoder_layers_10_layer_norm1_weight, vision_encoder_layers_10_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad7: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm20, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape138: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad7, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims125: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape138, axes=[0, 1, 3, 2, 4, 5])
            reshape139: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims125, R.shape([25, 14, 14, 768]))
            permute_dims126: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_10_attn_qkv_weight, axes=None)
            matmul60: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape139, permute_dims126, out_dtype="void")
            add101: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul60, vision_encoder_layers_10_attn_qkv_bias)
            reshape140: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add101, R.shape([25, 196, 3, 12, 64]))
            permute_dims127: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape140, axes=[2, 0, 3, 1, 4])
            reshape141: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims127, R.shape([3, 300, 196, 64]))
            split10: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape141, indices_or_sections=3, axis=0)
            split_010: R.Tensor((1, 300, 196, 64), dtype="float32") = split10[0]
            split_110: R.Tensor((1, 300, 196, 64), dtype="float32") = split10[1]
            split_210: R.Tensor((1, 300, 196, 64), dtype="float32") = split10[2]
            unbind30: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_010, axis=[0])
            unbind31: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_110, axis=[0])
            unbind32: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_210, axis=[0])
            mul50: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind30, R.const(0.125, "float32"))
            permute_dims128: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind31, axes=[0, 2, 1])
            matmul61: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul50, permute_dims128, out_dtype="void")
            reshape142: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_10_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims129: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape142, axes=[0, 2, 1])
            reshape143: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims129, R.shape([64, 27]))
            permute_dims130: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape143, axes=[1, 0])
            arange40: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims60: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange40, axis=[0])
            mul51: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims60, R.const(1, "int64"))
            arange41: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims61: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange41, axis=[1])
            mul52: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims61, R.const(1, "int64"))
            subtract20: R.Tensor((14, 14), dtype="int64") = R.subtract(mul51, mul52)
            add102: R.Tensor((14, 14), dtype="int64") = R.add(subtract20, R.const(13, "int64"))
            take20: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims130, add102, axis=0)
            reshape144: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_10_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims131: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape144, axes=[0, 2, 1])
            reshape145: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims131, R.shape([64, 27]))
            permute_dims132: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape145, axes=[1, 0])
            arange42: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims62: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange42, axis=[0])
            mul53: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims62, R.const(1, "int64"))
            arange43: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims63: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange43, axis=[1])
            mul54: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims63, R.const(1, "int64"))
            subtract21: R.Tensor((14, 14), dtype="int64") = R.subtract(mul53, mul54)
            add103: R.Tensor((14, 14), dtype="int64") = R.add(subtract21, R.const(13, "int64"))
            take21: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims132, add103, axis=0)
            reshape146: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind30, R.shape([300, 14, 14, 64]))
            einsum20: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape146, take20), subscripts="bhwc,hkc->bhwk")
            einsum21: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape146, take21), subscripts="bhwc,wkc->bhwk")
            reshape147: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul61, R.shape([300, 14, 14, 14, 14]))
            expand_dims64: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum20, axis=[3])
            expand_dims65: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum21, axis=[2])
            add104: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape147, expand_dims64)
            add105: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add104, expand_dims65)
            reshape148: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add105, R.shape([300, 196, 196]))
            softmax10: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape148, axis=-1)
            matmul62: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax10, unbind32, out_dtype="void")
            reshape149: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul62, R.shape([25, 12, 14, 14, 64]))
            permute_dims133: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape149, axes=[0, 2, 3, 1, 4])
            reshape150: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims133, R.shape([25, 14, 14, 768]))
            permute_dims134: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_10_attn_proj_weight, axes=None)
            matmul63: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape150, permute_dims134, out_dtype="void")
            add106: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul63, vision_encoder_layers_10_attn_proj_bias)
            reshape151: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add106, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims135: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape151, axes=[0, 1, 3, 2, 4, 5])
            reshape152: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims135, R.shape([1, 70, 70, 768]))
            strided_slice7: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape152, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add107: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add100, strided_slice7)
            layer_norm21: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add107, vision_encoder_layers_10_layer_norm2_weight, vision_encoder_layers_10_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims136: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_10_mlp_lin1_weight, axes=None)
            matmul64: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm21, permute_dims136, out_dtype="void")
            add108: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul64, vision_encoder_layers_10_mlp_lin1_bias)
            gelu10: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add108)
            permute_dims137: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_10_mlp_lin2_weight, axes=None)
            matmul65: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu10, permute_dims137, out_dtype="void")
            add109: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul65, vision_encoder_layers_10_mlp_lin2_bias)
            add110: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add107, add109)
            layer_norm22: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add110, vision_encoder_layers_11_layer_norm1_weight, vision_encoder_layers_11_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims138: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_11_attn_qkv_weight, axes=None)
            matmul66: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.matmul(layer_norm22, permute_dims138, out_dtype="void")
            add111: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.add(matmul66, vision_encoder_layers_11_attn_qkv_bias)
            reshape153: R.Tensor((1, 4096, 3, 12, 64), dtype="float32") = R.reshape(add111, R.shape([1, 4096, 3, 12, 64]))
            permute_dims139: R.Tensor((3, 1, 12, 4096, 64), dtype="float32") = R.permute_dims(reshape153, axes=[2, 0, 3, 1, 4])
            reshape154: R.Tensor((3, 12, 4096, 64), dtype="float32") = R.reshape(permute_dims139, R.shape([3, 12, 4096, 64]))
            split11: R.Tuple(R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32")) = R.split(reshape154, indices_or_sections=3, axis=0)
            split_011: R.Tensor((1, 12, 4096, 64), dtype="float32") = split11[0]
            split_111: R.Tensor((1, 12, 4096, 64), dtype="float32") = split11[1]
            split_211: R.Tensor((1, 12, 4096, 64), dtype="float32") = split11[2]
            unbind33: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_011, axis=[0])
            unbind34: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_111, axis=[0])
            unbind35: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_211, axis=[0])
            mul55: R.Tensor((12, 4096, 64), dtype="float32") = R.multiply(unbind33, R.const(0.125, "float32"))
            permute_dims140: R.Tensor((12, 64, 4096), dtype="float32") = R.permute_dims(unbind34, axes=[0, 2, 1])
            matmul67: R.Tensor((12, 4096, 4096), dtype="float32") = R.matmul(mul55, permute_dims140, out_dtype="void")
            reshape155: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_11_attn_rel_pos_h, R.shape([1, 127, 64]))
            permute_dims141: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape155, axes=[0, 2, 1])
            reshape156: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims141, R.shape([64, 127]))
            permute_dims142: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape156, axes=[1, 0])
            arange44: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims66: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange44, axis=[0])
            mul56: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims66, R.const(1, "int64"))
            arange45: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims67: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange45, axis=[1])
            mul57: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims67, R.const(1, "int64"))
            subtract22: R.Tensor((64, 64), dtype="int64") = R.subtract(mul56, mul57)
            add112: R.Tensor((64, 64), dtype="int64") = R.add(subtract22, R.const(63, "int64"))
            take22: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims142, add112, axis=0)
            reshape157: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_11_attn_rel_pos_w, R.shape([1, 127, 64]))
            permute_dims143: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape157, axes=[0, 2, 1])
            reshape158: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims143, R.shape([64, 127]))
            permute_dims144: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape158, axes=[1, 0])
            arange46: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims68: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange46, axis=[0])
            mul58: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims68, R.const(1, "int64"))
            arange47: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims69: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange47, axis=[1])
            mul59: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims69, R.const(1, "int64"))
            subtract23: R.Tensor((64, 64), dtype="int64") = R.subtract(mul58, mul59)
            add113: R.Tensor((64, 64), dtype="int64") = R.add(subtract23, R.const(63, "int64"))
            take23: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims144, add113, axis=0)
            reshape159: R.Tensor((12, 64, 64, 64), dtype="float32") = R.reshape(unbind33, R.shape([12, 64, 64, 64]))
            einsum22: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape159, take22), subscripts="bhwc,hkc->bhwk")
            einsum23: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape159, take23), subscripts="bhwc,wkc->bhwk")
            reshape160: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.reshape(matmul67, R.shape([12, 64, 64, 64, 64]))
            expand_dims70: R.Tensor((12, 64, 64, 1, 64), dtype="float32") = R.expand_dims(einsum22, axis=[3])
            expand_dims71: R.Tensor((12, 64, 1, 64, 64), dtype="float32") = R.expand_dims(einsum23, axis=[2])
            add114: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(reshape160, expand_dims70)
            add115: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(add114, expand_dims71)
            reshape161: R.Tensor((12, 4096, 4096), dtype="float32") = R.reshape(add115, R.shape([12, 4096, 4096]))
            softmax11: R.Tensor((12, 4096, 4096), dtype="float32") = R.nn.softmax(reshape161, axis=-1)
            matmul68: R.Tensor((12, 4096, 64), dtype="float32") = R.matmul(softmax11, unbind35, out_dtype="void")
            reshape162: R.Tensor((1, 12, 64, 64, 64), dtype="float32") = R.reshape(matmul68, R.shape([1, 12, 64, 64, 64]))
            permute_dims145: R.Tensor((1, 64, 64, 12, 64), dtype="float32") = R.permute_dims(reshape162, axes=[0, 2, 3, 1, 4])
            reshape163: R.Tensor((1, 64, 64, 768), dtype="float32") = R.reshape(permute_dims145, R.shape([1, 64, 64, 768]))
            permute_dims146: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_11_attn_proj_weight, axes=None)
            matmul69: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(reshape163, permute_dims146, out_dtype="void")
            add116: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul69, vision_encoder_layers_11_attn_proj_bias)
            add117: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add110, add116)
            layer_norm23: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add117, vision_encoder_layers_11_layer_norm2_weight, vision_encoder_layers_11_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims147: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_11_mlp_lin1_weight, axes=None)
            matmul70: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm23, permute_dims147, out_dtype="void")
            add118: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul70, vision_encoder_layers_11_mlp_lin1_bias)
            gelu11: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add118)
            permute_dims148: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_11_mlp_lin2_weight, axes=None)
            matmul71: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu11, permute_dims148, out_dtype="void")
            add119: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul71, vision_encoder_layers_11_mlp_lin2_bias)
            add120: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add117, add119)
            permute_dims149: R.Tensor((1, 768, 64, 64), dtype="float32") = R.permute_dims(add120, axes=[0, 3, 1, 2])
            conv2d1: R.Tensor((1, 256, 64, 64), dtype="float32") = R.nn.conv2d(permute_dims149, vision_encoder_neck_conv1_weight, strides=[1, 1], padding=[0, 0, 0, 0], dilation=[1, 1], groups=1, data_layout="NCHW", kernel_layout="OIHW", out_layout="NCHW", out_dtype="void")
            mean: R.Tensor((1, 1, 64, 64), dtype="float32") = R.mean(conv2d1, axis=[1], keepdims=True)
            subtract24: R.Tensor((1, 256, 64, 64), dtype="float32") = R.subtract(conv2d1, mean)
            mean1: R.Tensor((1, 256, 64, 64), dtype="float32") = R.power(subtract24, R.const(2, "float32"))
            mean2: R.Tensor((1, 1, 64, 64), dtype="float32") = R.mean(mean1, axis=[1], keepdims=True)
            add121: R.Tensor((1, 1, 64, 64), dtype="float32") = R.add(mean2, R.const(9.9999999747524271e-07, "float32"))
            mean3: R.Tensor((1, 1, 64, 64), dtype="float32") = R.sqrt(add121)
            divide: R.Tensor((1, 256, 64, 64), dtype="float32") = R.divide(subtract24, mean3)
            expand_dims72: R.Tensor((256, 1), dtype="float32") = R.expand_dims(vision_encoder_neck_layer_norm1_weight, axis=[1])
            expand_dims73: R.Tensor((256, 1, 1), dtype="float32") = R.expand_dims(expand_dims72, axis=[1])
            expand_dims74: R.Tensor((256, 1), dtype="float32") = R.expand_dims(vision_encoder_neck_layer_norm1_bias, axis=[1])
            expand_dims75: R.Tensor((256, 1, 1), dtype="float32") = R.expand_dims(expand_dims74, axis=[1])
            mul60: R.Tensor((1, 256, 64, 64), dtype="float32") = R.multiply(expand_dims73, divide)
            add122: R.Tensor((1, 256, 64, 64), dtype="float32") = R.add(mul60, expand_dims75)
            conv2d2: R.Tensor((1, 256, 64, 64), dtype="float32") = R.nn.conv2d(add122, vision_encoder_neck_conv2_weight, strides=[1, 1], padding=[1, 1, 1, 1], dilation=[1, 1], groups=1, data_layout="NCHW", kernel_layout="OIHW", out_layout="NCHW", out_dtype="void")
            mean4: R.Tensor((1, 1, 64, 64), dtype="float32") = R.mean(conv2d2, axis=[1], keepdims=True)
            subtract25: R.Tensor((1, 256, 64, 64), dtype="float32") = R.subtract(conv2d2, mean4)
            mean5: R.Tensor((1, 256, 64, 64), dtype="float32") = R.power(subtract25, R.const(2, "float32"))
            mean6: R.Tensor((1, 1, 64, 64), dtype="float32") = R.mean(mean5, axis=[1], keepdims=True)
            add123: R.Tensor((1, 1, 64, 64), dtype="float32") = R.add(mean6, R.const(9.9999999747524271e-07, "float32"))
            mean7: R.Tensor((1, 1, 64, 64), dtype="float32") = R.sqrt(add123)
            divide1: R.Tensor((1, 256, 64, 64), dtype="float32") = R.divide(subtract25, mean7)
            expand_dims76: R.Tensor((256, 1), dtype="float32") = R.expand_dims(vision_encoder_neck_layer_norm2_weight, axis=[1])
            expand_dims77: R.Tensor((256, 1, 1), dtype="float32") = R.expand_dims(expand_dims76, axis=[1])
            expand_dims78: R.Tensor((256, 1), dtype="float32") = R.expand_dims(vision_encoder_neck_layer_norm2_bias, axis=[1])
            expand_dims79: R.Tensor((256, 1, 1), dtype="float32") = R.expand_dims(expand_dims78, axis=[1])
            mul61: R.Tensor((1, 256, 64, 64), dtype="float32") = R.multiply(expand_dims77, divide1)
            add124: R.Tensor((1, 256, 64, 64), dtype="float32") = R.add(mul61, expand_dims79)
            gv1: R.Tuple(R.Tensor((1, 256, 64, 64), dtype="float32"), R.Tuple(R.Object)) = add124, (_io,)
            R.output(gv1)
        return gv1

    @R.function
    def get_prompt_embeddings(input_points: R.Tensor((1, 1, 1, 2), dtype="float32"), _io: R.Object, shared_image_embedding_positional_embedding: R.Tensor((2, 128), dtype="float32"), vision_encoder_patch_embed_projection_weight: R.Tensor((768, 3, 16, 16), dtype="float32"), vision_encoder_patch_embed_projection_bias: R.Tensor((768,), dtype="float32"), vision_encoder_pos_embed: R.Tensor((1, 64, 64, 768), dtype="float32"), vision_encoder_layers_0_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_0_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_0_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_0_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_0_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_0_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_0_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_0_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_0_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_0_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_0_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_0_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_0_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_0_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_1_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_1_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_1_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_1_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_1_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_1_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_1_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_1_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_2_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_2_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_2_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_attn_rel_pos_h: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_2_attn_rel_pos_w: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_2_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_2_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_2_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_2_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_3_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_3_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_3_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_3_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_3_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_3_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_3_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_3_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_4_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_4_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_4_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_4_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_4_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_4_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_4_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_4_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_5_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_5_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_5_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_attn_rel_pos_h: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_5_attn_rel_pos_w: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_5_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_5_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_5_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_5_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_6_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_6_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_6_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_6_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_6_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_6_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_6_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_6_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_7_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_7_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_7_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_7_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_7_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_7_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_7_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_7_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_8_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_8_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_8_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_attn_rel_pos_h: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_8_attn_rel_pos_w: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_8_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_8_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_8_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_8_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_9_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_9_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_9_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_9_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_9_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_9_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_9_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_9_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_10_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_10_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_10_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_10_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_10_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_10_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_10_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_10_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_11_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_11_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_11_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_attn_rel_pos_h: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_11_attn_rel_pos_w: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_11_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_11_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_11_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_11_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_neck_conv1_weight: R.Tensor((256, 768, 1, 1), dtype="float32"), vision_encoder_neck_layer_norm1_weight: R.Tensor((256,), dtype="float32"), vision_encoder_neck_layer_norm1_bias: R.Tensor((256,), dtype="float32"), vision_encoder_neck_conv2_weight: R.Tensor((256, 256, 3, 3), dtype="float32"), vision_encoder_neck_layer_norm2_weight: R.Tensor((256,), dtype="float32"), vision_encoder_neck_layer_norm2_bias: R.Tensor((256,), dtype="float32"), prompt_encoder_shared_embedding_positional_embedding: R.Tensor((2, 128), dtype="float32"), prompt_encoder_mask_embed_conv1_weight: R.Tensor((4, 1, 2, 2), dtype="float32"), prompt_encoder_mask_embed_conv1_bias: R.Tensor((4,), dtype="float32"), prompt_encoder_mask_embed_conv2_weight: R.Tensor((16, 4, 2, 2), dtype="float32"), prompt_encoder_mask_embed_conv2_bias: R.Tensor((16,), dtype="float32"), prompt_encoder_mask_embed_conv3_weight: R.Tensor((256, 16, 1, 1), dtype="float32"), prompt_encoder_mask_embed_conv3_bias: R.Tensor((256,), dtype="float32"), prompt_encoder_mask_embed_layer_norm1_weight: R.Tensor((4,), dtype="float32"), prompt_encoder_mask_embed_layer_norm1_bias: R.Tensor((4,), dtype="float32"), prompt_encoder_mask_embed_layer_norm2_weight: R.Tensor((16,), dtype="float32"), prompt_encoder_mask_embed_layer_norm2_bias: R.Tensor((16,), dtype="float32"), prompt_encoder_no_mask_embed_weight: R.Tensor((1, 256), dtype="float32"), prompt_encoder_point_embed_0_weight: R.Tensor((1, 256), dtype="float32"), prompt_encoder_point_embed_1_weight: R.Tensor((1, 256), dtype="float32"), prompt_encoder_point_embed_2_weight: R.Tensor((1, 256), dtype="float32"), prompt_encoder_point_embed_3_weight: R.Tensor((1, 256), dtype="float32"), prompt_encoder_not_a_point_embed_weight: R.Tensor((1, 256), dtype="float32"), mask_decoder_iou_token_weight: R.Tensor((1, 256), dtype="float32"), mask_decoder_mask_tokens_weight: R.Tensor((4, 256), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_q_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_q_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_k_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_k_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_v_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_v_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_out_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm1_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm1_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_q_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_q_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_k_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_k_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_v_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_v_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_out_proj_weight: R.Tensor((256, 128), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm2_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm2_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_mlp_lin1_weight: R.Tensor((2048, 256), dtype="float32"), mask_decoder_transformer_layers_0_mlp_lin1_bias: R.Tensor((2048,), dtype="float32"), mask_decoder_transformer_layers_0_mlp_lin2_weight: R.Tensor((256, 2048), dtype="float32"), mask_decoder_transformer_layers_0_mlp_lin2_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm3_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm3_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm4_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm4_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_q_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_q_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_k_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_k_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_v_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_v_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_out_proj_weight: R.Tensor((256, 128), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_q_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_q_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_k_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_k_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_v_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_v_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_out_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm1_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm1_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_q_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_q_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_k_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_k_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_v_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_v_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_out_proj_weight: R.Tensor((256, 128), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm2_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm2_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_mlp_lin1_weight: R.Tensor((2048, 256), dtype="float32"), mask_decoder_transformer_layers_1_mlp_lin1_bias: R.Tensor((2048,), dtype="float32"), mask_decoder_transformer_layers_1_mlp_lin2_weight: R.Tensor((256, 2048), dtype="float32"), mask_decoder_transformer_layers_1_mlp_lin2_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm3_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm3_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm4_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm4_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_q_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_q_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_k_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_k_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_v_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_v_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_out_proj_weight: R.Tensor((256, 128), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_q_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_q_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_k_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_k_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_v_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_v_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_out_proj_weight: R.Tensor((256, 128), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layer_norm_final_attn_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layer_norm_final_attn_bias: R.Tensor((256,), dtype="float32"), mask_decoder_upscale_conv1_weight: R.Tensor((256, 64, 2, 2), dtype="float32"), mask_decoder_upscale_conv1_bias: R.Tensor((64,), dtype="float32"), mask_decoder_upscale_conv2_weight: R.Tensor((64, 32, 2, 2), dtype="float32"), mask_decoder_upscale_conv2_bias: R.Tensor((32,), dtype="float32"), mask_decoder_upscale_layer_norm_weight: R.Tensor((64,), dtype="float32"), mask_decoder_upscale_layer_norm_bias: R.Tensor((64,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_proj_in_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_proj_in_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_proj_out_weight: R.Tensor((32, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_proj_out_bias: R.Tensor((32,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_layers_0_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_layers_0_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_proj_in_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_proj_in_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_proj_out_weight: R.Tensor((32, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_proj_out_bias: R.Tensor((32,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_layers_0_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_layers_0_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_proj_in_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_proj_in_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_proj_out_weight: R.Tensor((32, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_proj_out_bias: R.Tensor((32,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_layers_0_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_layers_0_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_proj_in_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_proj_in_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_proj_out_weight: R.Tensor((32, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_proj_out_bias: R.Tensor((32,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_layers_0_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_layers_0_bias: R.Tensor((256,), dtype="float32"), mask_decoder_iou_prediction_head_proj_in_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_iou_prediction_head_proj_in_bias: R.Tensor((256,), dtype="float32"), mask_decoder_iou_prediction_head_proj_out_weight: R.Tensor((4, 256), dtype="float32"), mask_decoder_iou_prediction_head_proj_out_bias: R.Tensor((4,), dtype="float32"), mask_decoder_iou_prediction_head_layers_0_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_iou_prediction_head_layers_0_bias: R.Tensor((256,), dtype="float32")) -> R.Tuple(R.Tuple(R.Tensor((1, 1, 2, 256), dtype="float32"), R.Tensor((1, 256, 64, 64), dtype="float32")), R.Tuple(R.Object)):
        R.func_attr({"num_input": 2})
        with R.dataflow():
            ones: R.Tensor((1, 1, 1), dtype="int32") = R.ones(R.shape([1, 1, 1]), dtype="int32")
            add125: R.Tensor((1, 1, 1, 2), dtype="float32") = R.add(input_points, R.const(0.5, "float32"))
            zeros: R.Tensor((1, 1, 1, 2), dtype="float32") = R.zeros(R.shape([1, 1, 1, 2]), dtype="float32")
            ones1: R.Tensor((1, 1, 1), dtype="int32") = R.ones(R.shape([1, 1, 1]), dtype="int32")
            mul62: R.Tensor((1, 1, 1), dtype="int32") = R.multiply(ones1, R.const(-1, "int32"))
            concat: R.Tensor((1, 1, 2, 2), dtype="float32") = R.concat((add125, zeros), axis=2)
            concat1: R.Tensor((1, 1, 2), dtype="int32") = R.concat((ones, mul62), axis=2)
            strided_slice8: R.Tensor((1, 1, 2, 1), dtype="float32") = R.strided_slice(concat, axes=[3], begin=[0], end=[1], strides=None, assume_inbound=False)
            divide2: R.Tensor((1, 1, 2, 1), dtype="float32") = R.divide(strided_slice8, R.const(1024, "float32"))
            strided_slice9: R.Tensor((1, 1, 2, 1), dtype="float32") = R.strided_slice(concat, axes=[3], begin=[1], end=[2], strides=None, assume_inbound=False)
            divide3: R.Tensor((1, 1, 2, 1), dtype="float32") = R.divide(strided_slice9, R.const(1024, "float32"))
            concat2: R.Tensor((1, 1, 2, 2), dtype="float32") = R.concat((divide2, divide3), axis=3)
            add126: R.Tensor((1, 1, 2, 2), dtype="float32") = R.add(concat2, concat2)
            subtract26: R.Tensor((1, 1, 2, 2), dtype="float32") = R.subtract(add126, R.const(1, "float32"))
            matmul72: R.Tensor((1, 1, 2, 128), dtype="float32") = R.matmul(subtract26, prompt_encoder_shared_embedding_positional_embedding, out_dtype="void")
            mul63: R.Tensor((1, 1, 2, 128), dtype="float32") = R.multiply(R.const(6.2831854820251465, "float32"), matmul72)
            sin: R.Tensor((1, 1, 2, 128), dtype="float32") = R.sin(mul63)
            cos: R.Tensor((1, 1, 2, 128), dtype="float32") = R.cos(mul63)
            concat3: R.Tensor((1, 1, 2, 256), dtype="float32") = R.concat((sin, cos), axis=-1)
            expand_dims80: R.Tensor((1, 1, 2, 1), dtype="int32") = R.expand_dims(concat1, axis=[-1])
            equal: R.Tensor((1, 1, 2, 1), dtype="bool") = R.equal(expand_dims80, R.const(-1, "int32"))
            where: R.Tensor((1, 1, 2, 256), dtype="float32") = R.where(equal, prompt_encoder_not_a_point_embed_weight, concat3)
            equal1: R.Tensor((1, 1, 2, 1), dtype="bool") = R.not_equal(expand_dims80, R.const(-10, "int32"))
            where1: R.Tensor((1, 1, 2, 256), dtype="float32") = R.where(equal1, where, R.const(0, "float32"))
            equal2: R.Tensor((1, 1, 2), dtype="bool") = R.equal(concat1, R.const(0, "int32"))
            equal3: R.Tensor((1, 1, 2), dtype="bool") = R.equal(concat1, R.const(1, "int32"))
            expand_dims81: R.Tensor((1, 1, 2, 1), dtype="bool") = R.expand_dims(equal2, axis=[-1])
            expand_dims82: R.Tensor((1, 1, 256), dtype="float32") = R.expand_dims(prompt_encoder_point_embed_0_weight, axis=[0])
            expand_dims83: R.Tensor((1, 1, 1, 256), dtype="float32") = R.expand_dims(expand_dims82, axis=[0])
            add127: R.Tensor((1, 1, 2, 256), dtype="float32") = R.add(where1, expand_dims83)
            where2: R.Tensor((1, 1, 2, 256), dtype="float32") = R.where(expand_dims81, add127, where1)
            expand_dims84: R.Tensor((1, 1, 2, 1), dtype="bool") = R.expand_dims(equal3, axis=[-1])
            expand_dims85: R.Tensor((1, 1, 256), dtype="float32") = R.expand_dims(prompt_encoder_point_embed_1_weight, axis=[0])
            expand_dims86: R.Tensor((1, 1, 1, 256), dtype="float32") = R.expand_dims(expand_dims85, axis=[0])
            add128: R.Tensor((1, 1, 2, 256), dtype="float32") = R.add(where2, expand_dims86)
            where3: R.Tensor((1, 1, 2, 256), dtype="float32") = R.where(expand_dims84, add128, where2)
            reshape164: R.Tensor((1, 256, 1, 1), dtype="float32") = R.reshape(prompt_encoder_no_mask_embed_weight, R.shape([1, 256, 1, 1]))
            lv3: R.Tensor((1, 256, 1, 1), dtype="float32") = R.repeat(reshape164, repeats=1, axis=0)
            lv4: R.Tensor((1, 256, 64, 1), dtype="float32") = R.repeat(lv3, repeats=64, axis=2)
            expand: R.Tensor((1, 256, 64, 64), dtype="float32") = R.repeat(lv4, repeats=64, axis=3)
            gv2: R.Tuple(R.Tuple(R.Tensor((1, 1, 2, 256), dtype="float32"), R.Tensor((1, 256, 64, 64), dtype="float32")), R.Tuple(R.Object)) = (where3, expand), (_io,)
            R.output(gv2)
        return gv2

    @R.function
    def main(pixel_values: R.Tensor((1, 3, 1024, 1024), dtype="float32"), input_points: R.Tensor((1, 1, 1, 2), dtype="float32"), _io: R.Object, shared_image_embedding_positional_embedding: R.Tensor((2, 128), dtype="float32"), vision_encoder_patch_embed_projection_weight: R.Tensor((768, 3, 16, 16), dtype="float32"), vision_encoder_patch_embed_projection_bias: R.Tensor((768,), dtype="float32"), vision_encoder_pos_embed: R.Tensor((1, 64, 64, 768), dtype="float32"), vision_encoder_layers_0_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_0_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_0_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_0_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_0_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_0_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_0_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_0_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_0_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_0_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_0_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_0_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_0_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_0_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_1_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_1_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_1_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_1_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_1_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_1_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_1_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_1_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_1_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_2_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_2_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_2_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_attn_rel_pos_h: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_2_attn_rel_pos_w: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_2_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_2_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_2_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_2_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_2_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_3_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_3_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_3_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_3_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_3_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_3_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_3_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_3_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_3_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_4_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_4_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_4_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_4_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_4_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_4_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_4_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_4_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_4_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_5_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_5_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_5_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_attn_rel_pos_h: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_5_attn_rel_pos_w: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_5_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_5_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_5_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_5_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_5_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_6_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_6_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_6_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_6_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_6_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_6_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_6_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_6_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_6_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_7_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_7_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_7_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_7_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_7_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_7_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_7_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_7_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_7_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_8_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_8_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_8_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_attn_rel_pos_h: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_8_attn_rel_pos_w: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_8_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_8_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_8_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_8_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_8_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_9_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_9_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_9_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_9_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_9_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_9_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_9_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_9_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_9_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_10_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_10_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_10_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_attn_rel_pos_h: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_10_attn_rel_pos_w: R.Tensor((27, 64), dtype="float32"), vision_encoder_layers_10_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_10_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_10_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_10_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_10_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_layer_norm1_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_layer_norm1_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_attn_qkv_weight: R.Tensor((2304, 768), dtype="float32"), vision_encoder_layers_11_attn_qkv_bias: R.Tensor((2304,), dtype="float32"), vision_encoder_layers_11_attn_proj_weight: R.Tensor((768, 768), dtype="float32"), vision_encoder_layers_11_attn_proj_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_attn_rel_pos_h: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_11_attn_rel_pos_w: R.Tensor((127, 64), dtype="float32"), vision_encoder_layers_11_layer_norm2_weight: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_layer_norm2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_layers_11_mlp_lin1_weight: R.Tensor((3072, 768), dtype="float32"), vision_encoder_layers_11_mlp_lin1_bias: R.Tensor((3072,), dtype="float32"), vision_encoder_layers_11_mlp_lin2_weight: R.Tensor((768, 3072), dtype="float32"), vision_encoder_layers_11_mlp_lin2_bias: R.Tensor((768,), dtype="float32"), vision_encoder_neck_conv1_weight: R.Tensor((256, 768, 1, 1), dtype="float32"), vision_encoder_neck_layer_norm1_weight: R.Tensor((256,), dtype="float32"), vision_encoder_neck_layer_norm1_bias: R.Tensor((256,), dtype="float32"), vision_encoder_neck_conv2_weight: R.Tensor((256, 256, 3, 3), dtype="float32"), vision_encoder_neck_layer_norm2_weight: R.Tensor((256,), dtype="float32"), vision_encoder_neck_layer_norm2_bias: R.Tensor((256,), dtype="float32"), prompt_encoder_shared_embedding_positional_embedding: R.Tensor((2, 128), dtype="float32"), prompt_encoder_mask_embed_conv1_weight: R.Tensor((4, 1, 2, 2), dtype="float32"), prompt_encoder_mask_embed_conv1_bias: R.Tensor((4,), dtype="float32"), prompt_encoder_mask_embed_conv2_weight: R.Tensor((16, 4, 2, 2), dtype="float32"), prompt_encoder_mask_embed_conv2_bias: R.Tensor((16,), dtype="float32"), prompt_encoder_mask_embed_conv3_weight: R.Tensor((256, 16, 1, 1), dtype="float32"), prompt_encoder_mask_embed_conv3_bias: R.Tensor((256,), dtype="float32"), prompt_encoder_mask_embed_layer_norm1_weight: R.Tensor((4,), dtype="float32"), prompt_encoder_mask_embed_layer_norm1_bias: R.Tensor((4,), dtype="float32"), prompt_encoder_mask_embed_layer_norm2_weight: R.Tensor((16,), dtype="float32"), prompt_encoder_mask_embed_layer_norm2_bias: R.Tensor((16,), dtype="float32"), prompt_encoder_no_mask_embed_weight: R.Tensor((1, 256), dtype="float32"), prompt_encoder_point_embed_0_weight: R.Tensor((1, 256), dtype="float32"), prompt_encoder_point_embed_1_weight: R.Tensor((1, 256), dtype="float32"), prompt_encoder_point_embed_2_weight: R.Tensor((1, 256), dtype="float32"), prompt_encoder_point_embed_3_weight: R.Tensor((1, 256), dtype="float32"), prompt_encoder_not_a_point_embed_weight: R.Tensor((1, 256), dtype="float32"), mask_decoder_iou_token_weight: R.Tensor((1, 256), dtype="float32"), mask_decoder_mask_tokens_weight: R.Tensor((4, 256), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_q_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_q_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_k_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_k_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_v_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_v_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_out_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_0_self_attn_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm1_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm1_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_q_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_q_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_k_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_k_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_v_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_v_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_out_proj_weight: R.Tensor((256, 128), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_token_to_image_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm2_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm2_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_mlp_lin1_weight: R.Tensor((2048, 256), dtype="float32"), mask_decoder_transformer_layers_0_mlp_lin1_bias: R.Tensor((2048,), dtype="float32"), mask_decoder_transformer_layers_0_mlp_lin2_weight: R.Tensor((256, 2048), dtype="float32"), mask_decoder_transformer_layers_0_mlp_lin2_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm3_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm3_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm4_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_layer_norm4_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_q_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_q_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_k_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_k_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_v_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_v_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_out_proj_weight: R.Tensor((256, 128), dtype="float32"), mask_decoder_transformer_layers_0_cross_attn_image_to_token_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_q_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_q_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_k_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_k_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_v_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_v_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_out_proj_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_transformer_layers_1_self_attn_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm1_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm1_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_q_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_q_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_k_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_k_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_v_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_v_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_out_proj_weight: R.Tensor((256, 128), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_token_to_image_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm2_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm2_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_mlp_lin1_weight: R.Tensor((2048, 256), dtype="float32"), mask_decoder_transformer_layers_1_mlp_lin1_bias: R.Tensor((2048,), dtype="float32"), mask_decoder_transformer_layers_1_mlp_lin2_weight: R.Tensor((256, 2048), dtype="float32"), mask_decoder_transformer_layers_1_mlp_lin2_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm3_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm3_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm4_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_layer_norm4_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_q_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_q_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_k_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_k_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_v_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_v_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_out_proj_weight: R.Tensor((256, 128), dtype="float32"), mask_decoder_transformer_layers_1_cross_attn_image_to_token_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_q_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_q_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_k_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_k_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_v_proj_weight: R.Tensor((128, 256), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_v_proj_bias: R.Tensor((128,), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_out_proj_weight: R.Tensor((256, 128), dtype="float32"), mask_decoder_transformer_final_attn_token_to_image_out_proj_bias: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layer_norm_final_attn_weight: R.Tensor((256,), dtype="float32"), mask_decoder_transformer_layer_norm_final_attn_bias: R.Tensor((256,), dtype="float32"), mask_decoder_upscale_conv1_weight: R.Tensor((256, 64, 2, 2), dtype="float32"), mask_decoder_upscale_conv1_bias: R.Tensor((64,), dtype="float32"), mask_decoder_upscale_conv2_weight: R.Tensor((64, 32, 2, 2), dtype="float32"), mask_decoder_upscale_conv2_bias: R.Tensor((32,), dtype="float32"), mask_decoder_upscale_layer_norm_weight: R.Tensor((64,), dtype="float32"), mask_decoder_upscale_layer_norm_bias: R.Tensor((64,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_proj_in_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_proj_in_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_proj_out_weight: R.Tensor((32, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_proj_out_bias: R.Tensor((32,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_layers_0_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_0_layers_0_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_proj_in_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_proj_in_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_proj_out_weight: R.Tensor((32, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_proj_out_bias: R.Tensor((32,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_layers_0_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_1_layers_0_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_proj_in_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_proj_in_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_proj_out_weight: R.Tensor((32, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_proj_out_bias: R.Tensor((32,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_layers_0_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_2_layers_0_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_proj_in_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_proj_in_bias: R.Tensor((256,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_proj_out_weight: R.Tensor((32, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_proj_out_bias: R.Tensor((32,), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_layers_0_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_output_hypernetworks_mlps_3_layers_0_bias: R.Tensor((256,), dtype="float32"), mask_decoder_iou_prediction_head_proj_in_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_iou_prediction_head_proj_in_bias: R.Tensor((256,), dtype="float32"), mask_decoder_iou_prediction_head_proj_out_weight: R.Tensor((4, 256), dtype="float32"), mask_decoder_iou_prediction_head_proj_out_bias: R.Tensor((4,), dtype="float32"), mask_decoder_iou_prediction_head_layers_0_weight: R.Tensor((256, 256), dtype="float32"), mask_decoder_iou_prediction_head_layers_0_bias: R.Tensor((256,), dtype="float32")) -> R.Tuple(R.Tuple(R.Tensor((1, 1, 3), dtype="float32"), R.Tensor((1, 1, 3, 256, 256), dtype="float32")), R.Tuple(R.Object)):
        R.func_attr({"global_symbol": "forward", "num_input": 3})
        with R.dataflow():
            ones2: R.Tensor((64, 64), dtype="float32") = R.ones(R.shape([64, 64]), dtype="float32")
            cumsum: R.Tensor((64, 64), dtype="float32") = R.cumsum(ones2, axis=0, dtype="void")
            subtract27: R.Tensor((64, 64), dtype="float32") = R.subtract(cumsum, R.const(0.5, "float32"))
            cumsum1: R.Tensor((64, 64), dtype="float32") = R.cumsum(ones2, axis=1, dtype="void")
            subtract28: R.Tensor((64, 64), dtype="float32") = R.subtract(cumsum1, R.const(0.5, "float32"))
            divide4: R.Tensor((64, 64), dtype="float32") = R.divide(subtract27, R.const(64, "float32"))
            divide5: R.Tensor((64, 64), dtype="float32") = R.divide(subtract28, R.const(64, "float32"))
            expand_dims87: R.Tensor((64, 64, 1), dtype="float32") = R.expand_dims(divide5, axis=[2])
            expand_dims88: R.Tensor((64, 64, 1), dtype="float32") = R.expand_dims(divide4, axis=[2])
            concat4: R.Tensor((64, 64, 2), dtype="float32") = R.concat((expand_dims87, expand_dims88), axis=-1)
            add129: R.Tensor((64, 64, 2), dtype="float32") = R.add(concat4, concat4)
            subtract29: R.Tensor((64, 64, 2), dtype="float32") = R.subtract(add129, R.const(1, "float32"))
            matmul73: R.Tensor((64, 64, 128), dtype="float32") = R.matmul(subtract29, prompt_encoder_shared_embedding_positional_embedding, out_dtype="void")
            mul64: R.Tensor((64, 64, 128), dtype="float32") = R.multiply(R.const(6.2831854820251465, "float32"), matmul73)
            sin1: R.Tensor((64, 64, 128), dtype="float32") = R.sin(mul64)
            cos1: R.Tensor((64, 64, 128), dtype="float32") = R.cos(mul64)
            concat5: R.Tensor((64, 64, 256), dtype="float32") = R.concat((sin1, cos1), axis=-1)
            permute_dims150: R.Tensor((256, 64, 64), dtype="float32") = R.permute_dims(concat5, axes=[2, 0, 1])
            unsqueeze: R.Tensor((1, 256, 64, 64), dtype="float32") = R.expand_dims(permute_dims150, axis=[0])
            repeat: R.Tensor((1, 256, 64, 64), dtype="float32") = R.repeat(unsqueeze, repeats=1, axis=0)
            lv5: R.Tensor((1, 768, 64, 64), dtype="float32") = R.nn.conv2d(pixel_values, vision_encoder_patch_embed_projection_weight, strides=[16, 16], padding=[0, 0, 0, 0], dilation=[1, 1], groups=1, data_layout="NCHW", kernel_layout="OIHW", out_layout="NCHW", out_dtype="void")
            lv6: R.Tensor((1, 768, 1, 1), dtype="float32") = R.reshape(vision_encoder_patch_embed_projection_bias, R.shape([1, 768, 1, 1]))
            conv2d3: R.Tensor((1, 768, 64, 64), dtype="float32") = R.add(lv5, lv6)
            permute_dims151: R.Tensor((1, 64, 64, 768), dtype="float32") = R.permute_dims(conv2d3, axes=[0, 2, 3, 1])
            add130: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(permute_dims151, vision_encoder_pos_embed)
            layer_norm24: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add130, vision_encoder_layers_0_layer_norm1_weight, vision_encoder_layers_0_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad8: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm24, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape165: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad8, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims152: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape165, axes=[0, 1, 3, 2, 4, 5])
            reshape166: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims152, R.shape([25, 14, 14, 768]))
            permute_dims153: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_0_attn_qkv_weight, axes=None)
            matmul74: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape166, permute_dims153, out_dtype="void")
            add131: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul74, vision_encoder_layers_0_attn_qkv_bias)
            reshape167: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add131, R.shape([25, 196, 3, 12, 64]))
            permute_dims154: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape167, axes=[2, 0, 3, 1, 4])
            reshape168: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims154, R.shape([3, 300, 196, 64]))
            split12: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape168, indices_or_sections=3, axis=0)
            split_012: R.Tensor((1, 300, 196, 64), dtype="float32") = split12[0]
            split_112: R.Tensor((1, 300, 196, 64), dtype="float32") = split12[1]
            split_212: R.Tensor((1, 300, 196, 64), dtype="float32") = split12[2]
            unbind36: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_012, axis=[0])
            unbind37: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_112, axis=[0])
            unbind38: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_212, axis=[0])
            mul65: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind36, R.const(0.125, "float32"))
            permute_dims155: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind37, axes=[0, 2, 1])
            matmul75: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul65, permute_dims155, out_dtype="void")
            reshape169: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_0_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims156: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape169, axes=[0, 2, 1])
            reshape170: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims156, R.shape([64, 27]))
            permute_dims157: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape170, axes=[1, 0])
            arange48: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims89: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange48, axis=[0])
            mul66: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims89, R.const(1, "int64"))
            arange49: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims90: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange49, axis=[1])
            mul67: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims90, R.const(1, "int64"))
            subtract30: R.Tensor((14, 14), dtype="int64") = R.subtract(mul66, mul67)
            add132: R.Tensor((14, 14), dtype="int64") = R.add(subtract30, R.const(13, "int64"))
            take24: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims157, add132, axis=0)
            reshape171: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_0_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims158: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape171, axes=[0, 2, 1])
            reshape172: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims158, R.shape([64, 27]))
            permute_dims159: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape172, axes=[1, 0])
            arange50: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims91: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange50, axis=[0])
            mul68: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims91, R.const(1, "int64"))
            arange51: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims92: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange51, axis=[1])
            mul69: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims92, R.const(1, "int64"))
            subtract31: R.Tensor((14, 14), dtype="int64") = R.subtract(mul68, mul69)
            add133: R.Tensor((14, 14), dtype="int64") = R.add(subtract31, R.const(13, "int64"))
            take25: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims159, add133, axis=0)
            reshape173: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind36, R.shape([300, 14, 14, 64]))
            einsum24: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape173, take24), subscripts="bhwc,hkc->bhwk")
            einsum25: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape173, take25), subscripts="bhwc,wkc->bhwk")
            reshape174: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul75, R.shape([300, 14, 14, 14, 14]))
            expand_dims93: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum24, axis=[3])
            expand_dims94: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum25, axis=[2])
            add134: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape174, expand_dims93)
            add135: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add134, expand_dims94)
            reshape175: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add135, R.shape([300, 196, 196]))
            softmax12: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape175, axis=-1)
            matmul76: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax12, unbind38, out_dtype="void")
            reshape176: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul76, R.shape([25, 12, 14, 14, 64]))
            permute_dims160: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape176, axes=[0, 2, 3, 1, 4])
            reshape177: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims160, R.shape([25, 14, 14, 768]))
            permute_dims161: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_0_attn_proj_weight, axes=None)
            matmul77: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape177, permute_dims161, out_dtype="void")
            add136: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul77, vision_encoder_layers_0_attn_proj_bias)
            reshape178: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add136, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims162: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape178, axes=[0, 1, 3, 2, 4, 5])
            reshape179: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims162, R.shape([1, 70, 70, 768]))
            strided_slice10: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape179, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add137: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add130, strided_slice10)
            layer_norm25: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add137, vision_encoder_layers_0_layer_norm2_weight, vision_encoder_layers_0_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims163: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_0_mlp_lin1_weight, axes=None)
            matmul78: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm25, permute_dims163, out_dtype="void")
            add138: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul78, vision_encoder_layers_0_mlp_lin1_bias)
            gelu12: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add138)
            permute_dims164: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_0_mlp_lin2_weight, axes=None)
            matmul79: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu12, permute_dims164, out_dtype="void")
            add139: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul79, vision_encoder_layers_0_mlp_lin2_bias)
            add140: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add137, add139)
            layer_norm26: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add140, vision_encoder_layers_1_layer_norm1_weight, vision_encoder_layers_1_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad9: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm26, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape180: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad9, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims165: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape180, axes=[0, 1, 3, 2, 4, 5])
            reshape181: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims165, R.shape([25, 14, 14, 768]))
            permute_dims166: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_1_attn_qkv_weight, axes=None)
            matmul80: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape181, permute_dims166, out_dtype="void")
            add141: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul80, vision_encoder_layers_1_attn_qkv_bias)
            reshape182: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add141, R.shape([25, 196, 3, 12, 64]))
            permute_dims167: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape182, axes=[2, 0, 3, 1, 4])
            reshape183: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims167, R.shape([3, 300, 196, 64]))
            split13: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape183, indices_or_sections=3, axis=0)
            split_013: R.Tensor((1, 300, 196, 64), dtype="float32") = split13[0]
            split_113: R.Tensor((1, 300, 196, 64), dtype="float32") = split13[1]
            split_213: R.Tensor((1, 300, 196, 64), dtype="float32") = split13[2]
            unbind39: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_013, axis=[0])
            unbind40: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_113, axis=[0])
            unbind41: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_213, axis=[0])
            mul70: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind39, R.const(0.125, "float32"))
            permute_dims168: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind40, axes=[0, 2, 1])
            matmul81: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul70, permute_dims168, out_dtype="void")
            reshape184: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_1_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims169: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape184, axes=[0, 2, 1])
            reshape185: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims169, R.shape([64, 27]))
            permute_dims170: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape185, axes=[1, 0])
            arange52: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims95: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange52, axis=[0])
            mul71: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims95, R.const(1, "int64"))
            arange53: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims96: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange53, axis=[1])
            mul72: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims96, R.const(1, "int64"))
            subtract32: R.Tensor((14, 14), dtype="int64") = R.subtract(mul71, mul72)
            add142: R.Tensor((14, 14), dtype="int64") = R.add(subtract32, R.const(13, "int64"))
            take26: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims170, add142, axis=0)
            reshape186: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_1_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims171: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape186, axes=[0, 2, 1])
            reshape187: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims171, R.shape([64, 27]))
            permute_dims172: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape187, axes=[1, 0])
            arange54: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims97: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange54, axis=[0])
            mul73: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims97, R.const(1, "int64"))
            arange55: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims98: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange55, axis=[1])
            mul74: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims98, R.const(1, "int64"))
            subtract33: R.Tensor((14, 14), dtype="int64") = R.subtract(mul73, mul74)
            add143: R.Tensor((14, 14), dtype="int64") = R.add(subtract33, R.const(13, "int64"))
            take27: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims172, add143, axis=0)
            reshape188: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind39, R.shape([300, 14, 14, 64]))
            einsum26: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape188, take26), subscripts="bhwc,hkc->bhwk")
            einsum27: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape188, take27), subscripts="bhwc,wkc->bhwk")
            reshape189: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul81, R.shape([300, 14, 14, 14, 14]))
            expand_dims99: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum26, axis=[3])
            expand_dims100: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum27, axis=[2])
            add144: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape189, expand_dims99)
            add145: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add144, expand_dims100)
            reshape190: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add145, R.shape([300, 196, 196]))
            softmax13: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape190, axis=-1)
            matmul82: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax13, unbind41, out_dtype="void")
            reshape191: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul82, R.shape([25, 12, 14, 14, 64]))
            permute_dims173: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape191, axes=[0, 2, 3, 1, 4])
            reshape192: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims173, R.shape([25, 14, 14, 768]))
            permute_dims174: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_1_attn_proj_weight, axes=None)
            matmul83: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape192, permute_dims174, out_dtype="void")
            add146: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul83, vision_encoder_layers_1_attn_proj_bias)
            reshape193: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add146, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims175: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape193, axes=[0, 1, 3, 2, 4, 5])
            reshape194: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims175, R.shape([1, 70, 70, 768]))
            strided_slice11: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape194, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add147: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add140, strided_slice11)
            layer_norm27: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add147, vision_encoder_layers_1_layer_norm2_weight, vision_encoder_layers_1_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims176: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_1_mlp_lin1_weight, axes=None)
            matmul84: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm27, permute_dims176, out_dtype="void")
            add148: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul84, vision_encoder_layers_1_mlp_lin1_bias)
            gelu13: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add148)
            permute_dims177: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_1_mlp_lin2_weight, axes=None)
            matmul85: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu13, permute_dims177, out_dtype="void")
            add149: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul85, vision_encoder_layers_1_mlp_lin2_bias)
            add150: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add147, add149)
            layer_norm28: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add150, vision_encoder_layers_2_layer_norm1_weight, vision_encoder_layers_2_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims178: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_2_attn_qkv_weight, axes=None)
            matmul86: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.matmul(layer_norm28, permute_dims178, out_dtype="void")
            add151: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.add(matmul86, vision_encoder_layers_2_attn_qkv_bias)
            reshape195: R.Tensor((1, 4096, 3, 12, 64), dtype="float32") = R.reshape(add151, R.shape([1, 4096, 3, 12, 64]))
            permute_dims179: R.Tensor((3, 1, 12, 4096, 64), dtype="float32") = R.permute_dims(reshape195, axes=[2, 0, 3, 1, 4])
            reshape196: R.Tensor((3, 12, 4096, 64), dtype="float32") = R.reshape(permute_dims179, R.shape([3, 12, 4096, 64]))
            split14: R.Tuple(R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32")) = R.split(reshape196, indices_or_sections=3, axis=0)
            split_014: R.Tensor((1, 12, 4096, 64), dtype="float32") = split14[0]
            split_114: R.Tensor((1, 12, 4096, 64), dtype="float32") = split14[1]
            split_214: R.Tensor((1, 12, 4096, 64), dtype="float32") = split14[2]
            unbind42: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_014, axis=[0])
            unbind43: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_114, axis=[0])
            unbind44: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_214, axis=[0])
            mul75: R.Tensor((12, 4096, 64), dtype="float32") = R.multiply(unbind42, R.const(0.125, "float32"))
            permute_dims180: R.Tensor((12, 64, 4096), dtype="float32") = R.permute_dims(unbind43, axes=[0, 2, 1])
            matmul87: R.Tensor((12, 4096, 4096), dtype="float32") = R.matmul(mul75, permute_dims180, out_dtype="void")
            reshape197: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_2_attn_rel_pos_h, R.shape([1, 127, 64]))
            permute_dims181: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape197, axes=[0, 2, 1])
            reshape198: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims181, R.shape([64, 127]))
            permute_dims182: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape198, axes=[1, 0])
            arange56: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims101: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange56, axis=[0])
            mul76: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims101, R.const(1, "int64"))
            arange57: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims102: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange57, axis=[1])
            mul77: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims102, R.const(1, "int64"))
            subtract34: R.Tensor((64, 64), dtype="int64") = R.subtract(mul76, mul77)
            add152: R.Tensor((64, 64), dtype="int64") = R.add(subtract34, R.const(63, "int64"))
            take28: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims182, add152, axis=0)
            reshape199: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_2_attn_rel_pos_w, R.shape([1, 127, 64]))
            permute_dims183: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape199, axes=[0, 2, 1])
            reshape200: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims183, R.shape([64, 127]))
            permute_dims184: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape200, axes=[1, 0])
            arange58: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims103: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange58, axis=[0])
            mul78: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims103, R.const(1, "int64"))
            arange59: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims104: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange59, axis=[1])
            mul79: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims104, R.const(1, "int64"))
            subtract35: R.Tensor((64, 64), dtype="int64") = R.subtract(mul78, mul79)
            add153: R.Tensor((64, 64), dtype="int64") = R.add(subtract35, R.const(63, "int64"))
            take29: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims184, add153, axis=0)
            reshape201: R.Tensor((12, 64, 64, 64), dtype="float32") = R.reshape(unbind42, R.shape([12, 64, 64, 64]))
            einsum28: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape201, take28), subscripts="bhwc,hkc->bhwk")
            einsum29: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape201, take29), subscripts="bhwc,wkc->bhwk")
            reshape202: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.reshape(matmul87, R.shape([12, 64, 64, 64, 64]))
            expand_dims105: R.Tensor((12, 64, 64, 1, 64), dtype="float32") = R.expand_dims(einsum28, axis=[3])
            expand_dims106: R.Tensor((12, 64, 1, 64, 64), dtype="float32") = R.expand_dims(einsum29, axis=[2])
            add154: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(reshape202, expand_dims105)
            add155: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(add154, expand_dims106)
            reshape203: R.Tensor((12, 4096, 4096), dtype="float32") = R.reshape(add155, R.shape([12, 4096, 4096]))
            softmax14: R.Tensor((12, 4096, 4096), dtype="float32") = R.nn.softmax(reshape203, axis=-1)
            matmul88: R.Tensor((12, 4096, 64), dtype="float32") = R.matmul(softmax14, unbind44, out_dtype="void")
            reshape204: R.Tensor((1, 12, 64, 64, 64), dtype="float32") = R.reshape(matmul88, R.shape([1, 12, 64, 64, 64]))
            permute_dims185: R.Tensor((1, 64, 64, 12, 64), dtype="float32") = R.permute_dims(reshape204, axes=[0, 2, 3, 1, 4])
            reshape205: R.Tensor((1, 64, 64, 768), dtype="float32") = R.reshape(permute_dims185, R.shape([1, 64, 64, 768]))
            permute_dims186: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_2_attn_proj_weight, axes=None)
            matmul89: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(reshape205, permute_dims186, out_dtype="void")
            add156: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul89, vision_encoder_layers_2_attn_proj_bias)
            add157: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add150, add156)
            layer_norm29: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add157, vision_encoder_layers_2_layer_norm2_weight, vision_encoder_layers_2_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims187: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_2_mlp_lin1_weight, axes=None)
            matmul90: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm29, permute_dims187, out_dtype="void")
            add158: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul90, vision_encoder_layers_2_mlp_lin1_bias)
            gelu14: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add158)
            permute_dims188: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_2_mlp_lin2_weight, axes=None)
            matmul91: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu14, permute_dims188, out_dtype="void")
            add159: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul91, vision_encoder_layers_2_mlp_lin2_bias)
            add160: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add157, add159)
            layer_norm30: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add160, vision_encoder_layers_3_layer_norm1_weight, vision_encoder_layers_3_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad10: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm30, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape206: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad10, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims189: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape206, axes=[0, 1, 3, 2, 4, 5])
            reshape207: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims189, R.shape([25, 14, 14, 768]))
            permute_dims190: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_3_attn_qkv_weight, axes=None)
            matmul92: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape207, permute_dims190, out_dtype="void")
            add161: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul92, vision_encoder_layers_3_attn_qkv_bias)
            reshape208: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add161, R.shape([25, 196, 3, 12, 64]))
            permute_dims191: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape208, axes=[2, 0, 3, 1, 4])
            reshape209: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims191, R.shape([3, 300, 196, 64]))
            split15: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape209, indices_or_sections=3, axis=0)
            split_015: R.Tensor((1, 300, 196, 64), dtype="float32") = split15[0]
            split_115: R.Tensor((1, 300, 196, 64), dtype="float32") = split15[1]
            split_215: R.Tensor((1, 300, 196, 64), dtype="float32") = split15[2]
            unbind45: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_015, axis=[0])
            unbind46: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_115, axis=[0])
            unbind47: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_215, axis=[0])
            mul80: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind45, R.const(0.125, "float32"))
            permute_dims192: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind46, axes=[0, 2, 1])
            matmul93: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul80, permute_dims192, out_dtype="void")
            reshape210: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_3_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims193: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape210, axes=[0, 2, 1])
            reshape211: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims193, R.shape([64, 27]))
            permute_dims194: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape211, axes=[1, 0])
            arange60: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims107: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange60, axis=[0])
            mul81: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims107, R.const(1, "int64"))
            arange61: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims108: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange61, axis=[1])
            mul82: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims108, R.const(1, "int64"))
            subtract36: R.Tensor((14, 14), dtype="int64") = R.subtract(mul81, mul82)
            add162: R.Tensor((14, 14), dtype="int64") = R.add(subtract36, R.const(13, "int64"))
            take30: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims194, add162, axis=0)
            reshape212: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_3_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims195: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape212, axes=[0, 2, 1])
            reshape213: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims195, R.shape([64, 27]))
            permute_dims196: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape213, axes=[1, 0])
            arange62: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims109: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange62, axis=[0])
            mul83: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims109, R.const(1, "int64"))
            arange63: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims110: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange63, axis=[1])
            mul84: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims110, R.const(1, "int64"))
            subtract37: R.Tensor((14, 14), dtype="int64") = R.subtract(mul83, mul84)
            add163: R.Tensor((14, 14), dtype="int64") = R.add(subtract37, R.const(13, "int64"))
            take31: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims196, add163, axis=0)
            reshape214: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind45, R.shape([300, 14, 14, 64]))
            einsum30: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape214, take30), subscripts="bhwc,hkc->bhwk")
            einsum31: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape214, take31), subscripts="bhwc,wkc->bhwk")
            reshape215: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul93, R.shape([300, 14, 14, 14, 14]))
            expand_dims111: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum30, axis=[3])
            expand_dims112: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum31, axis=[2])
            add164: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape215, expand_dims111)
            add165: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add164, expand_dims112)
            reshape216: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add165, R.shape([300, 196, 196]))
            softmax15: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape216, axis=-1)
            matmul94: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax15, unbind47, out_dtype="void")
            reshape217: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul94, R.shape([25, 12, 14, 14, 64]))
            permute_dims197: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape217, axes=[0, 2, 3, 1, 4])
            reshape218: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims197, R.shape([25, 14, 14, 768]))
            permute_dims198: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_3_attn_proj_weight, axes=None)
            matmul95: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape218, permute_dims198, out_dtype="void")
            add166: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul95, vision_encoder_layers_3_attn_proj_bias)
            reshape219: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add166, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims199: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape219, axes=[0, 1, 3, 2, 4, 5])
            reshape220: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims199, R.shape([1, 70, 70, 768]))
            strided_slice12: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape220, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add167: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add160, strided_slice12)
            layer_norm31: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add167, vision_encoder_layers_3_layer_norm2_weight, vision_encoder_layers_3_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims200: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_3_mlp_lin1_weight, axes=None)
            matmul96: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm31, permute_dims200, out_dtype="void")
            add168: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul96, vision_encoder_layers_3_mlp_lin1_bias)
            gelu15: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add168)
            permute_dims201: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_3_mlp_lin2_weight, axes=None)
            matmul97: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu15, permute_dims201, out_dtype="void")
            add169: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul97, vision_encoder_layers_3_mlp_lin2_bias)
            add170: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add167, add169)
            layer_norm32: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add170, vision_encoder_layers_4_layer_norm1_weight, vision_encoder_layers_4_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad11: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm32, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape221: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad11, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims202: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape221, axes=[0, 1, 3, 2, 4, 5])
            reshape222: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims202, R.shape([25, 14, 14, 768]))
            permute_dims203: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_4_attn_qkv_weight, axes=None)
            matmul98: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape222, permute_dims203, out_dtype="void")
            add171: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul98, vision_encoder_layers_4_attn_qkv_bias)
            reshape223: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add171, R.shape([25, 196, 3, 12, 64]))
            permute_dims204: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape223, axes=[2, 0, 3, 1, 4])
            reshape224: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims204, R.shape([3, 300, 196, 64]))
            split16: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape224, indices_or_sections=3, axis=0)
            split_016: R.Tensor((1, 300, 196, 64), dtype="float32") = split16[0]
            split_116: R.Tensor((1, 300, 196, 64), dtype="float32") = split16[1]
            split_216: R.Tensor((1, 300, 196, 64), dtype="float32") = split16[2]
            unbind48: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_016, axis=[0])
            unbind49: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_116, axis=[0])
            unbind50: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_216, axis=[0])
            mul85: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind48, R.const(0.125, "float32"))
            permute_dims205: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind49, axes=[0, 2, 1])
            matmul99: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul85, permute_dims205, out_dtype="void")
            reshape225: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_4_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims206: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape225, axes=[0, 2, 1])
            reshape226: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims206, R.shape([64, 27]))
            permute_dims207: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape226, axes=[1, 0])
            arange64: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims113: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange64, axis=[0])
            mul86: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims113, R.const(1, "int64"))
            arange65: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims114: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange65, axis=[1])
            mul87: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims114, R.const(1, "int64"))
            subtract38: R.Tensor((14, 14), dtype="int64") = R.subtract(mul86, mul87)
            add172: R.Tensor((14, 14), dtype="int64") = R.add(subtract38, R.const(13, "int64"))
            take32: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims207, add172, axis=0)
            reshape227: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_4_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims208: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape227, axes=[0, 2, 1])
            reshape228: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims208, R.shape([64, 27]))
            permute_dims209: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape228, axes=[1, 0])
            arange66: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims115: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange66, axis=[0])
            mul88: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims115, R.const(1, "int64"))
            arange67: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims116: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange67, axis=[1])
            mul89: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims116, R.const(1, "int64"))
            subtract39: R.Tensor((14, 14), dtype="int64") = R.subtract(mul88, mul89)
            add173: R.Tensor((14, 14), dtype="int64") = R.add(subtract39, R.const(13, "int64"))
            take33: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims209, add173, axis=0)
            reshape229: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind48, R.shape([300, 14, 14, 64]))
            einsum32: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape229, take32), subscripts="bhwc,hkc->bhwk")
            einsum33: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape229, take33), subscripts="bhwc,wkc->bhwk")
            reshape230: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul99, R.shape([300, 14, 14, 14, 14]))
            expand_dims117: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum32, axis=[3])
            expand_dims118: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum33, axis=[2])
            add174: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape230, expand_dims117)
            add175: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add174, expand_dims118)
            reshape231: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add175, R.shape([300, 196, 196]))
            softmax16: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape231, axis=-1)
            matmul100: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax16, unbind50, out_dtype="void")
            reshape232: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul100, R.shape([25, 12, 14, 14, 64]))
            permute_dims210: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape232, axes=[0, 2, 3, 1, 4])
            reshape233: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims210, R.shape([25, 14, 14, 768]))
            permute_dims211: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_4_attn_proj_weight, axes=None)
            matmul101: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape233, permute_dims211, out_dtype="void")
            add176: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul101, vision_encoder_layers_4_attn_proj_bias)
            reshape234: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add176, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims212: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape234, axes=[0, 1, 3, 2, 4, 5])
            reshape235: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims212, R.shape([1, 70, 70, 768]))
            strided_slice13: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape235, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add177: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add170, strided_slice13)
            layer_norm33: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add177, vision_encoder_layers_4_layer_norm2_weight, vision_encoder_layers_4_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims213: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_4_mlp_lin1_weight, axes=None)
            matmul102: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm33, permute_dims213, out_dtype="void")
            add178: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul102, vision_encoder_layers_4_mlp_lin1_bias)
            gelu16: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add178)
            permute_dims214: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_4_mlp_lin2_weight, axes=None)
            matmul103: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu16, permute_dims214, out_dtype="void")
            add179: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul103, vision_encoder_layers_4_mlp_lin2_bias)
            add180: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add177, add179)
            layer_norm34: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add180, vision_encoder_layers_5_layer_norm1_weight, vision_encoder_layers_5_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims215: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_5_attn_qkv_weight, axes=None)
            matmul104: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.matmul(layer_norm34, permute_dims215, out_dtype="void")
            add181: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.add(matmul104, vision_encoder_layers_5_attn_qkv_bias)
            reshape236: R.Tensor((1, 4096, 3, 12, 64), dtype="float32") = R.reshape(add181, R.shape([1, 4096, 3, 12, 64]))
            permute_dims216: R.Tensor((3, 1, 12, 4096, 64), dtype="float32") = R.permute_dims(reshape236, axes=[2, 0, 3, 1, 4])
            reshape237: R.Tensor((3, 12, 4096, 64), dtype="float32") = R.reshape(permute_dims216, R.shape([3, 12, 4096, 64]))
            split17: R.Tuple(R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32")) = R.split(reshape237, indices_or_sections=3, axis=0)
            split_017: R.Tensor((1, 12, 4096, 64), dtype="float32") = split17[0]
            split_117: R.Tensor((1, 12, 4096, 64), dtype="float32") = split17[1]
            split_217: R.Tensor((1, 12, 4096, 64), dtype="float32") = split17[2]
            unbind51: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_017, axis=[0])
            unbind52: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_117, axis=[0])
            unbind53: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_217, axis=[0])
            mul90: R.Tensor((12, 4096, 64), dtype="float32") = R.multiply(unbind51, R.const(0.125, "float32"))
            permute_dims217: R.Tensor((12, 64, 4096), dtype="float32") = R.permute_dims(unbind52, axes=[0, 2, 1])
            matmul105: R.Tensor((12, 4096, 4096), dtype="float32") = R.matmul(mul90, permute_dims217, out_dtype="void")
            reshape238: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_5_attn_rel_pos_h, R.shape([1, 127, 64]))
            permute_dims218: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape238, axes=[0, 2, 1])
            reshape239: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims218, R.shape([64, 127]))
            permute_dims219: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape239, axes=[1, 0])
            arange68: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims119: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange68, axis=[0])
            mul91: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims119, R.const(1, "int64"))
            arange69: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims120: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange69, axis=[1])
            mul92: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims120, R.const(1, "int64"))
            subtract40: R.Tensor((64, 64), dtype="int64") = R.subtract(mul91, mul92)
            add182: R.Tensor((64, 64), dtype="int64") = R.add(subtract40, R.const(63, "int64"))
            take34: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims219, add182, axis=0)
            reshape240: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_5_attn_rel_pos_w, R.shape([1, 127, 64]))
            permute_dims220: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape240, axes=[0, 2, 1])
            reshape241: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims220, R.shape([64, 127]))
            permute_dims221: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape241, axes=[1, 0])
            arange70: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims121: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange70, axis=[0])
            mul93: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims121, R.const(1, "int64"))
            arange71: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims122: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange71, axis=[1])
            mul94: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims122, R.const(1, "int64"))
            subtract41: R.Tensor((64, 64), dtype="int64") = R.subtract(mul93, mul94)
            add183: R.Tensor((64, 64), dtype="int64") = R.add(subtract41, R.const(63, "int64"))
            take35: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims221, add183, axis=0)
            reshape242: R.Tensor((12, 64, 64, 64), dtype="float32") = R.reshape(unbind51, R.shape([12, 64, 64, 64]))
            einsum34: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape242, take34), subscripts="bhwc,hkc->bhwk")
            einsum35: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape242, take35), subscripts="bhwc,wkc->bhwk")
            reshape243: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.reshape(matmul105, R.shape([12, 64, 64, 64, 64]))
            expand_dims123: R.Tensor((12, 64, 64, 1, 64), dtype="float32") = R.expand_dims(einsum34, axis=[3])
            expand_dims124: R.Tensor((12, 64, 1, 64, 64), dtype="float32") = R.expand_dims(einsum35, axis=[2])
            add184: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(reshape243, expand_dims123)
            add185: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(add184, expand_dims124)
            reshape244: R.Tensor((12, 4096, 4096), dtype="float32") = R.reshape(add185, R.shape([12, 4096, 4096]))
            softmax17: R.Tensor((12, 4096, 4096), dtype="float32") = R.nn.softmax(reshape244, axis=-1)
            matmul106: R.Tensor((12, 4096, 64), dtype="float32") = R.matmul(softmax17, unbind53, out_dtype="void")
            reshape245: R.Tensor((1, 12, 64, 64, 64), dtype="float32") = R.reshape(matmul106, R.shape([1, 12, 64, 64, 64]))
            permute_dims222: R.Tensor((1, 64, 64, 12, 64), dtype="float32") = R.permute_dims(reshape245, axes=[0, 2, 3, 1, 4])
            reshape246: R.Tensor((1, 64, 64, 768), dtype="float32") = R.reshape(permute_dims222, R.shape([1, 64, 64, 768]))
            permute_dims223: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_5_attn_proj_weight, axes=None)
            matmul107: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(reshape246, permute_dims223, out_dtype="void")
            add186: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul107, vision_encoder_layers_5_attn_proj_bias)
            add187: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add180, add186)
            layer_norm35: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add187, vision_encoder_layers_5_layer_norm2_weight, vision_encoder_layers_5_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims224: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_5_mlp_lin1_weight, axes=None)
            matmul108: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm35, permute_dims224, out_dtype="void")
            add188: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul108, vision_encoder_layers_5_mlp_lin1_bias)
            gelu17: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add188)
            permute_dims225: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_5_mlp_lin2_weight, axes=None)
            matmul109: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu17, permute_dims225, out_dtype="void")
            add189: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul109, vision_encoder_layers_5_mlp_lin2_bias)
            add190: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add187, add189)
            layer_norm36: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add190, vision_encoder_layers_6_layer_norm1_weight, vision_encoder_layers_6_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad12: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm36, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape247: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad12, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims226: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape247, axes=[0, 1, 3, 2, 4, 5])
            reshape248: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims226, R.shape([25, 14, 14, 768]))
            permute_dims227: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_6_attn_qkv_weight, axes=None)
            matmul110: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape248, permute_dims227, out_dtype="void")
            add191: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul110, vision_encoder_layers_6_attn_qkv_bias)
            reshape249: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add191, R.shape([25, 196, 3, 12, 64]))
            permute_dims228: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape249, axes=[2, 0, 3, 1, 4])
            reshape250: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims228, R.shape([3, 300, 196, 64]))
            split18: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape250, indices_or_sections=3, axis=0)
            split_018: R.Tensor((1, 300, 196, 64), dtype="float32") = split18[0]
            split_118: R.Tensor((1, 300, 196, 64), dtype="float32") = split18[1]
            split_218: R.Tensor((1, 300, 196, 64), dtype="float32") = split18[2]
            unbind54: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_018, axis=[0])
            unbind55: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_118, axis=[0])
            unbind56: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_218, axis=[0])
            mul95: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind54, R.const(0.125, "float32"))
            permute_dims229: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind55, axes=[0, 2, 1])
            matmul111: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul95, permute_dims229, out_dtype="void")
            reshape251: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_6_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims230: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape251, axes=[0, 2, 1])
            reshape252: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims230, R.shape([64, 27]))
            permute_dims231: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape252, axes=[1, 0])
            arange72: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims125: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange72, axis=[0])
            mul96: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims125, R.const(1, "int64"))
            arange73: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims126: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange73, axis=[1])
            mul97: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims126, R.const(1, "int64"))
            subtract42: R.Tensor((14, 14), dtype="int64") = R.subtract(mul96, mul97)
            add192: R.Tensor((14, 14), dtype="int64") = R.add(subtract42, R.const(13, "int64"))
            take36: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims231, add192, axis=0)
            reshape253: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_6_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims232: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape253, axes=[0, 2, 1])
            reshape254: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims232, R.shape([64, 27]))
            permute_dims233: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape254, axes=[1, 0])
            arange74: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims127: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange74, axis=[0])
            mul98: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims127, R.const(1, "int64"))
            arange75: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims128: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange75, axis=[1])
            mul99: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims128, R.const(1, "int64"))
            subtract43: R.Tensor((14, 14), dtype="int64") = R.subtract(mul98, mul99)
            add193: R.Tensor((14, 14), dtype="int64") = R.add(subtract43, R.const(13, "int64"))
            take37: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims233, add193, axis=0)
            reshape255: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind54, R.shape([300, 14, 14, 64]))
            einsum36: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape255, take36), subscripts="bhwc,hkc->bhwk")
            einsum37: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape255, take37), subscripts="bhwc,wkc->bhwk")
            reshape256: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul111, R.shape([300, 14, 14, 14, 14]))
            expand_dims129: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum36, axis=[3])
            expand_dims130: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum37, axis=[2])
            add194: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape256, expand_dims129)
            add195: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add194, expand_dims130)
            reshape257: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add195, R.shape([300, 196, 196]))
            softmax18: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape257, axis=-1)
            matmul112: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax18, unbind56, out_dtype="void")
            reshape258: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul112, R.shape([25, 12, 14, 14, 64]))
            permute_dims234: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape258, axes=[0, 2, 3, 1, 4])
            reshape259: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims234, R.shape([25, 14, 14, 768]))
            permute_dims235: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_6_attn_proj_weight, axes=None)
            matmul113: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape259, permute_dims235, out_dtype="void")
            add196: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul113, vision_encoder_layers_6_attn_proj_bias)
            reshape260: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add196, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims236: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape260, axes=[0, 1, 3, 2, 4, 5])
            reshape261: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims236, R.shape([1, 70, 70, 768]))
            strided_slice14: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape261, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add197: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add190, strided_slice14)
            layer_norm37: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add197, vision_encoder_layers_6_layer_norm2_weight, vision_encoder_layers_6_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims237: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_6_mlp_lin1_weight, axes=None)
            matmul114: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm37, permute_dims237, out_dtype="void")
            add198: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul114, vision_encoder_layers_6_mlp_lin1_bias)
            gelu18: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add198)
            permute_dims238: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_6_mlp_lin2_weight, axes=None)
            matmul115: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu18, permute_dims238, out_dtype="void")
            add199: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul115, vision_encoder_layers_6_mlp_lin2_bias)
            add200: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add197, add199)
            layer_norm38: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add200, vision_encoder_layers_7_layer_norm1_weight, vision_encoder_layers_7_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad13: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm38, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape262: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad13, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims239: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape262, axes=[0, 1, 3, 2, 4, 5])
            reshape263: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims239, R.shape([25, 14, 14, 768]))
            permute_dims240: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_7_attn_qkv_weight, axes=None)
            matmul116: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape263, permute_dims240, out_dtype="void")
            add201: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul116, vision_encoder_layers_7_attn_qkv_bias)
            reshape264: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add201, R.shape([25, 196, 3, 12, 64]))
            permute_dims241: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape264, axes=[2, 0, 3, 1, 4])
            reshape265: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims241, R.shape([3, 300, 196, 64]))
            split19: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape265, indices_or_sections=3, axis=0)
            split_019: R.Tensor((1, 300, 196, 64), dtype="float32") = split19[0]
            split_119: R.Tensor((1, 300, 196, 64), dtype="float32") = split19[1]
            split_219: R.Tensor((1, 300, 196, 64), dtype="float32") = split19[2]
            unbind57: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_019, axis=[0])
            unbind58: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_119, axis=[0])
            unbind59: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_219, axis=[0])
            mul100: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind57, R.const(0.125, "float32"))
            permute_dims242: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind58, axes=[0, 2, 1])
            matmul117: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul100, permute_dims242, out_dtype="void")
            reshape266: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_7_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims243: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape266, axes=[0, 2, 1])
            reshape267: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims243, R.shape([64, 27]))
            permute_dims244: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape267, axes=[1, 0])
            arange76: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims131: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange76, axis=[0])
            mul101: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims131, R.const(1, "int64"))
            arange77: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims132: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange77, axis=[1])
            mul102: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims132, R.const(1, "int64"))
            subtract44: R.Tensor((14, 14), dtype="int64") = R.subtract(mul101, mul102)
            add202: R.Tensor((14, 14), dtype="int64") = R.add(subtract44, R.const(13, "int64"))
            take38: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims244, add202, axis=0)
            reshape268: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_7_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims245: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape268, axes=[0, 2, 1])
            reshape269: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims245, R.shape([64, 27]))
            permute_dims246: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape269, axes=[1, 0])
            arange78: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims133: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange78, axis=[0])
            mul103: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims133, R.const(1, "int64"))
            arange79: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims134: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange79, axis=[1])
            mul104: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims134, R.const(1, "int64"))
            subtract45: R.Tensor((14, 14), dtype="int64") = R.subtract(mul103, mul104)
            add203: R.Tensor((14, 14), dtype="int64") = R.add(subtract45, R.const(13, "int64"))
            take39: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims246, add203, axis=0)
            reshape270: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind57, R.shape([300, 14, 14, 64]))
            einsum38: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape270, take38), subscripts="bhwc,hkc->bhwk")
            einsum39: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape270, take39), subscripts="bhwc,wkc->bhwk")
            reshape271: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul117, R.shape([300, 14, 14, 14, 14]))
            expand_dims135: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum38, axis=[3])
            expand_dims136: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum39, axis=[2])
            add204: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape271, expand_dims135)
            add205: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add204, expand_dims136)
            reshape272: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add205, R.shape([300, 196, 196]))
            softmax19: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape272, axis=-1)
            matmul118: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax19, unbind59, out_dtype="void")
            reshape273: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul118, R.shape([25, 12, 14, 14, 64]))
            permute_dims247: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape273, axes=[0, 2, 3, 1, 4])
            reshape274: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims247, R.shape([25, 14, 14, 768]))
            permute_dims248: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_7_attn_proj_weight, axes=None)
            matmul119: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape274, permute_dims248, out_dtype="void")
            add206: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul119, vision_encoder_layers_7_attn_proj_bias)
            reshape275: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add206, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims249: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape275, axes=[0, 1, 3, 2, 4, 5])
            reshape276: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims249, R.shape([1, 70, 70, 768]))
            strided_slice15: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape276, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add207: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add200, strided_slice15)
            layer_norm39: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add207, vision_encoder_layers_7_layer_norm2_weight, vision_encoder_layers_7_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims250: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_7_mlp_lin1_weight, axes=None)
            matmul120: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm39, permute_dims250, out_dtype="void")
            add208: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul120, vision_encoder_layers_7_mlp_lin1_bias)
            gelu19: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add208)
            permute_dims251: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_7_mlp_lin2_weight, axes=None)
            matmul121: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu19, permute_dims251, out_dtype="void")
            add209: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul121, vision_encoder_layers_7_mlp_lin2_bias)
            add210: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add207, add209)
            layer_norm40: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add210, vision_encoder_layers_8_layer_norm1_weight, vision_encoder_layers_8_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims252: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_8_attn_qkv_weight, axes=None)
            matmul122: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.matmul(layer_norm40, permute_dims252, out_dtype="void")
            add211: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.add(matmul122, vision_encoder_layers_8_attn_qkv_bias)
            reshape277: R.Tensor((1, 4096, 3, 12, 64), dtype="float32") = R.reshape(add211, R.shape([1, 4096, 3, 12, 64]))
            permute_dims253: R.Tensor((3, 1, 12, 4096, 64), dtype="float32") = R.permute_dims(reshape277, axes=[2, 0, 3, 1, 4])
            reshape278: R.Tensor((3, 12, 4096, 64), dtype="float32") = R.reshape(permute_dims253, R.shape([3, 12, 4096, 64]))
            split20: R.Tuple(R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32")) = R.split(reshape278, indices_or_sections=3, axis=0)
            split_020: R.Tensor((1, 12, 4096, 64), dtype="float32") = split20[0]
            split_120: R.Tensor((1, 12, 4096, 64), dtype="float32") = split20[1]
            split_220: R.Tensor((1, 12, 4096, 64), dtype="float32") = split20[2]
            unbind60: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_020, axis=[0])
            unbind61: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_120, axis=[0])
            unbind62: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_220, axis=[0])
            mul105: R.Tensor((12, 4096, 64), dtype="float32") = R.multiply(unbind60, R.const(0.125, "float32"))
            permute_dims254: R.Tensor((12, 64, 4096), dtype="float32") = R.permute_dims(unbind61, axes=[0, 2, 1])
            matmul123: R.Tensor((12, 4096, 4096), dtype="float32") = R.matmul(mul105, permute_dims254, out_dtype="void")
            reshape279: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_8_attn_rel_pos_h, R.shape([1, 127, 64]))
            permute_dims255: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape279, axes=[0, 2, 1])
            reshape280: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims255, R.shape([64, 127]))
            permute_dims256: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape280, axes=[1, 0])
            arange80: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims137: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange80, axis=[0])
            mul106: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims137, R.const(1, "int64"))
            arange81: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims138: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange81, axis=[1])
            mul107: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims138, R.const(1, "int64"))
            subtract46: R.Tensor((64, 64), dtype="int64") = R.subtract(mul106, mul107)
            add212: R.Tensor((64, 64), dtype="int64") = R.add(subtract46, R.const(63, "int64"))
            take40: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims256, add212, axis=0)
            reshape281: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_8_attn_rel_pos_w, R.shape([1, 127, 64]))
            permute_dims257: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape281, axes=[0, 2, 1])
            reshape282: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims257, R.shape([64, 127]))
            permute_dims258: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape282, axes=[1, 0])
            arange82: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims139: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange82, axis=[0])
            mul108: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims139, R.const(1, "int64"))
            arange83: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims140: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange83, axis=[1])
            mul109: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims140, R.const(1, "int64"))
            subtract47: R.Tensor((64, 64), dtype="int64") = R.subtract(mul108, mul109)
            add213: R.Tensor((64, 64), dtype="int64") = R.add(subtract47, R.const(63, "int64"))
            take41: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims258, add213, axis=0)
            reshape283: R.Tensor((12, 64, 64, 64), dtype="float32") = R.reshape(unbind60, R.shape([12, 64, 64, 64]))
            einsum40: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape283, take40), subscripts="bhwc,hkc->bhwk")
            einsum41: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape283, take41), subscripts="bhwc,wkc->bhwk")
            reshape284: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.reshape(matmul123, R.shape([12, 64, 64, 64, 64]))
            expand_dims141: R.Tensor((12, 64, 64, 1, 64), dtype="float32") = R.expand_dims(einsum40, axis=[3])
            expand_dims142: R.Tensor((12, 64, 1, 64, 64), dtype="float32") = R.expand_dims(einsum41, axis=[2])
            add214: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(reshape284, expand_dims141)
            add215: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(add214, expand_dims142)
            reshape285: R.Tensor((12, 4096, 4096), dtype="float32") = R.reshape(add215, R.shape([12, 4096, 4096]))
            softmax20: R.Tensor((12, 4096, 4096), dtype="float32") = R.nn.softmax(reshape285, axis=-1)
            matmul124: R.Tensor((12, 4096, 64), dtype="float32") = R.matmul(softmax20, unbind62, out_dtype="void")
            reshape286: R.Tensor((1, 12, 64, 64, 64), dtype="float32") = R.reshape(matmul124, R.shape([1, 12, 64, 64, 64]))
            permute_dims259: R.Tensor((1, 64, 64, 12, 64), dtype="float32") = R.permute_dims(reshape286, axes=[0, 2, 3, 1, 4])
            reshape287: R.Tensor((1, 64, 64, 768), dtype="float32") = R.reshape(permute_dims259, R.shape([1, 64, 64, 768]))
            permute_dims260: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_8_attn_proj_weight, axes=None)
            matmul125: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(reshape287, permute_dims260, out_dtype="void")
            add216: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul125, vision_encoder_layers_8_attn_proj_bias)
            add217: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add210, add216)
            layer_norm41: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add217, vision_encoder_layers_8_layer_norm2_weight, vision_encoder_layers_8_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims261: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_8_mlp_lin1_weight, axes=None)
            matmul126: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm41, permute_dims261, out_dtype="void")
            add218: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul126, vision_encoder_layers_8_mlp_lin1_bias)
            gelu20: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add218)
            permute_dims262: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_8_mlp_lin2_weight, axes=None)
            matmul127: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu20, permute_dims262, out_dtype="void")
            add219: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul127, vision_encoder_layers_8_mlp_lin2_bias)
            add220: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add217, add219)
            layer_norm42: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add220, vision_encoder_layers_9_layer_norm1_weight, vision_encoder_layers_9_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad14: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm42, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape288: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad14, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims263: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape288, axes=[0, 1, 3, 2, 4, 5])
            reshape289: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims263, R.shape([25, 14, 14, 768]))
            permute_dims264: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_9_attn_qkv_weight, axes=None)
            matmul128: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape289, permute_dims264, out_dtype="void")
            add221: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul128, vision_encoder_layers_9_attn_qkv_bias)
            reshape290: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add221, R.shape([25, 196, 3, 12, 64]))
            permute_dims265: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape290, axes=[2, 0, 3, 1, 4])
            reshape291: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims265, R.shape([3, 300, 196, 64]))
            split21: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape291, indices_or_sections=3, axis=0)
            split_021: R.Tensor((1, 300, 196, 64), dtype="float32") = split21[0]
            split_121: R.Tensor((1, 300, 196, 64), dtype="float32") = split21[1]
            split_221: R.Tensor((1, 300, 196, 64), dtype="float32") = split21[2]
            unbind63: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_021, axis=[0])
            unbind64: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_121, axis=[0])
            unbind65: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_221, axis=[0])
            mul110: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind63, R.const(0.125, "float32"))
            permute_dims266: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind64, axes=[0, 2, 1])
            matmul129: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul110, permute_dims266, out_dtype="void")
            reshape292: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_9_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims267: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape292, axes=[0, 2, 1])
            reshape293: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims267, R.shape([64, 27]))
            permute_dims268: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape293, axes=[1, 0])
            arange84: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims143: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange84, axis=[0])
            mul111: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims143, R.const(1, "int64"))
            arange85: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims144: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange85, axis=[1])
            mul112: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims144, R.const(1, "int64"))
            subtract48: R.Tensor((14, 14), dtype="int64") = R.subtract(mul111, mul112)
            add222: R.Tensor((14, 14), dtype="int64") = R.add(subtract48, R.const(13, "int64"))
            take42: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims268, add222, axis=0)
            reshape294: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_9_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims269: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape294, axes=[0, 2, 1])
            reshape295: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims269, R.shape([64, 27]))
            permute_dims270: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape295, axes=[1, 0])
            arange86: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims145: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange86, axis=[0])
            mul113: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims145, R.const(1, "int64"))
            arange87: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims146: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange87, axis=[1])
            mul114: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims146, R.const(1, "int64"))
            subtract49: R.Tensor((14, 14), dtype="int64") = R.subtract(mul113, mul114)
            add223: R.Tensor((14, 14), dtype="int64") = R.add(subtract49, R.const(13, "int64"))
            take43: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims270, add223, axis=0)
            reshape296: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind63, R.shape([300, 14, 14, 64]))
            einsum42: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape296, take42), subscripts="bhwc,hkc->bhwk")
            einsum43: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape296, take43), subscripts="bhwc,wkc->bhwk")
            reshape297: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul129, R.shape([300, 14, 14, 14, 14]))
            expand_dims147: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum42, axis=[3])
            expand_dims148: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum43, axis=[2])
            add224: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape297, expand_dims147)
            add225: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add224, expand_dims148)
            reshape298: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add225, R.shape([300, 196, 196]))
            softmax21: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape298, axis=-1)
            matmul130: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax21, unbind65, out_dtype="void")
            reshape299: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul130, R.shape([25, 12, 14, 14, 64]))
            permute_dims271: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape299, axes=[0, 2, 3, 1, 4])
            reshape300: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims271, R.shape([25, 14, 14, 768]))
            permute_dims272: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_9_attn_proj_weight, axes=None)
            matmul131: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape300, permute_dims272, out_dtype="void")
            add226: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul131, vision_encoder_layers_9_attn_proj_bias)
            reshape301: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add226, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims273: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape301, axes=[0, 1, 3, 2, 4, 5])
            reshape302: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims273, R.shape([1, 70, 70, 768]))
            strided_slice16: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape302, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add227: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add220, strided_slice16)
            layer_norm43: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add227, vision_encoder_layers_9_layer_norm2_weight, vision_encoder_layers_9_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims274: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_9_mlp_lin1_weight, axes=None)
            matmul132: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm43, permute_dims274, out_dtype="void")
            add228: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul132, vision_encoder_layers_9_mlp_lin1_bias)
            gelu21: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add228)
            permute_dims275: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_9_mlp_lin2_weight, axes=None)
            matmul133: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu21, permute_dims275, out_dtype="void")
            add229: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul133, vision_encoder_layers_9_mlp_lin2_bias)
            add230: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add227, add229)
            layer_norm44: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add230, vision_encoder_layers_10_layer_norm1_weight, vision_encoder_layers_10_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            pad15: R.Tensor((1, 70, 70, 768), dtype="float32") = R.nn.pad(layer_norm44, R.const(0, "int32"), pad_width=[0, 0, 0, 6, 0, 6, 0, 0], pad_mode="constant")
            reshape303: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.reshape(pad15, R.shape([1, 5, 14, 5, 14, 768]))
            permute_dims276: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.permute_dims(reshape303, axes=[0, 1, 3, 2, 4, 5])
            reshape304: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims276, R.shape([25, 14, 14, 768]))
            permute_dims277: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_10_attn_qkv_weight, axes=None)
            matmul134: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.matmul(reshape304, permute_dims277, out_dtype="void")
            add231: R.Tensor((25, 14, 14, 2304), dtype="float32") = R.add(matmul134, vision_encoder_layers_10_attn_qkv_bias)
            reshape305: R.Tensor((25, 196, 3, 12, 64), dtype="float32") = R.reshape(add231, R.shape([25, 196, 3, 12, 64]))
            permute_dims278: R.Tensor((3, 25, 12, 196, 64), dtype="float32") = R.permute_dims(reshape305, axes=[2, 0, 3, 1, 4])
            reshape306: R.Tensor((3, 300, 196, 64), dtype="float32") = R.reshape(permute_dims278, R.shape([3, 300, 196, 64]))
            split22: R.Tuple(R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32"), R.Tensor((1, 300, 196, 64), dtype="float32")) = R.split(reshape306, indices_or_sections=3, axis=0)
            split_022: R.Tensor((1, 300, 196, 64), dtype="float32") = split22[0]
            split_122: R.Tensor((1, 300, 196, 64), dtype="float32") = split22[1]
            split_222: R.Tensor((1, 300, 196, 64), dtype="float32") = split22[2]
            unbind66: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_022, axis=[0])
            unbind67: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_122, axis=[0])
            unbind68: R.Tensor((300, 196, 64), dtype="float32") = R.squeeze(split_222, axis=[0])
            mul115: R.Tensor((300, 196, 64), dtype="float32") = R.multiply(unbind66, R.const(0.125, "float32"))
            permute_dims279: R.Tensor((300, 64, 196), dtype="float32") = R.permute_dims(unbind67, axes=[0, 2, 1])
            matmul135: R.Tensor((300, 196, 196), dtype="float32") = R.matmul(mul115, permute_dims279, out_dtype="void")
            reshape307: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_10_attn_rel_pos_h, R.shape([1, 27, 64]))
            permute_dims280: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape307, axes=[0, 2, 1])
            reshape308: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims280, R.shape([64, 27]))
            permute_dims281: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape308, axes=[1, 0])
            arange88: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims149: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange88, axis=[0])
            mul116: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims149, R.const(1, "int64"))
            arange89: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims150: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange89, axis=[1])
            mul117: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims150, R.const(1, "int64"))
            subtract50: R.Tensor((14, 14), dtype="int64") = R.subtract(mul116, mul117)
            add232: R.Tensor((14, 14), dtype="int64") = R.add(subtract50, R.const(13, "int64"))
            take44: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims281, add232, axis=0)
            reshape309: R.Tensor((1, 27, 64), dtype="float32") = R.reshape(vision_encoder_layers_10_attn_rel_pos_w, R.shape([1, 27, 64]))
            permute_dims282: R.Tensor((1, 64, 27), dtype="float32") = R.permute_dims(reshape309, axes=[0, 2, 1])
            reshape310: R.Tensor((64, 27), dtype="float32") = R.reshape(permute_dims282, R.shape([64, 27]))
            permute_dims283: R.Tensor((27, 64), dtype="float32") = R.permute_dims(reshape310, axes=[1, 0])
            arange90: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims151: R.Tensor((1, 14), dtype="int64") = R.expand_dims(arange90, axis=[0])
            mul118: R.Tensor((1, 14), dtype="int64") = R.multiply(expand_dims151, R.const(1, "int64"))
            arange91: R.Tensor((14,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(14), R.prim_value(1), dtype="int64")
            expand_dims152: R.Tensor((14, 1), dtype="int64") = R.expand_dims(arange91, axis=[1])
            mul119: R.Tensor((14, 1), dtype="int64") = R.multiply(expand_dims152, R.const(1, "int64"))
            subtract51: R.Tensor((14, 14), dtype="int64") = R.subtract(mul118, mul119)
            add233: R.Tensor((14, 14), dtype="int64") = R.add(subtract51, R.const(13, "int64"))
            take45: R.Tensor((14, 14, 64), dtype="float32") = R.take(permute_dims283, add233, axis=0)
            reshape311: R.Tensor((300, 14, 14, 64), dtype="float32") = R.reshape(unbind66, R.shape([300, 14, 14, 64]))
            einsum44: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape311, take44), subscripts="bhwc,hkc->bhwk")
            einsum45: R.Tensor((300, 14, 14, 14), dtype="float32") = R.einsum((reshape311, take45), subscripts="bhwc,wkc->bhwk")
            reshape312: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.reshape(matmul135, R.shape([300, 14, 14, 14, 14]))
            expand_dims153: R.Tensor((300, 14, 14, 1, 14), dtype="float32") = R.expand_dims(einsum44, axis=[3])
            expand_dims154: R.Tensor((300, 14, 1, 14, 14), dtype="float32") = R.expand_dims(einsum45, axis=[2])
            add234: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(reshape312, expand_dims153)
            add235: R.Tensor((300, 14, 14, 14, 14), dtype="float32") = R.add(add234, expand_dims154)
            reshape313: R.Tensor((300, 196, 196), dtype="float32") = R.reshape(add235, R.shape([300, 196, 196]))
            softmax22: R.Tensor((300, 196, 196), dtype="float32") = R.nn.softmax(reshape313, axis=-1)
            matmul136: R.Tensor((300, 196, 64), dtype="float32") = R.matmul(softmax22, unbind68, out_dtype="void")
            reshape314: R.Tensor((25, 12, 14, 14, 64), dtype="float32") = R.reshape(matmul136, R.shape([25, 12, 14, 14, 64]))
            permute_dims284: R.Tensor((25, 14, 14, 12, 64), dtype="float32") = R.permute_dims(reshape314, axes=[0, 2, 3, 1, 4])
            reshape315: R.Tensor((25, 14, 14, 768), dtype="float32") = R.reshape(permute_dims284, R.shape([25, 14, 14, 768]))
            permute_dims285: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_10_attn_proj_weight, axes=None)
            matmul137: R.Tensor((25, 14, 14, 768), dtype="float32") = R.matmul(reshape315, permute_dims285, out_dtype="void")
            add236: R.Tensor((25, 14, 14, 768), dtype="float32") = R.add(matmul137, vision_encoder_layers_10_attn_proj_bias)
            reshape316: R.Tensor((1, 5, 5, 14, 14, 768), dtype="float32") = R.reshape(add236, R.shape([1, 5, 5, 14, 14, 768]))
            permute_dims286: R.Tensor((1, 5, 14, 5, 14, 768), dtype="float32") = R.permute_dims(reshape316, axes=[0, 1, 3, 2, 4, 5])
            reshape317: R.Tensor((1, 70, 70, 768), dtype="float32") = R.reshape(permute_dims286, R.shape([1, 70, 70, 768]))
            strided_slice17: R.Tensor((1, 64, 64, 768), dtype="float32") = R.strided_slice(reshape317, axes=[1, 2], begin=[0, 0], end=[64, 64], strides=None, assume_inbound=False)
            add237: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add230, strided_slice17)
            layer_norm45: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add237, vision_encoder_layers_10_layer_norm2_weight, vision_encoder_layers_10_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims287: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_10_mlp_lin1_weight, axes=None)
            matmul138: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm45, permute_dims287, out_dtype="void")
            add238: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul138, vision_encoder_layers_10_mlp_lin1_bias)
            gelu22: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add238)
            permute_dims288: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_10_mlp_lin2_weight, axes=None)
            matmul139: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu22, permute_dims288, out_dtype="void")
            add239: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul139, vision_encoder_layers_10_mlp_lin2_bias)
            add240: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add237, add239)
            layer_norm46: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add240, vision_encoder_layers_11_layer_norm1_weight, vision_encoder_layers_11_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims289: R.Tensor((768, 2304), dtype="float32") = R.permute_dims(vision_encoder_layers_11_attn_qkv_weight, axes=None)
            matmul140: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.matmul(layer_norm46, permute_dims289, out_dtype="void")
            add241: R.Tensor((1, 64, 64, 2304), dtype="float32") = R.add(matmul140, vision_encoder_layers_11_attn_qkv_bias)
            reshape318: R.Tensor((1, 4096, 3, 12, 64), dtype="float32") = R.reshape(add241, R.shape([1, 4096, 3, 12, 64]))
            permute_dims290: R.Tensor((3, 1, 12, 4096, 64), dtype="float32") = R.permute_dims(reshape318, axes=[2, 0, 3, 1, 4])
            reshape319: R.Tensor((3, 12, 4096, 64), dtype="float32") = R.reshape(permute_dims290, R.shape([3, 12, 4096, 64]))
            split23: R.Tuple(R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32"), R.Tensor((1, 12, 4096, 64), dtype="float32")) = R.split(reshape319, indices_or_sections=3, axis=0)
            split_023: R.Tensor((1, 12, 4096, 64), dtype="float32") = split23[0]
            split_123: R.Tensor((1, 12, 4096, 64), dtype="float32") = split23[1]
            split_223: R.Tensor((1, 12, 4096, 64), dtype="float32") = split23[2]
            unbind69: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_023, axis=[0])
            unbind70: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_123, axis=[0])
            unbind71: R.Tensor((12, 4096, 64), dtype="float32") = R.squeeze(split_223, axis=[0])
            mul120: R.Tensor((12, 4096, 64), dtype="float32") = R.multiply(unbind69, R.const(0.125, "float32"))
            permute_dims291: R.Tensor((12, 64, 4096), dtype="float32") = R.permute_dims(unbind70, axes=[0, 2, 1])
            matmul141: R.Tensor((12, 4096, 4096), dtype="float32") = R.matmul(mul120, permute_dims291, out_dtype="void")
            reshape320: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_11_attn_rel_pos_h, R.shape([1, 127, 64]))
            permute_dims292: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape320, axes=[0, 2, 1])
            reshape321: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims292, R.shape([64, 127]))
            permute_dims293: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape321, axes=[1, 0])
            arange92: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims155: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange92, axis=[0])
            mul121: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims155, R.const(1, "int64"))
            arange93: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims156: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange93, axis=[1])
            mul122: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims156, R.const(1, "int64"))
            subtract52: R.Tensor((64, 64), dtype="int64") = R.subtract(mul121, mul122)
            add242: R.Tensor((64, 64), dtype="int64") = R.add(subtract52, R.const(63, "int64"))
            take46: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims293, add242, axis=0)
            reshape322: R.Tensor((1, 127, 64), dtype="float32") = R.reshape(vision_encoder_layers_11_attn_rel_pos_w, R.shape([1, 127, 64]))
            permute_dims294: R.Tensor((1, 64, 127), dtype="float32") = R.permute_dims(reshape322, axes=[0, 2, 1])
            reshape323: R.Tensor((64, 127), dtype="float32") = R.reshape(permute_dims294, R.shape([64, 127]))
            permute_dims295: R.Tensor((127, 64), dtype="float32") = R.permute_dims(reshape323, axes=[1, 0])
            arange94: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims157: R.Tensor((1, 64), dtype="int64") = R.expand_dims(arange94, axis=[0])
            mul123: R.Tensor((1, 64), dtype="int64") = R.multiply(expand_dims157, R.const(1, "int64"))
            arange95: R.Tensor((64,), dtype="int64") = R.arange(R.prim_value(0), R.prim_value(64), R.prim_value(1), dtype="int64")
            expand_dims158: R.Tensor((64, 1), dtype="int64") = R.expand_dims(arange95, axis=[1])
            mul124: R.Tensor((64, 1), dtype="int64") = R.multiply(expand_dims158, R.const(1, "int64"))
            subtract53: R.Tensor((64, 64), dtype="int64") = R.subtract(mul123, mul124)
            add243: R.Tensor((64, 64), dtype="int64") = R.add(subtract53, R.const(63, "int64"))
            take47: R.Tensor((64, 64, 64), dtype="float32") = R.take(permute_dims295, add243, axis=0)
            reshape324: R.Tensor((12, 64, 64, 64), dtype="float32") = R.reshape(unbind69, R.shape([12, 64, 64, 64]))
            einsum46: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape324, take46), subscripts="bhwc,hkc->bhwk")
            einsum47: R.Tensor((12, 64, 64, 64), dtype="float32") = R.einsum((reshape324, take47), subscripts="bhwc,wkc->bhwk")
            reshape325: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.reshape(matmul141, R.shape([12, 64, 64, 64, 64]))
            expand_dims159: R.Tensor((12, 64, 64, 1, 64), dtype="float32") = R.expand_dims(einsum46, axis=[3])
            expand_dims160: R.Tensor((12, 64, 1, 64, 64), dtype="float32") = R.expand_dims(einsum47, axis=[2])
            add244: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(reshape325, expand_dims159)
            add245: R.Tensor((12, 64, 64, 64, 64), dtype="float32") = R.add(add244, expand_dims160)
            reshape326: R.Tensor((12, 4096, 4096), dtype="float32") = R.reshape(add245, R.shape([12, 4096, 4096]))
            softmax23: R.Tensor((12, 4096, 4096), dtype="float32") = R.nn.softmax(reshape326, axis=-1)
            matmul142: R.Tensor((12, 4096, 64), dtype="float32") = R.matmul(softmax23, unbind71, out_dtype="void")
            reshape327: R.Tensor((1, 12, 64, 64, 64), dtype="float32") = R.reshape(matmul142, R.shape([1, 12, 64, 64, 64]))
            permute_dims296: R.Tensor((1, 64, 64, 12, 64), dtype="float32") = R.permute_dims(reshape327, axes=[0, 2, 3, 1, 4])
            reshape328: R.Tensor((1, 64, 64, 768), dtype="float32") = R.reshape(permute_dims296, R.shape([1, 64, 64, 768]))
            permute_dims297: R.Tensor((768, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_11_attn_proj_weight, axes=None)
            matmul143: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(reshape328, permute_dims297, out_dtype="void")
            add246: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul143, vision_encoder_layers_11_attn_proj_bias)
            add247: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add240, add246)
            layer_norm47: R.Tensor((1, 64, 64, 768), dtype="float32") = R.nn.layer_norm(add247, vision_encoder_layers_11_layer_norm2_weight, vision_encoder_layers_11_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims298: R.Tensor((768, 3072), dtype="float32") = R.permute_dims(vision_encoder_layers_11_mlp_lin1_weight, axes=None)
            matmul144: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.matmul(layer_norm47, permute_dims298, out_dtype="void")
            add248: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.add(matmul144, vision_encoder_layers_11_mlp_lin1_bias)
            gelu23: R.Tensor((1, 64, 64, 3072), dtype="float32") = R.nn.gelu(add248)
            permute_dims299: R.Tensor((3072, 768), dtype="float32") = R.permute_dims(vision_encoder_layers_11_mlp_lin2_weight, axes=None)
            matmul145: R.Tensor((1, 64, 64, 768), dtype="float32") = R.matmul(gelu23, permute_dims299, out_dtype="void")
            add249: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(matmul145, vision_encoder_layers_11_mlp_lin2_bias)
            add250: R.Tensor((1, 64, 64, 768), dtype="float32") = R.add(add247, add249)
            permute_dims300: R.Tensor((1, 768, 64, 64), dtype="float32") = R.permute_dims(add250, axes=[0, 3, 1, 2])
            conv2d4: R.Tensor((1, 256, 64, 64), dtype="float32") = R.nn.conv2d(permute_dims300, vision_encoder_neck_conv1_weight, strides=[1, 1], padding=[0, 0, 0, 0], dilation=[1, 1], groups=1, data_layout="NCHW", kernel_layout="OIHW", out_layout="NCHW", out_dtype="void")
            mean8: R.Tensor((1, 1, 64, 64), dtype="float32") = R.mean(conv2d4, axis=[1], keepdims=True)
            subtract54: R.Tensor((1, 256, 64, 64), dtype="float32") = R.subtract(conv2d4, mean8)
            mean9: R.Tensor((1, 256, 64, 64), dtype="float32") = R.power(subtract54, R.const(2, "float32"))
            mean10: R.Tensor((1, 1, 64, 64), dtype="float32") = R.mean(mean9, axis=[1], keepdims=True)
            add251: R.Tensor((1, 1, 64, 64), dtype="float32") = R.add(mean10, R.const(9.9999999747524271e-07, "float32"))
            mean11: R.Tensor((1, 1, 64, 64), dtype="float32") = R.sqrt(add251)
            divide6: R.Tensor((1, 256, 64, 64), dtype="float32") = R.divide(subtract54, mean11)
            expand_dims161: R.Tensor((256, 1), dtype="float32") = R.expand_dims(vision_encoder_neck_layer_norm1_weight, axis=[1])
            expand_dims162: R.Tensor((256, 1, 1), dtype="float32") = R.expand_dims(expand_dims161, axis=[1])
            expand_dims163: R.Tensor((256, 1), dtype="float32") = R.expand_dims(vision_encoder_neck_layer_norm1_bias, axis=[1])
            expand_dims164: R.Tensor((256, 1, 1), dtype="float32") = R.expand_dims(expand_dims163, axis=[1])
            mul125: R.Tensor((1, 256, 64, 64), dtype="float32") = R.multiply(expand_dims162, divide6)
            add252: R.Tensor((1, 256, 64, 64), dtype="float32") = R.add(mul125, expand_dims164)
            conv2d5: R.Tensor((1, 256, 64, 64), dtype="float32") = R.nn.conv2d(add252, vision_encoder_neck_conv2_weight, strides=[1, 1], padding=[1, 1, 1, 1], dilation=[1, 1], groups=1, data_layout="NCHW", kernel_layout="OIHW", out_layout="NCHW", out_dtype="void")
            mean12: R.Tensor((1, 1, 64, 64), dtype="float32") = R.mean(conv2d5, axis=[1], keepdims=True)
            subtract55: R.Tensor((1, 256, 64, 64), dtype="float32") = R.subtract(conv2d5, mean12)
            mean13: R.Tensor((1, 256, 64, 64), dtype="float32") = R.power(subtract55, R.const(2, "float32"))
            mean14: R.Tensor((1, 1, 64, 64), dtype="float32") = R.mean(mean13, axis=[1], keepdims=True)
            add253: R.Tensor((1, 1, 64, 64), dtype="float32") = R.add(mean14, R.const(9.9999999747524271e-07, "float32"))
            mean15: R.Tensor((1, 1, 64, 64), dtype="float32") = R.sqrt(add253)
            divide7: R.Tensor((1, 256, 64, 64), dtype="float32") = R.divide(subtract55, mean15)
            expand_dims165: R.Tensor((256, 1), dtype="float32") = R.expand_dims(vision_encoder_neck_layer_norm2_weight, axis=[1])
            expand_dims166: R.Tensor((256, 1, 1), dtype="float32") = R.expand_dims(expand_dims165, axis=[1])
            expand_dims167: R.Tensor((256, 1), dtype="float32") = R.expand_dims(vision_encoder_neck_layer_norm2_bias, axis=[1])
            expand_dims168: R.Tensor((256, 1, 1), dtype="float32") = R.expand_dims(expand_dims167, axis=[1])
            mul126: R.Tensor((1, 256, 64, 64), dtype="float32") = R.multiply(expand_dims166, divide7)
            add254: R.Tensor((1, 256, 64, 64), dtype="float32") = R.add(mul126, expand_dims168)
            take48: R.Tensor((1, 1, 1), dtype="float32") = R.take(input_points, R.const(0, "int32"), axis=3)
            ones_like: R.Tensor((1, 1, 1), dtype="int32") = R.ones_like(take48, dtype="int32")
            add255: R.Tensor((1, 1, 1, 2), dtype="float32") = R.add(input_points, R.const(0.5, "float32"))
            zeros1: R.Tensor((1, 1, 1, 2), dtype="float32") = R.zeros(R.shape([1, 1, 1, 2]), dtype="float32")
            ones3: R.Tensor((1, 1, 1), dtype="int32") = R.ones(R.shape([1, 1, 1]), dtype="int32")
            mul127: R.Tensor((1, 1, 1), dtype="int32") = R.multiply(ones3, R.const(-1, "int32"))
            concat6: R.Tensor((1, 1, 2, 2), dtype="float32") = R.concat((add255, zeros1), axis=2)
            concat7: R.Tensor((1, 1, 2), dtype="int32") = R.concat((ones_like, mul127), axis=2)
            strided_slice18: R.Tensor((1, 1, 2, 1), dtype="float32") = R.strided_slice(concat6, axes=[3], begin=[0], end=[1], strides=None, assume_inbound=False)
            divide8: R.Tensor((1, 1, 2, 1), dtype="float32") = R.divide(strided_slice18, R.const(1024, "float32"))
            strided_slice19: R.Tensor((1, 1, 2, 1), dtype="float32") = R.strided_slice(concat6, axes=[3], begin=[1], end=[2], strides=None, assume_inbound=False)
            divide9: R.Tensor((1, 1, 2, 1), dtype="float32") = R.divide(strided_slice19, R.const(1024, "float32"))
            concat8: R.Tensor((1, 1, 2, 2), dtype="float32") = R.concat((divide8, divide9), axis=3)
            add256: R.Tensor((1, 1, 2, 2), dtype="float32") = R.add(concat8, concat8)
            subtract56: R.Tensor((1, 1, 2, 2), dtype="float32") = R.subtract(add256, R.const(1, "float32"))
            matmul146: R.Tensor((1, 1, 2, 128), dtype="float32") = R.matmul(subtract56, prompt_encoder_shared_embedding_positional_embedding, out_dtype="void")
            mul128: R.Tensor((1, 1, 2, 128), dtype="float32") = R.multiply(R.const(6.2831854820251465, "float32"), matmul146)
            sin2: R.Tensor((1, 1, 2, 128), dtype="float32") = R.sin(mul128)
            cos2: R.Tensor((1, 1, 2, 128), dtype="float32") = R.cos(mul128)
            concat9: R.Tensor((1, 1, 2, 256), dtype="float32") = R.concat((sin2, cos2), axis=-1)
            expand_dims169: R.Tensor((1, 1, 2, 1), dtype="int32") = R.expand_dims(concat7, axis=[-1])
            equal4: R.Tensor((1, 1, 2, 1), dtype="bool") = R.equal(expand_dims169, R.const(-1, "int32"))
            where4: R.Tensor((1, 1, 2, 256), dtype="float32") = R.where(equal4, prompt_encoder_not_a_point_embed_weight, concat9)
            equal5: R.Tensor((1, 1, 2, 1), dtype="bool") = R.not_equal(expand_dims169, R.const(-10, "int32"))
            where5: R.Tensor((1, 1, 2, 256), dtype="float32") = R.where(equal5, where4, R.const(0, "float32"))
            equal6: R.Tensor((1, 1, 2), dtype="bool") = R.equal(concat7, R.const(0, "int32"))
            equal7: R.Tensor((1, 1, 2), dtype="bool") = R.equal(concat7, R.const(1, "int32"))
            expand_dims170: R.Tensor((1, 1, 2, 1), dtype="bool") = R.expand_dims(equal6, axis=[-1])
            expand_dims171: R.Tensor((1, 1, 256), dtype="float32") = R.expand_dims(prompt_encoder_point_embed_0_weight, axis=[0])
            expand_dims172: R.Tensor((1, 1, 1, 256), dtype="float32") = R.expand_dims(expand_dims171, axis=[0])
            add257: R.Tensor((1, 1, 2, 256), dtype="float32") = R.add(where5, expand_dims172)
            where6: R.Tensor((1, 1, 2, 256), dtype="float32") = R.where(expand_dims170, add257, where5)
            expand_dims173: R.Tensor((1, 1, 2, 1), dtype="bool") = R.expand_dims(equal7, axis=[-1])
            expand_dims174: R.Tensor((1, 1, 256), dtype="float32") = R.expand_dims(prompt_encoder_point_embed_1_weight, axis=[0])
            expand_dims175: R.Tensor((1, 1, 1, 256), dtype="float32") = R.expand_dims(expand_dims174, axis=[0])
            add258: R.Tensor((1, 1, 2, 256), dtype="float32") = R.add(where6, expand_dims175)
            where7: R.Tensor((1, 1, 2, 256), dtype="float32") = R.where(expand_dims173, add258, where6)
            reshape329: R.Tensor((1, 256, 1, 1), dtype="float32") = R.reshape(prompt_encoder_no_mask_embed_weight, R.shape([1, 256, 1, 1]))
            lv7: R.Tensor((1, 256, 1, 1), dtype="float32") = R.repeat(reshape329, repeats=1, axis=0)
            lv8: R.Tensor((1, 256, 64, 1), dtype="float32") = R.repeat(lv7, repeats=64, axis=2)
            expand1: R.Tensor((1, 256, 64, 64), dtype="float32") = R.repeat(lv8, repeats=64, axis=3)
            concat10: R.Tensor((5, 256), dtype="float32") = R.concat((mask_decoder_iou_token_weight, mask_decoder_mask_tokens_weight), axis=0)
            tile: R.Tensor((1, 1, 5, 256), dtype="float32") = R.tile(concat10, repeats=[1, 1, 1, 1])
            sum: R.Tensor((), dtype="float32") = R.sum(where7, axis=None, keepdims=False)
            equal8: R.Tensor((1,), dtype="bool") = R.not_equal(sum, metadata["relax.expr.Constant"][0])
            concat11: R.Tensor((1, 1, 7, 256), dtype="float32") = R.concat((tile, where7), axis=2)
            add259: R.Tensor((1, 256, 64, 64), dtype="float32") = R.add(add254, expand1)
            repeat1: R.Tensor((1, 256, 64, 64), dtype="float32") = R.repeat(add259, repeats=1, axis=0)
            repeat2: R.Tensor((1, 256, 64, 64), dtype="float32") = R.repeat(repeat1, repeats=1, axis=0)
            repeat3: R.Tensor((1, 256, 64, 64), dtype="float32") = R.repeat(repeat, repeats=1, axis=0)
            reshape330: R.Tensor((1, 256, 4096, 1), dtype="float32") = R.reshape(repeat2, R.shape([1, 256, 4096, 1]))
            squeeze: R.Tensor((1, 256, 4096), dtype="float32") = R.squeeze(reshape330, axis=[3])
            permute_dims301: R.Tensor((1, 4096, 256), dtype="float32") = R.permute_dims(squeeze, axes=[0, 2, 1])
            unsqueeze1: R.Tensor((1, 1, 4096, 256), dtype="float32") = R.expand_dims(permute_dims301, axis=[1])
            reshape331: R.Tensor((1, 256, 4096, 1), dtype="float32") = R.reshape(repeat3, R.shape([1, 256, 4096, 1]))
            squeeze1: R.Tensor((1, 256, 4096), dtype="float32") = R.squeeze(reshape331, axis=[3])
            permute_dims302: R.Tensor((1, 4096, 256), dtype="float32") = R.permute_dims(squeeze1, axes=[0, 2, 1])
            unsqueeze2: R.Tensor((1, 1, 4096, 256), dtype="float32") = R.expand_dims(permute_dims302, axis=[1])
            permute_dims303: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_0_self_attn_q_proj_weight, axes=None)
            matmul147: R.Tensor((1, 1, 7, 256), dtype="float32") = R.matmul(concat11, permute_dims303, out_dtype="void")
            add260: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(matmul147, mask_decoder_transformer_layers_0_self_attn_q_proj_bias)
            permute_dims304: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_0_self_attn_k_proj_weight, axes=None)
            matmul148: R.Tensor((1, 1, 7, 256), dtype="float32") = R.matmul(concat11, permute_dims304, out_dtype="void")
            add261: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(matmul148, mask_decoder_transformer_layers_0_self_attn_k_proj_bias)
            permute_dims305: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_0_self_attn_v_proj_weight, axes=None)
            matmul149: R.Tensor((1, 1, 7, 256), dtype="float32") = R.matmul(concat11, permute_dims305, out_dtype="void")
            add262: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(matmul149, mask_decoder_transformer_layers_0_self_attn_v_proj_bias)
            reshape332: R.Tensor((1, 7, 8, 32), dtype="float32") = R.reshape(add260, R.shape([1, 7, 8, 32]))
            transpose: R.Tensor((1, 8, 7, 32), dtype="float32") = R.permute_dims(reshape332, axes=[0, 2, 1, 3])
            reshape333: R.Tensor((1, 7, 8, 32), dtype="float32") = R.reshape(add261, R.shape([1, 7, 8, 32]))
            transpose1: R.Tensor((1, 8, 7, 32), dtype="float32") = R.permute_dims(reshape333, axes=[0, 2, 1, 3])
            reshape334: R.Tensor((1, 7, 8, 32), dtype="float32") = R.reshape(add262, R.shape([1, 7, 8, 32]))
            transpose2: R.Tensor((1, 8, 7, 32), dtype="float32") = R.permute_dims(reshape334, axes=[0, 2, 1, 3])
            permute_dims306: R.Tensor((1, 8, 32, 7), dtype="float32") = R.permute_dims(transpose1, axes=[0, 1, 3, 2])
            matmul150: R.Tensor((1, 8, 7, 7), dtype="float32") = R.matmul(transpose, permute_dims306, out_dtype="void")
            divide10: R.Tensor((1, 8, 7, 7), dtype="float32") = R.divide(matmul150, R.const(5.6568541526794434, "float32"))
            softmax24: R.Tensor((1, 8, 7, 7), dtype="float32") = R.nn.softmax(divide10, axis=-1)
            matmul151: R.Tensor((1, 8, 7, 32), dtype="float32") = R.matmul(softmax24, transpose2, out_dtype="void")
            transpose3: R.Tensor((1, 7, 8, 32), dtype="float32") = R.permute_dims(matmul151, axes=[0, 2, 1, 3])
            reshape335: R.Tensor((1, 1, 7, 256), dtype="float32") = R.reshape(transpose3, R.shape([1, 1, 7, 256]))
            permute_dims307: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_0_self_attn_out_proj_weight, axes=None)
            matmul152: R.Tensor((1, 1, 7, 256), dtype="float32") = R.matmul(reshape335, permute_dims307, out_dtype="void")
            add263: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(matmul152, mask_decoder_transformer_layers_0_self_attn_out_proj_bias)
            layer_norm48: R.Tensor((1, 1, 7, 256), dtype="float32") = R.nn.layer_norm(add263, mask_decoder_transformer_layers_0_layer_norm1_weight, mask_decoder_transformer_layers_0_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            add264: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(layer_norm48, concat11)
            add265: R.Tensor((1, 1, 4096, 256), dtype="float32") = R.add(unsqueeze1, unsqueeze2)
            permute_dims308: R.Tensor((256, 128), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_0_cross_attn_token_to_image_q_proj_weight, axes=None)
            matmul153: R.Tensor((1, 1, 7, 128), dtype="float32") = R.matmul(add264, permute_dims308, out_dtype="void")
            add266: R.Tensor((1, 1, 7, 128), dtype="float32") = R.add(matmul153, mask_decoder_transformer_layers_0_cross_attn_token_to_image_q_proj_bias)
            permute_dims309: R.Tensor((256, 128), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_0_cross_attn_token_to_image_k_proj_weight, axes=None)
            matmul154: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.matmul(add265, permute_dims309, out_dtype="void")
            add267: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.add(matmul154, mask_decoder_transformer_layers_0_cross_attn_token_to_image_k_proj_bias)
            permute_dims310: R.Tensor((256, 128), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_0_cross_attn_token_to_image_v_proj_weight, axes=None)
            matmul155: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.matmul(unsqueeze1, permute_dims310, out_dtype="void")
            add268: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.add(matmul155, mask_decoder_transformer_layers_0_cross_attn_token_to_image_v_proj_bias)
            reshape336: R.Tensor((1, 7, 8, 16), dtype="float32") = R.reshape(add266, R.shape([1, 7, 8, 16]))
            transpose4: R.Tensor((1, 8, 7, 16), dtype="float32") = R.permute_dims(reshape336, axes=[0, 2, 1, 3])
            reshape337: R.Tensor((1, 4096, 8, 16), dtype="float32") = R.reshape(add267, R.shape([1, 4096, 8, 16]))
            transpose5: R.Tensor((1, 8, 4096, 16), dtype="float32") = R.permute_dims(reshape337, axes=[0, 2, 1, 3])
            reshape338: R.Tensor((1, 4096, 8, 16), dtype="float32") = R.reshape(add268, R.shape([1, 4096, 8, 16]))
            transpose6: R.Tensor((1, 8, 4096, 16), dtype="float32") = R.permute_dims(reshape338, axes=[0, 2, 1, 3])
            permute_dims311: R.Tensor((1, 8, 16, 4096), dtype="float32") = R.permute_dims(transpose5, axes=[0, 1, 3, 2])
            matmul156: R.Tensor((1, 8, 7, 4096), dtype="float32") = R.matmul(transpose4, permute_dims311, out_dtype="void")
            divide11: R.Tensor((1, 8, 7, 4096), dtype="float32") = R.divide(matmul156, R.const(4, "float32"))
            softmax25: R.Tensor((1, 8, 7, 4096), dtype="float32") = R.nn.softmax(divide11, axis=-1)
            matmul157: R.Tensor((1, 8, 7, 16), dtype="float32") = R.matmul(softmax25, transpose6, out_dtype="void")
            transpose7: R.Tensor((1, 7, 8, 16), dtype="float32") = R.permute_dims(matmul157, axes=[0, 2, 1, 3])
            reshape339: R.Tensor((1, 1, 7, 128), dtype="float32") = R.reshape(transpose7, R.shape([1, 1, 7, 128]))
            permute_dims312: R.Tensor((128, 256), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_0_cross_attn_token_to_image_out_proj_weight, axes=None)
            matmul158: R.Tensor((1, 1, 7, 256), dtype="float32") = R.matmul(reshape339, permute_dims312, out_dtype="void")
            add269: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(matmul158, mask_decoder_transformer_layers_0_cross_attn_token_to_image_out_proj_bias)
            add270: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(layer_norm48, add269)
            layer_norm49: R.Tensor((1, 1, 7, 256), dtype="float32") = R.nn.layer_norm(add270, mask_decoder_transformer_layers_0_layer_norm2_weight, mask_decoder_transformer_layers_0_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims313: R.Tensor((256, 2048), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_0_mlp_lin1_weight, axes=None)
            matmul159: R.Tensor((1, 1, 7, 2048), dtype="float32") = R.matmul(layer_norm49, permute_dims313, out_dtype="void")
            add271: R.Tensor((1, 1, 7, 2048), dtype="float32") = R.add(matmul159, mask_decoder_transformer_layers_0_mlp_lin1_bias)
            relu: R.Tensor((1, 1, 7, 2048), dtype="float32") = R.nn.relu(add271)
            permute_dims314: R.Tensor((2048, 256), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_0_mlp_lin2_weight, axes=None)
            matmul160: R.Tensor((1, 1, 7, 256), dtype="float32") = R.matmul(relu, permute_dims314, out_dtype="void")
            add272: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(matmul160, mask_decoder_transformer_layers_0_mlp_lin2_bias)
            add273: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(layer_norm49, add272)
            layer_norm50: R.Tensor((1, 1, 7, 256), dtype="float32") = R.nn.layer_norm(add273, mask_decoder_transformer_layers_0_layer_norm3_weight, mask_decoder_transformer_layers_0_layer_norm3_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            add274: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(layer_norm50, concat11)
            add275: R.Tensor((1, 1, 4096, 256), dtype="float32") = R.add(unsqueeze1, unsqueeze2)
            permute_dims315: R.Tensor((256, 128), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_0_cross_attn_image_to_token_q_proj_weight, axes=None)
            matmul161: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.matmul(add275, permute_dims315, out_dtype="void")
            add276: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.add(matmul161, mask_decoder_transformer_layers_0_cross_attn_image_to_token_q_proj_bias)
            permute_dims316: R.Tensor((256, 128), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_0_cross_attn_image_to_token_k_proj_weight, axes=None)
            matmul162: R.Tensor((1, 1, 7, 128), dtype="float32") = R.matmul(add274, permute_dims316, out_dtype="void")
            add277: R.Tensor((1, 1, 7, 128), dtype="float32") = R.add(matmul162, mask_decoder_transformer_layers_0_cross_attn_image_to_token_k_proj_bias)
            permute_dims317: R.Tensor((256, 128), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_0_cross_attn_image_to_token_v_proj_weight, axes=None)
            matmul163: R.Tensor((1, 1, 7, 128), dtype="float32") = R.matmul(layer_norm50, permute_dims317, out_dtype="void")
            add278: R.Tensor((1, 1, 7, 128), dtype="float32") = R.add(matmul163, mask_decoder_transformer_layers_0_cross_attn_image_to_token_v_proj_bias)
            reshape340: R.Tensor((1, 4096, 8, 16), dtype="float32") = R.reshape(add276, R.shape([1, 4096, 8, 16]))
            transpose8: R.Tensor((1, 8, 4096, 16), dtype="float32") = R.permute_dims(reshape340, axes=[0, 2, 1, 3])
            reshape341: R.Tensor((1, 7, 8, 16), dtype="float32") = R.reshape(add277, R.shape([1, 7, 8, 16]))
            transpose9: R.Tensor((1, 8, 7, 16), dtype="float32") = R.permute_dims(reshape341, axes=[0, 2, 1, 3])
            reshape342: R.Tensor((1, 7, 8, 16), dtype="float32") = R.reshape(add278, R.shape([1, 7, 8, 16]))
            transpose10: R.Tensor((1, 8, 7, 16), dtype="float32") = R.permute_dims(reshape342, axes=[0, 2, 1, 3])
            permute_dims318: R.Tensor((1, 8, 16, 7), dtype="float32") = R.permute_dims(transpose9, axes=[0, 1, 3, 2])
            matmul164: R.Tensor((1, 8, 4096, 7), dtype="float32") = R.matmul(transpose8, permute_dims318, out_dtype="void")
            divide12: R.Tensor((1, 8, 4096, 7), dtype="float32") = R.divide(matmul164, R.const(4, "float32"))
            softmax26: R.Tensor((1, 8, 4096, 7), dtype="float32") = R.nn.softmax(divide12, axis=-1)
            matmul165: R.Tensor((1, 8, 4096, 16), dtype="float32") = R.matmul(softmax26, transpose10, out_dtype="void")
            transpose11: R.Tensor((1, 4096, 8, 16), dtype="float32") = R.permute_dims(matmul165, axes=[0, 2, 1, 3])
            reshape343: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.reshape(transpose11, R.shape([1, 1, 4096, 128]))
            permute_dims319: R.Tensor((128, 256), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_0_cross_attn_image_to_token_out_proj_weight, axes=None)
            matmul166: R.Tensor((1, 1, 4096, 256), dtype="float32") = R.matmul(reshape343, permute_dims319, out_dtype="void")
            add279: R.Tensor((1, 1, 4096, 256), dtype="float32") = R.add(matmul166, mask_decoder_transformer_layers_0_cross_attn_image_to_token_out_proj_bias)
            add280: R.Tensor((1, 1, 4096, 256), dtype="float32") = R.add(unsqueeze1, add279)
            layer_norm51: R.Tensor((1, 1, 4096, 256), dtype="float32") = R.nn.layer_norm(add280, mask_decoder_transformer_layers_0_layer_norm4_weight, mask_decoder_transformer_layers_0_layer_norm4_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            add281: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(layer_norm50, concat11)
            permute_dims320: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_1_self_attn_q_proj_weight, axes=None)
            matmul167: R.Tensor((1, 1, 7, 256), dtype="float32") = R.matmul(add281, permute_dims320, out_dtype="void")
            add282: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(matmul167, mask_decoder_transformer_layers_1_self_attn_q_proj_bias)
            permute_dims321: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_1_self_attn_k_proj_weight, axes=None)
            matmul168: R.Tensor((1, 1, 7, 256), dtype="float32") = R.matmul(add281, permute_dims321, out_dtype="void")
            add283: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(matmul168, mask_decoder_transformer_layers_1_self_attn_k_proj_bias)
            permute_dims322: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_1_self_attn_v_proj_weight, axes=None)
            matmul169: R.Tensor((1, 1, 7, 256), dtype="float32") = R.matmul(layer_norm50, permute_dims322, out_dtype="void")
            add284: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(matmul169, mask_decoder_transformer_layers_1_self_attn_v_proj_bias)
            reshape344: R.Tensor((1, 7, 8, 32), dtype="float32") = R.reshape(add282, R.shape([1, 7, 8, 32]))
            transpose12: R.Tensor((1, 8, 7, 32), dtype="float32") = R.permute_dims(reshape344, axes=[0, 2, 1, 3])
            reshape345: R.Tensor((1, 7, 8, 32), dtype="float32") = R.reshape(add283, R.shape([1, 7, 8, 32]))
            transpose13: R.Tensor((1, 8, 7, 32), dtype="float32") = R.permute_dims(reshape345, axes=[0, 2, 1, 3])
            reshape346: R.Tensor((1, 7, 8, 32), dtype="float32") = R.reshape(add284, R.shape([1, 7, 8, 32]))
            transpose14: R.Tensor((1, 8, 7, 32), dtype="float32") = R.permute_dims(reshape346, axes=[0, 2, 1, 3])
            permute_dims323: R.Tensor((1, 8, 32, 7), dtype="float32") = R.permute_dims(transpose13, axes=[0, 1, 3, 2])
            matmul170: R.Tensor((1, 8, 7, 7), dtype="float32") = R.matmul(transpose12, permute_dims323, out_dtype="void")
            divide13: R.Tensor((1, 8, 7, 7), dtype="float32") = R.divide(matmul170, R.const(5.6568541526794434, "float32"))
            softmax27: R.Tensor((1, 8, 7, 7), dtype="float32") = R.nn.softmax(divide13, axis=-1)
            matmul171: R.Tensor((1, 8, 7, 32), dtype="float32") = R.matmul(softmax27, transpose14, out_dtype="void")
            transpose15: R.Tensor((1, 7, 8, 32), dtype="float32") = R.permute_dims(matmul171, axes=[0, 2, 1, 3])
            reshape347: R.Tensor((1, 1, 7, 256), dtype="float32") = R.reshape(transpose15, R.shape([1, 1, 7, 256]))
            permute_dims324: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_1_self_attn_out_proj_weight, axes=None)
            matmul172: R.Tensor((1, 1, 7, 256), dtype="float32") = R.matmul(reshape347, permute_dims324, out_dtype="void")
            add285: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(matmul172, mask_decoder_transformer_layers_1_self_attn_out_proj_bias)
            add286: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(layer_norm50, add285)
            layer_norm52: R.Tensor((1, 1, 7, 256), dtype="float32") = R.nn.layer_norm(add286, mask_decoder_transformer_layers_1_layer_norm1_weight, mask_decoder_transformer_layers_1_layer_norm1_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            add287: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(layer_norm52, concat11)
            add288: R.Tensor((1, 1, 4096, 256), dtype="float32") = R.add(layer_norm51, unsqueeze2)
            permute_dims325: R.Tensor((256, 128), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_1_cross_attn_token_to_image_q_proj_weight, axes=None)
            matmul173: R.Tensor((1, 1, 7, 128), dtype="float32") = R.matmul(add287, permute_dims325, out_dtype="void")
            add289: R.Tensor((1, 1, 7, 128), dtype="float32") = R.add(matmul173, mask_decoder_transformer_layers_1_cross_attn_token_to_image_q_proj_bias)
            permute_dims326: R.Tensor((256, 128), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_1_cross_attn_token_to_image_k_proj_weight, axes=None)
            matmul174: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.matmul(add288, permute_dims326, out_dtype="void")
            add290: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.add(matmul174, mask_decoder_transformer_layers_1_cross_attn_token_to_image_k_proj_bias)
            permute_dims327: R.Tensor((256, 128), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_1_cross_attn_token_to_image_v_proj_weight, axes=None)
            matmul175: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.matmul(layer_norm51, permute_dims327, out_dtype="void")
            add291: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.add(matmul175, mask_decoder_transformer_layers_1_cross_attn_token_to_image_v_proj_bias)
            reshape348: R.Tensor((1, 7, 8, 16), dtype="float32") = R.reshape(add289, R.shape([1, 7, 8, 16]))
            transpose16: R.Tensor((1, 8, 7, 16), dtype="float32") = R.permute_dims(reshape348, axes=[0, 2, 1, 3])
            reshape349: R.Tensor((1, 4096, 8, 16), dtype="float32") = R.reshape(add290, R.shape([1, 4096, 8, 16]))
            transpose17: R.Tensor((1, 8, 4096, 16), dtype="float32") = R.permute_dims(reshape349, axes=[0, 2, 1, 3])
            reshape350: R.Tensor((1, 4096, 8, 16), dtype="float32") = R.reshape(add291, R.shape([1, 4096, 8, 16]))
            transpose18: R.Tensor((1, 8, 4096, 16), dtype="float32") = R.permute_dims(reshape350, axes=[0, 2, 1, 3])
            permute_dims328: R.Tensor((1, 8, 16, 4096), dtype="float32") = R.permute_dims(transpose17, axes=[0, 1, 3, 2])
            matmul176: R.Tensor((1, 8, 7, 4096), dtype="float32") = R.matmul(transpose16, permute_dims328, out_dtype="void")
            divide14: R.Tensor((1, 8, 7, 4096), dtype="float32") = R.divide(matmul176, R.const(4, "float32"))
            softmax28: R.Tensor((1, 8, 7, 4096), dtype="float32") = R.nn.softmax(divide14, axis=-1)
            matmul177: R.Tensor((1, 8, 7, 16), dtype="float32") = R.matmul(softmax28, transpose18, out_dtype="void")
            transpose19: R.Tensor((1, 7, 8, 16), dtype="float32") = R.permute_dims(matmul177, axes=[0, 2, 1, 3])
            reshape351: R.Tensor((1, 1, 7, 128), dtype="float32") = R.reshape(transpose19, R.shape([1, 1, 7, 128]))
            permute_dims329: R.Tensor((128, 256), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_1_cross_attn_token_to_image_out_proj_weight, axes=None)
            matmul178: R.Tensor((1, 1, 7, 256), dtype="float32") = R.matmul(reshape351, permute_dims329, out_dtype="void")
            add292: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(matmul178, mask_decoder_transformer_layers_1_cross_attn_token_to_image_out_proj_bias)
            add293: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(layer_norm52, add292)
            layer_norm53: R.Tensor((1, 1, 7, 256), dtype="float32") = R.nn.layer_norm(add293, mask_decoder_transformer_layers_1_layer_norm2_weight, mask_decoder_transformer_layers_1_layer_norm2_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            permute_dims330: R.Tensor((256, 2048), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_1_mlp_lin1_weight, axes=None)
            matmul179: R.Tensor((1, 1, 7, 2048), dtype="float32") = R.matmul(layer_norm53, permute_dims330, out_dtype="void")
            add294: R.Tensor((1, 1, 7, 2048), dtype="float32") = R.add(matmul179, mask_decoder_transformer_layers_1_mlp_lin1_bias)
            relu1: R.Tensor((1, 1, 7, 2048), dtype="float32") = R.nn.relu(add294)
            permute_dims331: R.Tensor((2048, 256), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_1_mlp_lin2_weight, axes=None)
            matmul180: R.Tensor((1, 1, 7, 256), dtype="float32") = R.matmul(relu1, permute_dims331, out_dtype="void")
            add295: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(matmul180, mask_decoder_transformer_layers_1_mlp_lin2_bias)
            add296: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(layer_norm53, add295)
            layer_norm54: R.Tensor((1, 1, 7, 256), dtype="float32") = R.nn.layer_norm(add296, mask_decoder_transformer_layers_1_layer_norm3_weight, mask_decoder_transformer_layers_1_layer_norm3_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            add297: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(layer_norm54, concat11)
            add298: R.Tensor((1, 1, 4096, 256), dtype="float32") = R.add(layer_norm51, unsqueeze2)
            permute_dims332: R.Tensor((256, 128), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_1_cross_attn_image_to_token_q_proj_weight, axes=None)
            matmul181: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.matmul(add298, permute_dims332, out_dtype="void")
            add299: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.add(matmul181, mask_decoder_transformer_layers_1_cross_attn_image_to_token_q_proj_bias)
            permute_dims333: R.Tensor((256, 128), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_1_cross_attn_image_to_token_k_proj_weight, axes=None)
            matmul182: R.Tensor((1, 1, 7, 128), dtype="float32") = R.matmul(add297, permute_dims333, out_dtype="void")
            add300: R.Tensor((1, 1, 7, 128), dtype="float32") = R.add(matmul182, mask_decoder_transformer_layers_1_cross_attn_image_to_token_k_proj_bias)
            permute_dims334: R.Tensor((256, 128), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_1_cross_attn_image_to_token_v_proj_weight, axes=None)
            matmul183: R.Tensor((1, 1, 7, 128), dtype="float32") = R.matmul(layer_norm54, permute_dims334, out_dtype="void")
            add301: R.Tensor((1, 1, 7, 128), dtype="float32") = R.add(matmul183, mask_decoder_transformer_layers_1_cross_attn_image_to_token_v_proj_bias)
            reshape352: R.Tensor((1, 4096, 8, 16), dtype="float32") = R.reshape(add299, R.shape([1, 4096, 8, 16]))
            transpose20: R.Tensor((1, 8, 4096, 16), dtype="float32") = R.permute_dims(reshape352, axes=[0, 2, 1, 3])
            reshape353: R.Tensor((1, 7, 8, 16), dtype="float32") = R.reshape(add300, R.shape([1, 7, 8, 16]))
            transpose21: R.Tensor((1, 8, 7, 16), dtype="float32") = R.permute_dims(reshape353, axes=[0, 2, 1, 3])
            reshape354: R.Tensor((1, 7, 8, 16), dtype="float32") = R.reshape(add301, R.shape([1, 7, 8, 16]))
            transpose22: R.Tensor((1, 8, 7, 16), dtype="float32") = R.permute_dims(reshape354, axes=[0, 2, 1, 3])
            permute_dims335: R.Tensor((1, 8, 16, 7), dtype="float32") = R.permute_dims(transpose21, axes=[0, 1, 3, 2])
            matmul184: R.Tensor((1, 8, 4096, 7), dtype="float32") = R.matmul(transpose20, permute_dims335, out_dtype="void")
            divide15: R.Tensor((1, 8, 4096, 7), dtype="float32") = R.divide(matmul184, R.const(4, "float32"))
            softmax29: R.Tensor((1, 8, 4096, 7), dtype="float32") = R.nn.softmax(divide15, axis=-1)
            matmul185: R.Tensor((1, 8, 4096, 16), dtype="float32") = R.matmul(softmax29, transpose22, out_dtype="void")
            transpose23: R.Tensor((1, 4096, 8, 16), dtype="float32") = R.permute_dims(matmul185, axes=[0, 2, 1, 3])
            reshape355: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.reshape(transpose23, R.shape([1, 1, 4096, 128]))
            permute_dims336: R.Tensor((128, 256), dtype="float32") = R.permute_dims(mask_decoder_transformer_layers_1_cross_attn_image_to_token_out_proj_weight, axes=None)
            matmul186: R.Tensor((1, 1, 4096, 256), dtype="float32") = R.matmul(reshape355, permute_dims336, out_dtype="void")
            add302: R.Tensor((1, 1, 4096, 256), dtype="float32") = R.add(matmul186, mask_decoder_transformer_layers_1_cross_attn_image_to_token_out_proj_bias)
            add303: R.Tensor((1, 1, 4096, 256), dtype="float32") = R.add(layer_norm51, add302)
            layer_norm55: R.Tensor((1, 1, 4096, 256), dtype="float32") = R.nn.layer_norm(add303, mask_decoder_transformer_layers_1_layer_norm4_weight, mask_decoder_transformer_layers_1_layer_norm4_bias, axes=[-1], epsilon=9.9999999999999995e-07, center=True, scale=True)
            add304: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(layer_norm54, concat11)
            add305: R.Tensor((1, 1, 4096, 256), dtype="float32") = R.add(layer_norm55, unsqueeze2)
            permute_dims337: R.Tensor((256, 128), dtype="float32") = R.permute_dims(mask_decoder_transformer_final_attn_token_to_image_q_proj_weight, axes=None)
            matmul187: R.Tensor((1, 1, 7, 128), dtype="float32") = R.matmul(add304, permute_dims337, out_dtype="void")
            add306: R.Tensor((1, 1, 7, 128), dtype="float32") = R.add(matmul187, mask_decoder_transformer_final_attn_token_to_image_q_proj_bias)
            permute_dims338: R.Tensor((256, 128), dtype="float32") = R.permute_dims(mask_decoder_transformer_final_attn_token_to_image_k_proj_weight, axes=None)
            matmul188: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.matmul(add305, permute_dims338, out_dtype="void")
            add307: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.add(matmul188, mask_decoder_transformer_final_attn_token_to_image_k_proj_bias)
            permute_dims339: R.Tensor((256, 128), dtype="float32") = R.permute_dims(mask_decoder_transformer_final_attn_token_to_image_v_proj_weight, axes=None)
            matmul189: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.matmul(layer_norm55, permute_dims339, out_dtype="void")
            add308: R.Tensor((1, 1, 4096, 128), dtype="float32") = R.add(matmul189, mask_decoder_transformer_final_attn_token_to_image_v_proj_bias)
            reshape356: R.Tensor((1, 7, 8, 16), dtype="float32") = R.reshape(add306, R.shape([1, 7, 8, 16]))
            transpose24: R.Tensor((1, 8, 7, 16), dtype="float32") = R.permute_dims(reshape356, axes=[0, 2, 1, 3])
            reshape357: R.Tensor((1, 4096, 8, 16), dtype="float32") = R.reshape(add307, R.shape([1, 4096, 8, 16]))
            transpose25: R.Tensor((1, 8, 4096, 16), dtype="float32") = R.permute_dims(reshape357, axes=[0, 2, 1, 3])
            reshape358: R.Tensor((1, 4096, 8, 16), dtype="float32") = R.reshape(add308, R.shape([1, 4096, 8, 16]))
            transpose26: R.Tensor((1, 8, 4096, 16), dtype="float32") = R.permute_dims(reshape358, axes=[0, 2, 1, 3])
            permute_dims340: R.Tensor((1, 8, 16, 4096), dtype="float32") = R.permute_dims(transpose25, axes=[0, 1, 3, 2])
            matmul190: R.Tensor((1, 8, 7, 4096), dtype="float32") = R.matmul(transpose24, permute_dims340, out_dtype="void")
            divide16: R.Tensor((1, 8, 7, 4096), dtype="float32") = R.divide(matmul190, R.const(4, "float32"))
            softmax30: R.Tensor((1, 8, 7, 4096), dtype="float32") = R.nn.softmax(divide16, axis=-1)
            matmul191: R.Tensor((1, 8, 7, 16), dtype="float32") = R.matmul(softmax30, transpose26, out_dtype="void")
            transpose27: R.Tensor((1, 7, 8, 16), dtype="float32") = R.permute_dims(matmul191, axes=[0, 2, 1, 3])
            reshape359: R.Tensor((1, 1, 7, 128), dtype="float32") = R.reshape(transpose27, R.shape([1, 1, 7, 128]))
            permute_dims341: R.Tensor((128, 256), dtype="float32") = R.permute_dims(mask_decoder_transformer_final_attn_token_to_image_out_proj_weight, axes=None)
            matmul192: R.Tensor((1, 1, 7, 256), dtype="float32") = R.matmul(reshape359, permute_dims341, out_dtype="void")
            add309: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(matmul192, mask_decoder_transformer_final_attn_token_to_image_out_proj_bias)
            add310: R.Tensor((1, 1, 7, 256), dtype="float32") = R.add(layer_norm54, add309)
            layer_norm56: R.Tensor((1, 1, 7, 256), dtype="float32") = R.nn.layer_norm(add310, mask_decoder_transformer_layer_norm_final_attn_weight, mask_decoder_transformer_layer_norm_final_attn_bias, axes=[-1], epsilon=1.0000000000000001e-05, center=True, scale=True)
            take49: R.Tensor((1, 1, 256), dtype="float32") = R.take(layer_norm56, R.const(0, "int32"), axis=2)
            strided_slice20: R.Tensor((1, 1, 4, 256), dtype="float32") = R.strided_slice(layer_norm56, axes=[2], begin=[1], end=[5], strides=None, assume_inbound=False)
            transpose28: R.Tensor((1, 1, 256, 4096), dtype="float32") = R.permute_dims(layer_norm55, axes=[0, 1, 3, 2])
            reshape360: R.Tensor((1, 256, 64, 64), dtype="float32") = R.reshape(transpose28, R.shape([1, 256, 64, 64]))
            conv2d_transpose: R.Tensor((1, 64, 128, 128), dtype="float32") = R.nn.conv2d_transpose(reshape360, mask_decoder_upscale_conv1_weight, strides=[2, 2], padding=[0, 0, 0, 0], output_padding=[0, 0], dilation=[1, 1], groups=1, data_layout="NCHW", kernel_layout="IOHW", out_layout="NCHW", out_dtype="void")
            mean16: R.Tensor((1, 1, 128, 128), dtype="float32") = R.mean(conv2d_transpose, axis=[1], keepdims=True)
            subtract57: R.Tensor((1, 64, 128, 128), dtype="float32") = R.subtract(conv2d_transpose, mean16)
            mean17: R.Tensor((1, 64, 128, 128), dtype="float32") = R.power(subtract57, R.const(2, "float32"))
            mean18: R.Tensor((1, 1, 128, 128), dtype="float32") = R.mean(mean17, axis=[1], keepdims=True)
            add311: R.Tensor((1, 1, 128, 128), dtype="float32") = R.add(mean18, R.const(9.9999999747524271e-07, "float32"))
            mean19: R.Tensor((1, 1, 128, 128), dtype="float32") = R.sqrt(add311)
            divide17: R.Tensor((1, 64, 128, 128), dtype="float32") = R.divide(subtract57, mean19)
            expand_dims176: R.Tensor((64, 1), dtype="float32") = R.expand_dims(mask_decoder_upscale_layer_norm_weight, axis=[1])
            expand_dims177: R.Tensor((64, 1, 1), dtype="float32") = R.expand_dims(expand_dims176, axis=[1])
            expand_dims178: R.Tensor((64, 1), dtype="float32") = R.expand_dims(mask_decoder_upscale_layer_norm_bias, axis=[1])
            expand_dims179: R.Tensor((64, 1, 1), dtype="float32") = R.expand_dims(expand_dims178, axis=[1])
            mul129: R.Tensor((1, 64, 128, 128), dtype="float32") = R.multiply(expand_dims177, divide17)
            add312: R.Tensor((1, 64, 128, 128), dtype="float32") = R.add(mul129, expand_dims179)
            gelu24: R.Tensor((1, 64, 128, 128), dtype="float32") = R.nn.gelu(add312)
            conv2d_transpose1: R.Tensor((1, 32, 256, 256), dtype="float32") = R.nn.conv2d_transpose(gelu24, mask_decoder_upscale_conv2_weight, strides=[2, 2], padding=[0, 0, 0, 0], output_padding=[0, 0], dilation=[1, 1], groups=1, data_layout="NCHW", kernel_layout="IOHW", out_layout="NCHW", out_dtype="void")
            gelu25: R.Tensor((1, 32, 256, 256), dtype="float32") = R.nn.gelu(conv2d_transpose1)
            take50: R.Tensor((1, 1, 256), dtype="float32") = R.take(strided_slice20, R.const(0, "int32"), axis=2)
            permute_dims342: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_output_hypernetworks_mlps_0_proj_in_weight, axes=None)
            matmul193: R.Tensor((1, 1, 256), dtype="float32") = R.matmul(take50, permute_dims342, out_dtype="void")
            add313: R.Tensor((1, 1, 256), dtype="float32") = R.add(matmul193, mask_decoder_output_hypernetworks_mlps_0_proj_in_bias)
            relu2: R.Tensor((1, 1, 256), dtype="float32") = R.nn.relu(add313)
            permute_dims343: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_output_hypernetworks_mlps_0_layers_0_weight, axes=None)
            matmul194: R.Tensor((1, 1, 256), dtype="float32") = R.matmul(relu2, permute_dims343, out_dtype="void")
            add314: R.Tensor((1, 1, 256), dtype="float32") = R.add(matmul194, mask_decoder_output_hypernetworks_mlps_0_layers_0_bias)
            relu3: R.Tensor((1, 1, 256), dtype="float32") = R.nn.relu(add314)
            permute_dims344: R.Tensor((256, 32), dtype="float32") = R.permute_dims(mask_decoder_output_hypernetworks_mlps_0_proj_out_weight, axes=None)
            matmul195: R.Tensor((1, 1, 32), dtype="float32") = R.matmul(relu3, permute_dims344, out_dtype="void")
            add315: R.Tensor((1, 1, 32), dtype="float32") = R.add(matmul195, mask_decoder_output_hypernetworks_mlps_0_proj_out_bias)
            take51: R.Tensor((1, 1, 256), dtype="float32") = R.take(strided_slice20, R.const(1, "int32"), axis=2)
            permute_dims345: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_output_hypernetworks_mlps_1_proj_in_weight, axes=None)
            matmul196: R.Tensor((1, 1, 256), dtype="float32") = R.matmul(take51, permute_dims345, out_dtype="void")
            add316: R.Tensor((1, 1, 256), dtype="float32") = R.add(matmul196, mask_decoder_output_hypernetworks_mlps_1_proj_in_bias)
            relu4: R.Tensor((1, 1, 256), dtype="float32") = R.nn.relu(add316)
            permute_dims346: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_output_hypernetworks_mlps_1_layers_0_weight, axes=None)
            matmul197: R.Tensor((1, 1, 256), dtype="float32") = R.matmul(relu4, permute_dims346, out_dtype="void")
            add317: R.Tensor((1, 1, 256), dtype="float32") = R.add(matmul197, mask_decoder_output_hypernetworks_mlps_1_layers_0_bias)
            relu5: R.Tensor((1, 1, 256), dtype="float32") = R.nn.relu(add317)
            permute_dims347: R.Tensor((256, 32), dtype="float32") = R.permute_dims(mask_decoder_output_hypernetworks_mlps_1_proj_out_weight, axes=None)
            matmul198: R.Tensor((1, 1, 32), dtype="float32") = R.matmul(relu5, permute_dims347, out_dtype="void")
            add318: R.Tensor((1, 1, 32), dtype="float32") = R.add(matmul198, mask_decoder_output_hypernetworks_mlps_1_proj_out_bias)
            take52: R.Tensor((1, 1, 256), dtype="float32") = R.take(strided_slice20, R.const(2, "int32"), axis=2)
            permute_dims348: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_output_hypernetworks_mlps_2_proj_in_weight, axes=None)
            matmul199: R.Tensor((1, 1, 256), dtype="float32") = R.matmul(take52, permute_dims348, out_dtype="void")
            add319: R.Tensor((1, 1, 256), dtype="float32") = R.add(matmul199, mask_decoder_output_hypernetworks_mlps_2_proj_in_bias)
            relu6: R.Tensor((1, 1, 256), dtype="float32") = R.nn.relu(add319)
            permute_dims349: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_output_hypernetworks_mlps_2_layers_0_weight, axes=None)
            matmul200: R.Tensor((1, 1, 256), dtype="float32") = R.matmul(relu6, permute_dims349, out_dtype="void")
            add320: R.Tensor((1, 1, 256), dtype="float32") = R.add(matmul200, mask_decoder_output_hypernetworks_mlps_2_layers_0_bias)
            relu7: R.Tensor((1, 1, 256), dtype="float32") = R.nn.relu(add320)
            permute_dims350: R.Tensor((256, 32), dtype="float32") = R.permute_dims(mask_decoder_output_hypernetworks_mlps_2_proj_out_weight, axes=None)
            matmul201: R.Tensor((1, 1, 32), dtype="float32") = R.matmul(relu7, permute_dims350, out_dtype="void")
            add321: R.Tensor((1, 1, 32), dtype="float32") = R.add(matmul201, mask_decoder_output_hypernetworks_mlps_2_proj_out_bias)
            take53: R.Tensor((1, 1, 256), dtype="float32") = R.take(strided_slice20, R.const(3, "int32"), axis=2)
            permute_dims351: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_output_hypernetworks_mlps_3_proj_in_weight, axes=None)
            matmul202: R.Tensor((1, 1, 256), dtype="float32") = R.matmul(take53, permute_dims351, out_dtype="void")
            add322: R.Tensor((1, 1, 256), dtype="float32") = R.add(matmul202, mask_decoder_output_hypernetworks_mlps_3_proj_in_bias)
            relu8: R.Tensor((1, 1, 256), dtype="float32") = R.nn.relu(add322)
            permute_dims352: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_output_hypernetworks_mlps_3_layers_0_weight, axes=None)
            matmul203: R.Tensor((1, 1, 256), dtype="float32") = R.matmul(relu8, permute_dims352, out_dtype="void")
            add323: R.Tensor((1, 1, 256), dtype="float32") = R.add(matmul203, mask_decoder_output_hypernetworks_mlps_3_layers_0_bias)
            relu9: R.Tensor((1, 1, 256), dtype="float32") = R.nn.relu(add323)
            permute_dims353: R.Tensor((256, 32), dtype="float32") = R.permute_dims(mask_decoder_output_hypernetworks_mlps_3_proj_out_weight, axes=None)
            matmul204: R.Tensor((1, 1, 32), dtype="float32") = R.matmul(relu9, permute_dims353, out_dtype="void")
            add324: R.Tensor((1, 1, 32), dtype="float32") = R.add(matmul204, mask_decoder_output_hypernetworks_mlps_3_proj_out_bias)
            expand_dims180: R.Tensor((1, 1, 1, 32), dtype="float32") = R.expand_dims(add315, axis=[2])
            expand_dims181: R.Tensor((1, 1, 1, 32), dtype="float32") = R.expand_dims(add318, axis=[2])
            expand_dims182: R.Tensor((1, 1, 1, 32), dtype="float32") = R.expand_dims(add321, axis=[2])
            expand_dims183: R.Tensor((1, 1, 1, 32), dtype="float32") = R.expand_dims(add324, axis=[2])
            concat12: R.Tensor((1, 1, 4, 32), dtype="float32") = R.concat((expand_dims180, expand_dims181, expand_dims182, expand_dims183), axis=2)
            reshape361: R.Tensor((1, 1, 32, 65536), dtype="float32") = R.reshape(gelu25, R.shape([1, 1, 32, 65536]))
            matmul205: R.Tensor((1, 1, 4, 65536), dtype="float32") = R.matmul(concat12, reshape361, out_dtype="void")
            reshape362: R.Tensor((1, 1, 4, 256, 256), dtype="float32") = R.reshape(matmul205, R.shape([1, 1, 4, 256, 256]))
            permute_dims354: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_iou_prediction_head_proj_in_weight, axes=None)
            matmul206: R.Tensor((1, 1, 256), dtype="float32") = R.matmul(take49, permute_dims354, out_dtype="void")
            add325: R.Tensor((1, 1, 256), dtype="float32") = R.add(matmul206, mask_decoder_iou_prediction_head_proj_in_bias)
            relu10: R.Tensor((1, 1, 256), dtype="float32") = R.nn.relu(add325)
            permute_dims355: R.Tensor((256, 256), dtype="float32") = R.permute_dims(mask_decoder_iou_prediction_head_layers_0_weight, axes=None)
            matmul207: R.Tensor((1, 1, 256), dtype="float32") = R.matmul(relu10, permute_dims355, out_dtype="void")
            add326: R.Tensor((1, 1, 256), dtype="float32") = R.add(matmul207, mask_decoder_iou_prediction_head_layers_0_bias)
            relu11: R.Tensor((1, 1, 256), dtype="float32") = R.nn.relu(add326)
            permute_dims356: R.Tensor((256, 4), dtype="float32") = R.permute_dims(mask_decoder_iou_prediction_head_proj_out_weight, axes=None)
            matmul208: R.Tensor((1, 1, 4), dtype="float32") = R.matmul(relu11, permute_dims356, out_dtype="void")
            add327: R.Tensor((1, 1, 4), dtype="float32") = R.add(matmul208, mask_decoder_iou_prediction_head_proj_out_bias)
            strided_slice21: R.Tensor((1, 1, 3, 256, 256), dtype="float32") = R.strided_slice(reshape362, axes=[2], begin=[1], end=[4], strides=None, assume_inbound=False)
            strided_slice22: R.Tensor((1, 1, 3), dtype="float32") = R.strided_slice(add327, axes=[2], begin=[1], end=[4], strides=None, assume_inbound=False)
            gv3: R.Tuple(R.Tuple(R.Tensor((1, 1, 3), dtype="float32"), R.Tensor((1, 1, 3, 256, 256), dtype="float32")), R.Tuple(R.Object)) = (strided_slice22, strided_slice21), (_io,)
            R.output(gv3)
        return gv3
